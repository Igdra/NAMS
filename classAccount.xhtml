<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: Account Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">Account Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="Account" -->
<p>Security structure to maintain characters, roles, and permissions.  
</p>

<p><code>#include &quot;<a class="el" href="account_8h_source.xhtml">account.h</a>&quot;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for Account:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount__coll__graph.svg" width="100%" height="506"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>

<p><a href="classAccount-members.xhtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Core</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#aa82e62e930fb3a8ac58a4592f323db75">Delete</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Unload an account from memory that was previously loaded via <a class="el" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf" title="Create a new account.">Account::New()</a>.  <a href="#aa82e62e930fb3a8ac58a4592f323db75"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf">New</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const bool &amp;exists)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new account.  <a href="#adc4545f17264112e532b5a48abe94baf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff">Serialize</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Serialize the account data and write them to <a class="el" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a>.  <a href="#a87dfcb1fd6c275ea89ec6f279e7ee8ff"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#ae236325fef7b2269f54e9567577e0b92">Unserialize</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Unserialize the account data from <a class="el" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a>.  <a href="#ae236325fef7b2269f54e9567577e0b92"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Query</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9">gClient</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the associated <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>.  <a href="#a1314e9f054a5354c77c20f48e1c6d7f9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const list&lt; pair&lt; string, <br class="typebreak"/>
string &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a3e2d487e0962a90f4f00cf0ac73cbb7e">gLogins</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a list of either login successes or failures based on <a class="el" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797">ACT_LOGIN</a>.  <a href="#a3e2d487e0962a90f4f00cf0ac73cbb7e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24">gName</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the account.  <a href="#aa5598c7fb0b2099dfee5d15696a5ef24"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a9a9ee5a78d3353c688c6418c2a88ba54">gSecurity</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the authorized security level of the account.  <a href="#a9a9ee5a78d3353c688c6418c2a88ba54"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Manipulate</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#ae5536f896c11d85f4f948484dd70449a">aLogin</a> (const string &amp;date, const string &amp;name, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a hostname to the list of previous successful logins. Bumps the oldest entry.  <a href="#ae5536f896c11d85f4f948484dd70449a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a714070b95fbb57cb2f1a8e68046d92ef">sSecurity</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;security)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the security level of the account.  <a href="#a714070b95fbb57cb2f1a8e68046d92ef"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Internal</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a366660970b5eeb5c17436062327f1b14">Account</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor for the <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> class.  <a href="#a366660970b5eeb5c17436062327f1b14"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a569c9ef0e42b9157690b4ceb646daba8">~Account</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor for the <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> class.  <a href="#a569c9ef0e42b9157690b4ceb646daba8"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">list&lt; pair&lt; string, string &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a> [<a class="el" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a>]</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">m_password</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">m_security</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="account_8h_source.xhtml#l00034">34</a> of file <a class="el" href="account_8h_source.xhtml">account.h</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a366660970b5eeb5c17436062327f1b14"></a><!-- doxytag: member="Account::Account" ref="a366660970b5eeb5c17436062327f1b14" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classAccount.xhtml#a366660970b5eeb5c17436062327f1b14">Account::Account</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00367">367</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;

    <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a> = NULL;
    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a>; i++ )
        <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[i].clear();
    <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a>.clear();
    <a class="code" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">m_password</a>.clear();
    <a class="code" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">m_security</a> = <a class="code" href="enum_8h.xhtml#a1ac3d345b9be3a5c05bc8d91f23ebd7aa62268793e26686df00b9673b04dd649b">ACT_SECURITY_NONE</a>;

    <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a569c9ef0e42b9157690b4ceb646daba8"></a><!-- doxytag: member="Account::~Account" ref="a569c9ef0e42b9157690b4ceb646daba8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classAccount.xhtml#a569c9ef0e42b9157690b4ceb646daba8">Account::~Account</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00384">384</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span>;
}</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ae5536f896c11d85f4f948484dd70449a"></a><!-- doxytag: member="Account::aLogin" ref="ae5536f896c11d85f4f948484dd70449a" args="(const string &amp;date, const string &amp;name, const uint_t &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="classAccount.xhtml#ae5536f896c11d85f4f948484dd70449a">Account::aLogin</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>date</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">date</td><td>A string of the login time. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The name to prepend to the list. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Value from <a class="el" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797">ACT_LOGIN</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if there is an error adding the new entry. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the new entry was successfully added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00312">312</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( date.empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::aHost()-&gt; called with empty date&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( name.empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::aHost()-&gt; called with empty name&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( type &gt;= <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a> )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::aHost()-&gt; called with invalid type&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">while</span> ( <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[type].size() &gt;= <a class="code" href="config_8h.xhtml#a30a6b57a247bf4c1e6745f05d56169b1" title="The number of previous hosts to track for login history.">CFG_ACT_LOGIN_MAX</a> )
        <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[type].pop_back();

    <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[type].push_front( pair&lt;string,string&gt;( date, name ) );

    <span class="keywordflow">return</span> <span class="keyword">true</span>;
}
</pre></div>
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_ae5536f896c11d85f4f948484dd70449a_icgraph.svg" width="100%" height="270"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa82e62e930fb3a8ac58a4592f323db75"></a><!-- doxytag: member="Account::Delete" ref="aa82e62e930fb3a8ac58a4592f323db75" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="classAccount.xhtml#aa82e62e930fb3a8ac58a4592f323db75">Account::Delete</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keyword">delete</span> <span class="keyword">this</span>;

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_aa82e62e930fb3a8ac58a4592f323db75_icgraph.svg" width="100%" height="270"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a1314e9f054a5354c77c20f48e1c6d7f9"></a><!-- doxytag: member="Account::gClient" ref="a1314e9f054a5354c77c20f48e1c6d7f9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classSocketClient.xhtml">SocketClient</a> * <a class="el" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9">Account::gClient</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">SocketClient*</td><td>A pointer to the associated <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00262">262</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a>;
}
</pre></div>
<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_a1314e9f054a5354c77c20f48e1c6d7f9_icgraph.svg" width="100%" height="270"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3e2d487e0962a90f4f00cf0ac73cbb7e"></a><!-- doxytag: member="Account::gLogins" ref="a3e2d487e0962a90f4f00cf0ac73cbb7e" args="(const uint_t &amp;type) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const list&lt; pair&lt; string, string &gt; &gt; <a class="el" href="classAccount.xhtml#a3e2d487e0962a90f4f00cf0ac73cbb7e">Account::gLogins</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>A value from <a class="el" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797">ACT_LOGIN</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">list&lt;pair&lt;string,string&gt;&gt;</td><td>A list of a string pair containing the login dates and times. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00272">272</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( type &gt;= <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a> )
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Account::gLogins()-&gt; called with invalid type %lu&quot;</span>, type );
        <span class="keywordflow">return</span> list&lt;pair&lt;string,string&gt;&gt;();
    }

    <span class="keywordflow">return</span> <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[type];
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa5598c7fb0b2099dfee5d15696a5ef24"></a><!-- doxytag: member="Account::gName" ref="aa5598c7fb0b2099dfee5d15696a5ef24" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24">Account::gName</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">string</td><td>A string with the name of the account. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00289">289</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9a9ee5a78d3353c688c6418c2a88ba54"></a><!-- doxytag: member="Account::gSecurity" ref="a9a9ee5a78d3353c688c6418c2a88ba54" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> <a class="el" href="classAccount.xhtml#a9a9ee5a78d3353c688c6418c2a88ba54">Account::gSecurity</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">uint_t</td><td>The authorized security level of the account. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00298">298</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">m_security</a>;
}
</pre></div>
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_a9a9ee5a78d3353c688c6418c2a88ba54_icgraph.svg" width="100%" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="adc4545f17264112e532b5a48abe94baf"></a><!-- doxytag: member="Account::New" ref="adc4545f17264112e532b5a48abe94baf" args="(SocketClient *client, const bool &amp;exists)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf">Account::New</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>exists</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> requesting an account. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">exists</td><td>True if the account should be loaded, false if a new one need be created. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if a new <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> was successfully created or loaded. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if a new <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> was unable to be created. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt;SocketClient::gLogin()-&gt; called with empty SOC_LOGIN_NAME&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ).empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt;SocketClient::gLogin()-&gt; called with empty SOC_LOGIN_PASSWORD&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a> = client;

    <span class="keywordflow">if</span> ( exists )
    {
        <span class="keywordflow">if</span> ( !<a class="code" href="classAccount.xhtml#ae236325fef7b2269f54e9567577e0b92" title="Unserialize the account data from CFG_DAT_FILE_SETTINGS.">Unserialize</a>() )
        {
            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::new()-&gt;Account::Unserialize()-&gt; returned false&quot;</span> );
            <span class="keywordflow">return</span> <span class="keyword">false</span>;
        }
    }
    <span class="keywordflow">else</span>
    {
        <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> = client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> );
        <a class="code" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">m_password</a> = client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> );

        <span class="keywordflow">if</span> ( ::mkdir( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> ) ), <a class="code" href="config_8h.xhtml#ac352e3d9f85e4ab2996ab932186270c4" title="The chmod mode to set on directories (accounts) created by the server.">CFG_SEC_DIR_MODE</a> ) &lt; 0 )
        {
            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt;mkdir()-&gt;&quot;</span> );
            <span class="keywordflow">return</span> <span class="keyword">false</span>;
        }

        <span class="keywordflow">if</span> ( !<a class="code" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff" title="Serialize the account data and write them to CFG_DAT_FILE_SETTINGS.">Serialize</a>() )
        {
            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt;Account::Serialize()-&gt; returned false&quot;</span> );

            <span class="keywordflow">if</span> ( ::rmdir( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> ) ) ) &lt; 0 )
                <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt;rmdir-&gt;&quot;</span> );

            <span class="keywordflow">return</span> <span class="keyword">false</span>;
        }
    }

    <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#aaa13ed7d0aa65770b617cbf72a5c28d9" title="Associates an Account object to the SocketClient.">sAccount</a>( <span class="keyword">this</span> ) )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Account::New()-&gt;SocketClient::sAccount()-&gt; returned false&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">return</span> <span class="keyword">true</span>;
}
</pre></div>
<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_adc4545f17264112e532b5a48abe94baf_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_adc4545f17264112e532b5a48abe94baf_icgraph.svg" width="100%" height="270"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a87dfcb1fd6c275ea89ec6f279e7ee8ff"></a><!-- doxytag: member="Account::Serialize" ref="a87dfcb1fd6c275ea89ec6f279e7ee8ff" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff">Account::Serialize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if there was an error serializing settings. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if settings were serialized successfully. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo:</a></b></dt><dd>Need to find a nicer way to do this </dd></dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    ofstream ofs;
    <span class="keywordtype">string</span> value;
    stringstream line;
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
    <span class="keywordtype">string</span> file( <a class="code" href="namespaceUtils.xhtml#a3e236b07fd628bcaf2e7c5854dd2a281" title="Returns a string consisting of file.ext.">Utils::FileExt</a>( <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a>, <a class="code" href="config_8h.xhtml#a06ca80b984aa3c3675dd3ac21f08b83d" title="File extension to use for account setting files.">CFG_DAT_FILE_ACT_EXT</a> ) );
    list&lt;pair&lt;string,string&gt;&gt;::const_iterator li;

    <a class="code" href="namespaceUtils.xhtml#a67fd451200ee8a3cc646aeba5cb9513b" title="Begins a write to a temporary file that is intended to replace a live file.">Utils::FileOpen</a>( ofs, file );

    <span class="keywordflow">if</span> ( !ofs.good() )
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Account::Serialize()-&gt; failed to open settings file: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="comment">// First to ensure name is loaded for logging later</span>
    <a class="code" href="macros_8h.xhtml#ae82f16e6bd484cc5cb600fb899b8c24d" title="Write (name) and (value) to (stream) in key:value format.">KEY</a>( ofs, <span class="stringliteral">&quot;name&quot;</span>, <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> );
    <a class="code" href="macros_8h.xhtml#a56c55a4fe68d269a30a5dbddbb210b47" title="Begins writing (name)[iter] to (stream) in key:value format.">KEYLISTLOOP</a>( ofs, <span class="stringliteral">&quot;logins&quot;</span>, i ); 
    {
        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a>; i++ )
        {
            ofs &lt;&lt; <span class="stringliteral">&quot;logins[&quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; <span class="stringliteral">&quot; = &quot;</span>;
            line.str( <span class="stringliteral">&quot;&quot;</span> );

            <span class="keywordflow">if</span> ( !<a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[i].empty() )
            {
                <span class="keywordflow">for</span> ( li = <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[i].begin(); li != <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[i].end(); li++ )
                    line &lt;&lt; <a class="code" href="namespaceUtils.xhtml#a1cd33b86e538bb0c765d5c0bcde259e1" title="Generates a string from the pair of t and v.">Utils::MakePair</a>( li-&gt;first, li-&gt;second ) &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;

                value = line.str();
                value.erase( value.end() - 1 );
                ofs &lt;&lt; value &lt;&lt; endl;
            }
            <span class="keywordflow">else</span>
                ofs &lt;&lt; endl;
        }
    }
    <a class="code" href="macros_8h.xhtml#ae82f16e6bd484cc5cb600fb899b8c24d" title="Write (name) and (value) to (stream) in key:value format.">KEY</a>( ofs, <span class="stringliteral">&quot;password&quot;</span>, <a class="code" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">m_password</a> );
    <a class="code" href="macros_8h.xhtml#ae82f16e6bd484cc5cb600fb899b8c24d" title="Write (name) and (value) to (stream) in key:value format.">KEY</a>( ofs, <span class="stringliteral">&quot;security&quot;</span>, <a class="code" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">m_security</a> );

    <a class="code" href="namespaceUtils.xhtml#a7008f8effca71806721305d1834bde1e" title="Completes a read from a file.">Utils::FileClose</a>( ofs, <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );

    <span class="keywordflow">return</span> <span class="keyword">true</span>;
}
</pre></div>
<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classAccount_a87dfcb1fd6c275ea89ec6f279e7ee8ff_cgraph.svg" width="462" height="251"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_a87dfcb1fd6c275ea89ec6f279e7ee8ff_icgraph.svg" width="100%" height="270"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a714070b95fbb57cb2f1a8e68046d92ef"></a><!-- doxytag: member="Account::sSecurity" ref="a714070b95fbb57cb2f1a8e68046d92ef" args="(const uint_t &amp;security)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="classAccount.xhtml#a714070b95fbb57cb2f1a8e68046d92ef">Account::sSecurity</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>security</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">security</td><td>The level to set the security of the account to. From <a class="el" href="enum_8h.xhtml#a1ac3d345b9be3a5c05bc8d91f23ebd7a">ACT_SECURITY</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the security level is invalid. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the security level is valid. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00348">348</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( security &lt; ACT_SECURITY_NONE || security &gt;= <a class="code" href="enum_8h.xhtml#a1ac3d345b9be3a5c05bc8d91f23ebd7aa890362692954667bb9893f2ffdf0bef5">MAX_ACT_SECURITY</a> )
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Account::sSecurity()-&gt; called with invalid security level: %lu &quot;</span>, security );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <a class="code" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">m_security</a> = security;

    <span class="keywordflow">return</span> <span class="keyword">true</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae236325fef7b2269f54e9567577e0b92"></a><!-- doxytag: member="Account::Unserialize" ref="ae236325fef7b2269f54e9567577e0b92" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="classAccount.xhtml#ae236325fef7b2269f54e9567577e0b92">Account::Unserialize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if there was an error unserializing settings. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if settings were unserialized successfully. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>Need to find a nicer way to do this </dd></dl>

<p>Definition at line <a class="el" href="account_8cpp_source.xhtml#l00170">170</a> of file <a class="el" href="account_8cpp_source.xhtml">account.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="macros_8h.xhtml#a6e32552c1b3df78e64aa5205ddf6dae9" title="Define a bitset variable (name) with UTILS_TYPE_INFO already enabled.">UFLAGS_I</a>( finfo );
    ifstream ifs;
    <span class="keywordtype">string</span> key, value, line, token;
    stringstream loop;
    <span class="keywordtype">bool</span> found = <span class="keyword">false</span>, maxb = <span class="keyword">false</span>;
    pair&lt;string,string&gt; item;
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
    <span class="keywordtype">string</span> file( <a class="code" href="namespaceUtils.xhtml#a3e236b07fd628bcaf2e7c5854dd2a281" title="Returns a string consisting of file.ext.">Utils::FileExt</a>( <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a>-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ), <a class="code" href="config_8h.xhtml#a06ca80b984aa3c3675dd3ac21f08b83d" title="File extension to use for account setting files.">CFG_DAT_FILE_ACT_EXT</a> ) );

    <a class="code" href="namespaceUtils.xhtml#a67fd451200ee8a3cc646aeba5cb9513b" title="Begins a write to a temporary file that is intended to replace a live file.">Utils::FileOpen</a>( ifs, <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a>-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ), file );

    <span class="keywordflow">if</span> ( !ifs.good() )
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Account::Unserialize()-&gt; failed to open settings file: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">while</span> ( getline( ifs, line ) )
    {
        <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b" title="Splits a string in the format of key=value. Retains any whitespace in the value.">Utils::KeyValue</a>( key, value, line) )
        {
            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Account::Unserialize()-&gt; error reading line: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( line ) );
            <span class="keywordflow">continue</span>;
        }

        <span class="keywordflow">for</span> ( ;; )
        {
            found = <span class="keyword">false</span>;

            <span class="comment">// First to ensure name is loaded for logging later</span>
            <a class="code" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d" title="If the contents of keyd == valu, assigns loc = item.">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;name&quot;</span>, value, <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> );
            <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( <span class="stringliteral">&quot;logins&quot;</span>, key ) ) 
            {
                <span class="keywordflow">for</span> ( ; i &lt; <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a>; i++ )
                {
                    loop.str( <span class="stringliteral">&quot;&quot;</span> );
                    loop &lt;&lt; <span class="stringliteral">&quot;logins[&quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;

                    <span class="keywordflow">if</span> ( key == loop.str() )
                    {
                        found = <span class="keyword">true</span>;
                        <span class="keywordflow">break</span>;
                    }
                }

                <span class="keywordflow">while</span> ( !value.empty() )
                {
                    token = <a class="code" href="namespaceUtils.xhtml#af8586b5c4d77ae0617279186b2bfdb66" title="Returns the first delimeter separated argument from input and then erases it from input...">Utils::Argument</a>( value, <span class="stringliteral">&quot;} &quot;</span> );
                    item = <a class="code" href="namespaceUtils.xhtml#a11bfe61c6e77603d59116397b1d3f580" title="Returns a pair of type T,V after receiving an input string generated from Utils::MakePair().">Utils::ReadPair</a>( token );
                    <a class="code" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">m_logins</a>[i].push_back( pair&lt;string,string&gt;( item.first, item.second ) );
                }
            }
            <a class="code" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d" title="If the contents of keyd == valu, assigns loc = item.">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;password&quot;</span>, value, <a class="code" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">m_password</a> );
            <a class="code" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d" title="If the contents of keyd == valu, assigns loc = item.">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;security&quot;</span>, value, <a class="code" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">m_security</a>, <a class="code" href="enum_8h.xhtml#a1ac3d345b9be3a5c05bc8d91f23ebd7aa890362692954667bb9893f2ffdf0bef5">MAX_ACT_SECURITY</a>, maxb );

            <span class="keywordflow">if</span> ( !found )
                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Account::Unserialize()-&gt;Utils::KeySet()-&gt; key not found: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( key ) );

            <span class="keywordflow">if</span> ( maxb )
                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( finfo, <span class="stringliteral">&quot;Account::Unserialize()-&gt;Utils::KeySet()-&gt; account %s, key %s has illegal value %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">m_name</a> ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( key ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) );

            <span class="keywordflow">break</span>;
        }
    }

    <a class="code" href="namespaceUtils.xhtml#a7008f8effca71806721305d1834bde1e" title="Completes a read from a file.">Utils::FileClose</a>( ifs );

    <span class="keywordflow">if</span> ( <a class="code" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">m_password</a> == <a class="code" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9" title="Returns the associated SocketClient.">gClient</a>()-&gt;gLogin( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ) )
    {
        <span class="comment">// Use the setter as it provides sanity checking and config constraints</span>
        <a class="code" href="classAccount.xhtml#ae5536f896c11d85f4f948484dd70449a" title="Adds a hostname to the list of previous successful logins. Bumps the oldest entry.">aLogin</a>( <a class="code" href="namespaceUtils.xhtml#a2b2dad8fa1999271cf613dc735f851d4" title="Returns a given time as a string.">Utils::StrTime</a>(), <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a>-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>(), <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a5f975459cb924a1c9fd0925a30a5e251">ACT_LOGIN_SUCCESS</a> );
        <span class="keywordflow">return</span> <span class="keyword">true</span>;
    }
    <span class="keywordflow">else</span>
    {
        <span class="comment">// Track that there was a failure, force a save to ensure the data is retained</span>
        <a class="code" href="classAccount.xhtml#ae5536f896c11d85f4f948484dd70449a" title="Adds a hostname to the list of previous successful logins. Bumps the oldest entry.">aLogin</a>( <a class="code" href="namespaceUtils.xhtml#a2b2dad8fa1999271cf613dc735f851d4" title="Returns a given time as a string.">Utils::StrTime</a>(), <a class="code" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">m_client</a>-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>(), <a class="code" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797acfbbe15f0da141a4888dd55e37b4b8ea">ACT_LOGIN_FAILURE</a> );
        <a class="code" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff" title="Serialize the account data and write them to CFG_DAT_FILE_SETTINGS.">Serialize</a>();
        <a class="code" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9" title="Returns the associated SocketClient.">gClient</a>()-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a8ca9b1580c268c16dbe8feddb330c025" title="String sent when an invalid account password is received.">CFG_STR_ACT_PASSWORD_INVALID</a> );

        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }
}
</pre></div>
<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_ae236325fef7b2269f54e9567577e0b92_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classAccount_ae236325fef7b2269f54e9567577e0b92_icgraph.svg" width="100%" height="270"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="abaabaa011c36988830dfb36ee18d79c9"></a><!-- doxytag: member="Account::m_client" ref="abaabaa011c36988830dfb36ee18d79c9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classSocketClient.xhtml">SocketClient</a>* <a class="el" href="classAccount.xhtml#abaabaa011c36988830dfb36ee18d79c9">Account::m_client</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The client attached to the account. </p>

<p>Definition at line <a class="el" href="account_8h_source.xhtml#l00061">61</a> of file <a class="el" href="account_8h_source.xhtml">account.h</a>.</p>

</div>
</div>
<a class="anchor" id="aff3dbe2d8fd54c0d215a54353e4c1bf3"></a><!-- doxytag: member="Account::m_logins" ref="aff3dbe2d8fd54c0d215a54353e4c1bf3" args="[MAX_ACT_LOGIN]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">list&lt;pair&lt;string,string&gt; &gt; <a class="el" href="classAccount.xhtml#aff3dbe2d8fd54c0d215a54353e4c1bf3">Account::m_logins</a>[<a class="el" href="enum_8h.xhtml#a5ed7c456fadb6b481136921090268797a72df719bd3dcc79326c55af673f3f6f4">MAX_ACT_LOGIN</a>]<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Date and hostname of previous login failures/successes. </p>

<p>Definition at line <a class="el" href="account_8h_source.xhtml#l00062">62</a> of file <a class="el" href="account_8h_source.xhtml">account.h</a>.</p>

</div>
</div>
<a class="anchor" id="acee6203484511ee33880c5ec182c1586"></a><!-- doxytag: member="Account::m_name" ref="acee6203484511ee33880c5ec182c1586" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string <a class="el" href="classAccount.xhtml#acee6203484511ee33880c5ec182c1586">Account::m_name</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The name of the account. </p>

<p>Definition at line <a class="el" href="account_8h_source.xhtml#l00063">63</a> of file <a class="el" href="account_8h_source.xhtml">account.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1435d54c3596aec8968a206d69d1b3e9"></a><!-- doxytag: member="Account::m_password" ref="a1435d54c3596aec8968a206d69d1b3e9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string <a class="el" href="classAccount.xhtml#a1435d54c3596aec8968a206d69d1b3e9">Account::m_password</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The encrypted password of the account. </p>

<p>Definition at line <a class="el" href="account_8h_source.xhtml#l00064">64</a> of file <a class="el" href="account_8h_source.xhtml">account.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7d0c6fc3a665919f8cc292ad3c33aef9"></a><!-- doxytag: member="Account::m_security" ref="a7d0c6fc3a665919f8cc292ad3c33aef9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> <a class="el" href="classAccount.xhtml#a7d0c6fc3a665919f8cc292ad3c33aef9">Account::m_security</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Security level for commands and restricted access. </p>

<p>Definition at line <a class="el" href="account_8h_source.xhtml#l00065">65</a> of file <a class="el" href="account_8h_source.xhtml">account.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>h/<a class="el" href="account_8h_source.xhtml">account.h</a></li>
<li><a class="el" href="account_8cpp_source.xhtml">account.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 17 2013 00:09:59 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
