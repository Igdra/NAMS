<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: command.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">command.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="command_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/***************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * NAMS - Not Another MUD Server                                           *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                         *</span>
<a name="l00005"></a>00005 <span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span>
<a name="l00006"></a>00006 <span class="comment"> * it under the terms of the GNU General Public License as published by    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span>
<a name="l00008"></a>00008 <span class="comment"> * (at your option) any later version.                                     *</span>
<a name="l00009"></a>00009 <span class="comment"> *                                                                         *</span>
<a name="l00010"></a>00010 <span class="comment"> * This program is distributed in the hope that it will be useful,         *</span>
<a name="l00011"></a>00011 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span>
<a name="l00012"></a>00012 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU General Public License for more details.                            *</span>
<a name="l00014"></a>00014 <span class="comment"> *                                                                         *</span>
<a name="l00015"></a>00015 <span class="comment"> * You should have received a copy of the GNU General Public License       *</span>
<a name="l00016"></a>00016 <span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span>
<a name="l00017"></a>00017 <span class="comment"> ***************************************************************************/</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="includes_8h.xhtml" title="All non-system includes that need to be within each .cpp file.">h/includes.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.xhtml" title="The Command class.">h/command.h</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="list_8h.xhtml" title="All globally referenced list / map / vector types.">h/list.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="plugin_8h.xhtml" title="The Plugin class.">h/plugin.h</a>&quot;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="comment">/* Core */</span>
<a name="l00044"></a><a class="code" href="classCommand.xhtml#a1ccef73405910cf3e44943a3244b645b">00044</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classCommand.xhtml#a1ccef73405910cf3e44943a3244b645b" title="Check if sec is &gt;= m_security for permission to call Command::Run().">Command::Authorized</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; sec )<span class="keyword"> const</span>
<a name="l00045"></a>00045 <span class="keyword"></span>{
<a name="l00046"></a>00046     <span class="keywordflow">if</span> ( sec &lt; <a class="code" href="classCommand.xhtml#a2e5ca0ee4ca16710e1f4b78cac9d94d3">m_security</a> )
<a name="l00047"></a>00047         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00048"></a>00048 
<a name="l00051"></a>00051     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00052"></a>00052 }
<a name="l00053"></a>00053 
<a name="l00058"></a><a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477">00058</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Command::Delete</a>()
<a name="l00059"></a>00059 {
<a name="l00060"></a>00060     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00061"></a>00061     <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keyword">const</span> <span class="keywordtype">char</span>,<a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>*, mi );
<a name="l00062"></a>00062 
<a name="l00063"></a>00063     <a class="code" href="classCommand.xhtml#a66f3f1de201e4d1bc251eee3497e9c07">m_plg_delete</a>( <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a> );
<a name="l00064"></a>00064     ::dlerror();
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     <span class="keywordflow">if</span> ( ::dlclose( <a class="code" href="classCommand.xhtml#a17fe740c7721098073d4b4f02ae3dc37">m_plg_handle</a> ) )
<a name="l00067"></a>00067         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Command::Delete()-&gt;dlclose() returned error: %s&quot;</span>, ::dlerror() );
<a name="l00068"></a>00068 
<a name="l00069"></a>00069     <span class="keywordflow">for</span> ( mi = <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.begin(); mi != <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.end(); )
<a name="l00070"></a>00070     {
<a name="l00071"></a>00071         <span class="keywordflow">if</span> ( mi-&gt;second == <span class="keyword">this</span> )
<a name="l00072"></a>00072         {
<a name="l00073"></a>00073             <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.erase( mi++ );
<a name="l00074"></a>00074             <span class="keywordflow">break</span>;
<a name="l00075"></a>00075         }
<a name="l00076"></a>00076         <span class="keywordflow">else</span>
<a name="l00077"></a>00077             ++mi;
<a name="l00078"></a>00078     }
<a name="l00079"></a>00079     <span class="keyword">delete</span> <span class="keyword">this</span>;
<a name="l00080"></a>00080 
<a name="l00081"></a>00081    <span class="keywordflow">return</span>;
<a name="l00082"></a>00082 }
<a name="l00083"></a>00083 
<a name="l00090"></a><a class="code" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48">00090</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48" title="Load a plugin command from CFG_DAT_DIR_OBJ.">Command::New</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; file )
<a name="l00091"></a>00091 {
<a name="l00092"></a>00092     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00093"></a>00093     <span class="keywordtype">string</span> path( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a7e0533ce20f3c090bdf24cc750916edb" title="Directory for plugins to be loaded from.">CFG_DAT_DIR_OBJ</a>, file, <a class="code" href="config_8h.xhtml#aec22aee0979a918423c5743237a25d81" title="File extension for files after they are compiled.">CFG_PLG_BUILD_EXT_OUT</a> ) );
<a name="l00094"></a>00094 
<a name="l00095"></a>00095     <span class="comment">// Ensure there is a valid file to open</span>
<a name="l00096"></a>00096     <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a7d40818a602fb21db4b4f0917705f85b" title="Determines if a file path is a file or directory on disk.">Utils::iFile</a>( path ) )
<a name="l00097"></a>00097     {
<a name="l00098"></a>00098         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Command::New()-&gt;Utils::iFile()-&gt; returned false for path: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( path ) );
<a name="l00099"></a>00099         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00100"></a>00100     }
<a name="l00101"></a>00101 
<a name="l00102"></a>00102     <span class="keywordflow">if</span> ( ( <a class="code" href="classCommand.xhtml#a17fe740c7721098073d4b4f02ae3dc37">m_plg_handle</a> = ::dlopen( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( path ), RTLD_LAZY | RTLD_GLOBAL ) ) == NULL )
<a name="l00103"></a>00103     {
<a name="l00104"></a>00104         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Command::New()-&gt;dlopen() returned error: %s&quot;</span>, ::dlerror() );
<a name="l00105"></a>00105         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00106"></a>00106     }
<a name="l00107"></a>00107     <span class="keywordflow">else</span>
<a name="l00108"></a>00108     {
<a name="l00109"></a>00109         <span class="comment">// Register the handlers and create a new instance of the Plugin&#39;s class</span>
<a name="l00110"></a>00110         <a class="code" href="classCommand.xhtml#a66f3f1de201e4d1bc251eee3497e9c07">m_plg_delete</a> = (<a class="code" href="includes_8h.xhtml#a1c99eaa96f84c10bc07e3586fa6a15c4" title="Used as a pointer to the Delete() function within an implemented class.">PluginDelete</a>*) ::dlsym( <a class="code" href="classCommand.xhtml#a17fe740c7721098073d4b4f02ae3dc37">m_plg_handle</a>, <span class="stringliteral">&quot;Delete&quot;</span> );
<a name="l00111"></a>00111         <a class="code" href="classCommand.xhtml#a9d64316428b105c231cb7196f8a0a728">m_plg_file</a> = file;
<a name="l00112"></a>00112         <a class="code" href="classCommand.xhtml#a393ca653019565f1044ac7f36bed19eb">m_plg_new</a> = (<a class="code" href="includes_8h.xhtml#aa2b4854863feda0a2425bfd72c37f8d6" title="Used as a pointer to the New() function within an implemented class.">PluginNew</a>*) ::dlsym( <a class="code" href="classCommand.xhtml#a17fe740c7721098073d4b4f02ae3dc37">m_plg_handle</a>, <span class="stringliteral">&quot;New&quot;</span> );
<a name="l00113"></a>00113         <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a> = <a class="code" href="classCommand.xhtml#a393ca653019565f1044ac7f36bed19eb">m_plg_new</a>();
<a name="l00114"></a>00114         <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#af51cf34cdaa8ce00ec838b26b465f859" title="Sets a pointer to the object that initialized this Plugin.">sCaller</a>( <span class="keyword">this</span> );
<a name="l00115"></a>00115 
<a name="l00116"></a>00116         <span class="comment">// Set specific values unique to a Command object that the Plugin can specify</span>
<a name="l00117"></a>00117         <a class="code" href="classCommand.xhtml#a227283c6b253cedd657d0a55a2526aff">m_preempt</a> = <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#a669870333a99490518fdd59054deaade" title="Return a bool value to tie into other object types.">gBool</a>( <a class="code" href="enum_8h.xhtml#a9e809214b0ad67d9044895314e175965a3fa52c5654e850d3aa34fc612e73f4e4">PLG_TYPE_COMMAND_BOOL_PREEMPT</a> );
<a name="l00118"></a>00118         <a class="code" href="classCommand.xhtml#a2e5ca0ee4ca16710e1f4b78cac9d94d3">m_security</a> = <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#aaabc3015bb64b744ac26c14318b9cb43" title="Return a uint_t value to tie into other object types.">gUint</a>( <a class="code" href="enum_8h.xhtml#a2aa8b97e4bda341633582982c640bf11a882b699beec64e0b686305216ef80f0a">PLG_TYPE_COMMAND_UINT_SECURITY</a> );
<a name="l00119"></a>00119     }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121     <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
<a name="l00122"></a>00122         <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.insert( pair&lt;const char,Command*&gt;( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( <a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>() )[0], <span class="keyword">this</span> ) );
<a name="l00123"></a>00123     <span class="keywordflow">else</span>
<a name="l00124"></a>00124         <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.insert( pair&lt;const char,Command*&gt;( <a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>()[0], <span class="keyword">this</span> ) );
<a name="l00125"></a>00125 
<a name="l00126"></a>00126     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00127"></a>00127 }
<a name="l00128"></a>00128 
<a name="l00136"></a><a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd">00136</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd" title="Execute a Plugin object&#39;s primary function.">Command::Run</a>( <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* character, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; arg )<span class="keyword"> const</span>
<a name="l00137"></a>00137 <span class="keyword"></span>{
<a name="l00138"></a>00138     <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#a40f8facb58b11e24951052ad0080a51e" title="Execute the primary function of the implemented class.">Run</a>( character, cmd, arg );
<a name="l00139"></a>00139 
<a name="l00140"></a>00140     <span class="keywordflow">return</span>;
<a name="l00141"></a>00141 }
<a name="l00142"></a>00142 
<a name="l00150"></a><a class="code" href="classCommand.xhtml#a6448d432978113719bfdfa3783da5106">00150</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd" title="Execute a Plugin object&#39;s primary function.">Command::Run</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; arg )<span class="keyword"> const</span>
<a name="l00151"></a>00151 <span class="keyword"></span>{
<a name="l00152"></a>00152     <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#a40f8facb58b11e24951052ad0080a51e" title="Execute the primary function of the implemented class.">Run</a>( client, cmd, arg );
<a name="l00153"></a>00153 
<a name="l00154"></a>00154     <span class="keywordflow">return</span>;
<a name="l00155"></a>00155 }
<a name="l00156"></a>00156 
<a name="l00157"></a>00157 <span class="comment">/* Query */</span>
<a name="l00162"></a><a class="code" href="classCommand.xhtml#a0763aba641a70e0085116b05bcfd632c">00162</a> <span class="keywordtype">void</span>* <a class="code" href="classCommand.xhtml#a0763aba641a70e0085116b05bcfd632c" title="Return a pointer back to a Command object associated with the loaded Plugin.">Command::gCaller</a>()<span class="keyword"> const</span>
<a name="l00163"></a>00163 <span class="keyword"></span>{
<a name="l00164"></a>00164     <span class="keywordflow">return</span> <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#abab79e7ca874fe2f6e4f5e02a40b8878" title="Return a pointer to the object that initialized this Plugin.">gCaller</a>();
<a name="l00165"></a>00165 }
<a name="l00166"></a>00166 
<a name="l00171"></a><a class="code" href="classCommand.xhtml#a63b8f3fc40a0cc9e02fcaa2ea2329c40">00171</a> <span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="classCommand.xhtml#a63b8f3fc40a0cc9e02fcaa2ea2329c40" title="Return the filename of the associated Plugin object.">Command::gFile</a>()<span class="keyword"> const</span>
<a name="l00172"></a>00172 <span class="keyword"></span>{
<a name="l00173"></a>00173     <span class="keywordflow">return</span> <a class="code" href="classCommand.xhtml#a9d64316428b105c231cb7196f8a0a728">m_plg_file</a>;
<a name="l00174"></a>00174 }
<a name="l00175"></a>00175 
<a name="l00180"></a><a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021">00180</a> <span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">Command::gName</a>()<span class="keyword"> const</span>
<a name="l00181"></a>00181 <span class="keyword"></span>{
<a name="l00182"></a>00182     <span class="keywordflow">return</span> <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a>-&gt;<a class="code" href="classPlugin.xhtml#af031147ea2e2d7e7f73f7edb9a5921ae" title="Return the name of the object.">gName</a>();
<a name="l00183"></a>00183 }
<a name="l00184"></a>00184 
<a name="l00190"></a><a class="code" href="classCommand.xhtml#a24702b444e22d28a7566b539a0d15b90">00190</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classCommand.xhtml#a24702b444e22d28a7566b539a0d15b90" title="Return the preempt status of the associated Plugin object.">Command::gPreempt</a>()<span class="keyword"> const</span>
<a name="l00191"></a>00191 <span class="keyword"></span>{
<a name="l00192"></a>00192     <span class="keywordflow">return</span> <a class="code" href="classCommand.xhtml#a227283c6b253cedd657d0a55a2526aff">m_preempt</a>;
<a name="l00193"></a>00193 }
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 <span class="comment">/* Manipulate */</span>
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 <span class="comment">/* Internal */</span>
<a name="l00201"></a><a class="code" href="classCommand.xhtml#a18df2d81039392daeb0b78c346a70537">00201</a> <a class="code" href="classCommand.xhtml#a18df2d81039392daeb0b78c346a70537" title="Constructor for the Command class.">Command::Command</a>()
<a name="l00202"></a>00202 {
<a name="l00203"></a>00203     <a class="code" href="classCommand.xhtml#abd48e43fb50d5265df8ea9fca53361d9">m_plg</a> = NULL;
<a name="l00204"></a>00204     <a class="code" href="classCommand.xhtml#a66f3f1de201e4d1bc251eee3497e9c07">m_plg_delete</a> = NULL;
<a name="l00205"></a>00205     <a class="code" href="classCommand.xhtml#a9d64316428b105c231cb7196f8a0a728">m_plg_file</a>.clear();
<a name="l00206"></a>00206     <a class="code" href="classCommand.xhtml#a17fe740c7721098073d4b4f02ae3dc37">m_plg_handle</a> = NULL;
<a name="l00207"></a>00207     <a class="code" href="classCommand.xhtml#a393ca653019565f1044ac7f36bed19eb">m_plg_new</a> = NULL;
<a name="l00208"></a>00208     <a class="code" href="classCommand.xhtml#a227283c6b253cedd657d0a55a2526aff">m_preempt</a> = <span class="keyword">false</span>;
<a name="l00209"></a>00209     <a class="code" href="classCommand.xhtml#a2e5ca0ee4ca16710e1f4b78cac9d94d3">m_security</a> = <a class="code" href="enum_8h.xhtml#a1ac3d345b9be3a5c05bc8d91f23ebd7aa62268793e26686df00b9673b04dd649b">ACT_SECURITY_NONE</a>;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211     <span class="keywordflow">return</span>;
<a name="l00212"></a>00212 }
<a name="l00213"></a>00213 
<a name="l00217"></a><a class="code" href="classCommand.xhtml#ab552bb3a07fdd1acbfd8ea76e69b2278">00217</a> <a class="code" href="classCommand.xhtml#ab552bb3a07fdd1acbfd8ea76e69b2278" title="Destructor for the Command class.">Command::~Command</a>()
<a name="l00218"></a>00218 {
<a name="l00219"></a>00219     <span class="keywordflow">return</span>;
<a name="l00220"></a>00220 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Wed May 1 2013 09:59:12 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
