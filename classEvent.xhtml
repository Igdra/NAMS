<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: Event Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classEvent-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Event Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Actions that execute after a specified delay.  
</p>

<p><code>#include &quot;<a class="el" href="event_8h_source.xhtml">event.h</a>&quot;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for Event:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classEvent__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Core</div></td></tr>
<tr class="memitem:a95bfba52e3b7c70b33fd7784b396b5c4"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a95bfba52e3b7c70b33fd7784b396b5c4">Delete</a> ()</td></tr>
<tr class="memdesc:a95bfba52e3b7c70b33fd7784b396b5c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unload an event from memory that was previously loaded via <a class="el" href="classEvent.xhtml#a6deaed335b6c5b7690c79c36107e2c4f" title="Create a new Event for a Character to execute a Command on a delay.">Event::New()</a>.  <a href="#a95bfba52e3b7c70b33fd7784b396b5c4"></a><br/></td></tr>
<tr class="memitem:a6deaed335b6c5b7690c79c36107e2c4f"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a6deaed335b6c5b7690c79c36107e2c4f">New</a> (const string &amp;cmd, const string &amp;args, <a class="el" href="classCharacter.xhtml">Character</a> *character, <a class="el" href="classCommand.xhtml">Command</a> *command, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;time)</td></tr>
<tr class="memdesc:a6deaed335b6c5b7690c79c36107e2c4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> for a <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> to execute a <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> on a delay.  <a href="#a6deaed335b6c5b7690c79c36107e2c4f"></a><br/></td></tr>
<tr class="memitem:a2306a6a426cff5f772c4974c9ba145d1"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a2306a6a426cff5f772c4974c9ba145d1">New</a> (const string &amp;args, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;time)</td></tr>
<tr class="memdesc:a2306a6a426cff5f772c4974c9ba145d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>. This is a special use-case to create an <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> for things such as <a class="el" href="namespaceServer.xhtml#a4073e768d93ce18c25cb5996f4cd3729" title="Reloads a Command Plugin.">Server::ReloadCommand</a>.  <a href="#a2306a6a426cff5f772c4974c9ba145d1"></a><br/></td></tr>
<tr class="memitem:aa606d3646f0220abc3af0419d2e6263d"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#aa606d3646f0220abc3af0419d2e6263d">New</a> (const string &amp;cmd, const string &amp;args, <a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, <a class="el" href="classCommand.xhtml">Command</a> *command, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;time)</td></tr>
<tr class="memdesc:aa606d3646f0220abc3af0419d2e6263d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> for a <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> to execute a <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> on a delay.  <a href="#aa606d3646f0220abc3af0419d2e6263d"></a><br/></td></tr>
<tr class="memitem:ae00620af2a424d3d0041676e76b9303c"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#ae00620af2a424d3d0041676e76b9303c">Run</a> ()</td></tr>
<tr class="memdesc:ae00620af2a424d3d0041676e76b9303c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the function stored within the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> object.  <a href="#ae00620af2a424d3d0041676e76b9303c"></a><br/></td></tr>
<tr class="memitem:a65983b240559175bfabe83c640ed7147"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a65983b240559175bfabe83c640ed7147">Update</a> ()</td></tr>
<tr class="memdesc:a65983b240559175bfabe83c640ed7147"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> by decrementing the remaining time.  <a href="#a65983b240559175bfabe83c640ed7147"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Query</div></td></tr>
<tr class="memitem:a88d0dd346148af90b70b0c711563038b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCharacter.xhtml">Character</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a88d0dd346148af90b70b0c711563038b">gCharacter</a> () const </td></tr>
<tr class="memdesc:a88d0dd346148af90b70b0c711563038b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> associated to this <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>, if any.  <a href="#a88d0dd346148af90b70b0c711563038b"></a><br/></td></tr>
<tr class="memitem:a75fba5593fa26faac54a98bf89724f5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCommand.xhtml">Command</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a75fba5593fa26faac54a98bf89724f5d">gCommand</a> () const </td></tr>
<tr class="memdesc:a75fba5593fa26faac54a98bf89724f5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> associated to this <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>, if any.  <a href="#a75fba5593fa26faac54a98bf89724f5d"></a><br/></td></tr>
<tr class="memitem:aba97749a9852eb777c5d8d5ccbc16dc4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#aba97749a9852eb777c5d8d5ccbc16dc4">gTime</a> () const </td></tr>
<tr class="memdesc:aba97749a9852eb777c5d8d5ccbc16dc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of time remaining.  <a href="#aba97749a9852eb777c5d8d5ccbc16dc4"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Internal</div></td></tr>
<tr class="memitem:a5a40dd4708297f7031e29b39e039ae10"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a5a40dd4708297f7031e29b39e039ae10">Event</a> ()</td></tr>
<tr class="memdesc:a5a40dd4708297f7031e29b39e039ae10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor for the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> class.  <a href="#a5a40dd4708297f7031e29b39e039ae10"></a><br/></td></tr>
<tr class="memitem:a7704ec01ce91e673885792054214b3d2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a7704ec01ce91e673885792054214b3d2">~Event</a> ()</td></tr>
<tr class="memdesc:a7704ec01ce91e673885792054214b3d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor for the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> class.  <a href="#a7704ec01ce91e673885792054214b3d2"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a35621b42f6299f5d09b685a6c0265eee"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a></td></tr>
<tr class="memitem:aae899d5bdca69420e326131739f81445"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#aae899d5bdca69420e326131739f81445">m_cmd</a></td></tr>
<tr class="memitem:a57e336815f086c624c6ec8c78f6bf122"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCharacter.xhtml">Character</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a57e336815f086c624c6ec8c78f6bf122">m_character</a></td></tr>
<tr class="memitem:a0e5035fc31466ad69e50321148dbe708"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a0e5035fc31466ad69e50321148dbe708">m_client</a></td></tr>
<tr class="memitem:a55c2a3bc919fe48785d163aa3d6cede9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCommand.xhtml">Command</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a></td></tr>
<tr class="memitem:a55560cd58cd21ff93fb072afb203c4f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a></td></tr>
<tr class="memitem:af8f7b979851e4e7d37a61fd890398801"><td class="memItemLeft" align="right" valign="top"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classEvent.xhtml#af8f7b979851e4e7d37a61fd890398801">m_type</a></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00032">32</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5a40dd4708297f7031e29b39e039ae10"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Event::Event </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00261">261</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a>.clear();</div>
<div class="line">    <a class="code" href="classEvent.xhtml#aae899d5bdca69420e326131739f81445">m_cmd</a>.clear();</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a57e336815f086c624c6ec8c78f6bf122">m_character</a> = NULL;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a0e5035fc31466ad69e50321148dbe708">m_client</a> = NULL;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a> = NULL;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a> = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#af8f7b979851e4e7d37a61fd890398801">m_type</a> = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7704ec01ce91e673885792054214b3d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Event::~Event </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00277">277</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a95bfba52e3b7c70b33fd7784b396b5c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Event::Delete </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.remove( <span class="keyword">this</span> );</div>
<div class="line"></div>
<div class="line">    <span class="keyword">delete</span> <span class="keyword">this</span>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classEvent_a95bfba52e3b7c70b33fd7784b396b5c4_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a88d0dd346148af90b70b0c711563038b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCharacter.xhtml">Character</a> * Event::gCharacter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">Character*</td><td>A pointer to the associated <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>, if any. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00232">232</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classEvent.xhtml#a57e336815f086c624c6ec8c78f6bf122">m_character</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a75fba5593fa26faac54a98bf89724f5d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCommand.xhtml">Command</a> * Event::gCommand </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">Command*</td><td>A pointer to the associated <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>, if any. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00241">241</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aba97749a9852eb777c5d8d5ccbc16dc4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> Event::gTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">uint_t</td><td>The amount of time remaining. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6deaed335b6c5b7690c79c36107e2c4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Event::New </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classCharacter.xhtml">Character</a> *&#160;</td>
          <td class="paramname"><em>character</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classCommand.xhtml">Command</a> *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The string used to locate the actual command. Needed for some admin commands. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>The arguments to be passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">character</td><td>The character who initiated the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">command</td><td>The command to execute. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>How long to wait before executing <a class="el" href="classEvent.xhtml#ae00620af2a424d3d0041676e76b9303c" title="Execute the function stored within the Event object.">Event::Run()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the event is unable to be created. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the event was successfully created. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( args.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with empty args&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( character == NULL )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with NULL character&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( type == <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a33c33fab988563da1d33705ad2af3843">EVENT_TYPE_RELOAD</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with invalid type&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( time &lt; <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with invalid time&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a> = args;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#aae899d5bdca69420e326131739f81445">m_cmd</a> = cmd;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a57e336815f086c624c6ec8c78f6bf122">m_character</a> = character;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a> = command;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a> = time;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#af8f7b979851e4e7d37a61fd890398801">m_type</a> = type;</div>
<div class="line"></div>
<div class="line">    <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.push_front( <span class="keyword">this</span> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2306a6a426cff5f772c4974c9ba145d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Event::New </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>The arguments to be passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>How long to wait before executing <a class="el" href="classEvent.xhtml#ae00620af2a424d3d0041676e76b9303c" title="Execute the function stored within the Event object.">Event::Run()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the event is unable to be created. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the event was successfully created. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( args.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with empty args&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( type != <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a33c33fab988563da1d33705ad2af3843">EVENT_TYPE_RELOAD</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with invalid type&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( time &lt; <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with invalid time&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a> = args;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a> = time;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#af8f7b979851e4e7d37a61fd890398801">m_type</a> = type;</div>
<div class="line"></div>
<div class="line">    <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.push_front( <span class="keyword">this</span> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa606d3646f0220abc3af0419d2e6263d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Event::New </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classCommand.xhtml">Command</a> *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The string used to locate the actual command. Needed for some admin commands. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>The arguments to be passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The client who initiated the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">command</td><td>The command to execute. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>How long to wait before executing <a class="el" href="classEvent.xhtml#ae00620af2a424d3d0041676e76b9303c" title="Execute the function stored within the Event object.">Event::Run()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the event is unable to be created. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the event was successfully created. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00145">145</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( args.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with empty args&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( client == NULL )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with NULL client&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( type == <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a33c33fab988563da1d33705ad2af3843">EVENT_TYPE_RELOAD</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with invalid type&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( time &lt; <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Event::New() called with invalid time&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a> = args;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#aae899d5bdca69420e326131739f81445">m_cmd</a> = cmd;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a0e5035fc31466ad69e50321148dbe708">m_client</a> = client;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a> = command;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a> = time;</div>
<div class="line">    <a class="code" href="classEvent.xhtml#af8f7b979851e4e7d37a61fd890398801">m_type</a> = type;</div>
<div class="line"></div>
<div class="line">    <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.push_front( <span class="keyword">this</span> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae00620af2a424d3d0041676e76b9303c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Event::Run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00189">189</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">switch</span> ( <a class="code" href="classEvent.xhtml#af8f7b979851e4e7d37a61fd890398801">m_type</a> )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a33c33fab988563da1d33705ad2af3843">EVENT_TYPE_RELOAD</a>:</div>
<div class="line">            <a class="code" href="namespaceServer.xhtml#a4073e768d93ce18c25cb5996f4cd3729" title="Reloads a Command Plugin.">Server::ReloadCommand</a>( <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a> );</div>
<div class="line">        <span class="keywordflow">break</span>;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045ab3a7e6f3bc3725b60cd8f5bfef4ca68c">EVENT_TYPE_CMD_SOCKET</a>:</div>
<div class="line">            <a class="code" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a>-&gt;<a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd" title="Execute a Plugin object&#39;s primary function.">Run</a>( <a class="code" href="classEvent.xhtml#a0e5035fc31466ad69e50321148dbe708">m_client</a>, <a class="code" href="classEvent.xhtml#aae899d5bdca69420e326131739f81445">m_cmd</a>, <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a> );</div>
<div class="line">        <span class="keywordflow">break</span>;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a15e6557b4ff5e76148a16c4adad8e407">EVENT_TYPE_CMD_CHARACTER</a>:</div>
<div class="line">            <a class="code" href="classEvent.xhtml#a55c2a3bc919fe48785d163aa3d6cede9">m_command</a>-&gt;<a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd" title="Execute a Plugin object&#39;s primary function.">Run</a>( <a class="code" href="classEvent.xhtml#a57e336815f086c624c6ec8c78f6bf122">m_character</a>, <a class="code" href="classEvent.xhtml#aae899d5bdca69420e326131739f81445">m_cmd</a>, <a class="code" href="classEvent.xhtml#a35621b42f6299f5d09b685a6c0265eee">m_args</a> );</div>
<div class="line">        <span class="keywordflow">break</span>;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">default</span>:</div>
<div class="line">        <span class="keywordflow">break</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classEvent.xhtml#a95bfba52e3b7c70b33fd7784b396b5c4" title="Unload an event from memory that was previously loaded via Event::New().">Delete</a>();</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classEvent_ae00620af2a424d3d0041676e76b9303c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classEvent_ae00620af2a424d3d0041676e76b9303c_icgraph.svg" width="587" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a65983b240559175bfabe83c640ed7147"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Event::Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned once m_time reaches <a class="el" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a> and the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> can no longer update. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if m_time is greater than <a class="el" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a> and the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a> can still update. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="event_8cpp_source.xhtml#l00219">219</a> of file <a class="el" href="event_8cpp_source.xhtml">event.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">if</span> ( --<a class="code" href="classEvent.xhtml#a55560cd58cd21ff93fb072afb203c4f1">m_time</a> &gt; <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a> )</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classEvent_a65983b240559175bfabe83c640ed7147_icgraph.svg" width="611" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<h2>Member Data Documentation</h2>
<a class="anchor" id="a35621b42f6299f5d09b685a6c0265eee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Event::m_args</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Any arguments to be passed to the function. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00059">59</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<a class="anchor" id="a57e336815f086c624c6ec8c78f6bf122"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCharacter.xhtml">Character</a>* Event::m_character</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> who initiated the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00061">61</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0e5035fc31466ad69e50321148dbe708"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classSocketClient.xhtml">SocketClient</a>* Event::m_client</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The client who initiated the <a class="el" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00062">62</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<a class="anchor" id="aae899d5bdca69420e326131739f81445"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Event::m_cmd</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The string used to locate the actual command. Needed for some admin commands. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00060">60</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<a class="anchor" id="a55c2a3bc919fe48785d163aa3d6cede9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCommand.xhtml">Command</a>* Event::m_command</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> to execute. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00063">63</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<a class="anchor" id="a55560cd58cd21ff93fb072afb203c4f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> Event::m_time</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Amount of time to wait before executing. Based on <a class="el" href="config_8h.xhtml#abf59791d9bc371bb841717a963babfc3" title="How many cycles per second should be processed.">CFG_GAM_PULSE_RATE</a>. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00064">64</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<a class="anchor" id="af8f7b979851e4e7d37a61fd890398801"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> Event::m_type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The type of function to be called. </p>

<p>Definition at line <a class="el" href="event_8h_source.xhtml#l00065">65</a> of file <a class="el" href="event_8h_source.xhtml">event.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>h/<a class="el" href="event_8h_source.xhtml">event.h</a></li>
<li><a class="el" href="event_8cpp_source.xhtml">event.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Jun 11 2013 16:20:41 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
