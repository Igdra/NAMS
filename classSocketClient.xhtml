<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: SocketClient Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classSocketClient-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SocketClient Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> extends the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a> class to implement remote-host socket functions.  
</p>

<p><code>#include &quot;<a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>&quot;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for SocketClient:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient__inherit__graph.svg" width="112" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for SocketClient:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient_1_1TermInfo.xhtml">TermInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remote terminal information and configuration.  <a href="classSocketClient_1_1TermInfo.xhtml#details">More...</a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Core</div></td></tr>
<tr class="memitem:af09328648d18ae943c8866cf744e5aad"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad">Delete</a> ()</td></tr>
<tr class="memdesc:af09328648d18ae943c8866cf744e5aad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unload a client's socket from memory that was previously loaded via <a class="el" href="classSocketClient.xhtml#a8399ef20292e9f3ec83b5c4bec2e105b" title="Build a SocketClient for a new client connection and set all attributes.">SocketClient::New()</a>.  <a href="#af09328648d18ae943c8866cf744e5aad"></a><br/></td></tr>
<tr class="memitem:a8399ef20292e9f3ec83b5c4bec2e105b"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a8399ef20292e9f3ec83b5c4bec2e105b">New</a> (const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;descriptor, const bool &amp;reboot=false)</td></tr>
<tr class="memdesc:a8399ef20292e9f3ec83b5c4bec2e105b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Build a <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> for a new client connection and set all attributes.  <a href="#a8399ef20292e9f3ec83b5c4bec2e105b"></a><br/></td></tr>
<tr class="memitem:aa46590f5ac09115d9888fdb7c600ef1d"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aa46590f5ac09115d9888fdb7c600ef1d">PendingCommand</a> () const </td></tr>
<tr class="memdesc:aa46590f5ac09115d9888fdb7c600ef1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests if there are any commands in the queue to be processed.  <a href="#aa46590f5ac09115d9888fdb7c600ef1d"></a><br/></td></tr>
<tr class="memitem:ad887231d8188cf23b88b6dad24b9408a"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ad887231d8188cf23b88b6dad24b9408a">PendingOutput</a> () const </td></tr>
<tr class="memdesc:ad887231d8188cf23b88b6dad24b9408a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests if there is any output to be processed.  <a href="#ad887231d8188cf23b88b6dad24b9408a"></a><br/></td></tr>
<tr class="memitem:ad4f63c7d906310dc56a1217136047d7f"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ad4f63c7d906310dc56a1217136047d7f">ProcessCommand</a> ()</td></tr>
<tr class="memdesc:ad4f63c7d906310dc56a1217136047d7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the command at the front of the queue.  <a href="#ad4f63c7d906310dc56a1217136047d7f"></a><br/></td></tr>
<tr class="memitem:a92fea2bf7e0f20578404ce1abb835a0b"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a92fea2bf7e0f20578404ce1abb835a0b">ProcessInput</a> ()</td></tr>
<tr class="memdesc:a92fea2bf7e0f20578404ce1abb835a0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process data from the client's receive buffer and split it into commands to queue as necessary.  <a href="#a92fea2bf7e0f20578404ce1abb835a0b"></a><br/></td></tr>
<tr class="memitem:aa3c0d7886b8fede981c73031cfaf17c6"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aa3c0d7886b8fede981c73031cfaf17c6">QueueCommand</a> (const string &amp;command)</td></tr>
<tr class="memdesc:aa3c0d7886b8fede981c73031cfaf17c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a command to the back of the queue.  <a href="#aa3c0d7886b8fede981c73031cfaf17c6"></a><br/></td></tr>
<tr class="memitem:ad8ab017dd47d5e8b20ad30f72773a759"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ad8ab017dd47d5e8b20ad30f72773a759">Quit</a> ()</td></tr>
<tr class="memdesc:ad8ab017dd47d5e8b20ad30f72773a759"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags a client as quitting to break out of nested loops.  <a href="#ad8ab017dd47d5e8b20ad30f72773a759"></a><br/></td></tr>
<tr class="memitem:a92a268dc450fb7f42df61de1105a0416"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a92a268dc450fb7f42df61de1105a0416">Quitting</a> () const </td></tr>
<tr class="memdesc:a92a268dc450fb7f42df61de1105a0416"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a client is marked as quitting.  <a href="#a92a268dc450fb7f42df61de1105a0416"></a><br/></td></tr>
<tr class="memitem:a9ee09f452d900e288b2aa187561ef05d"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a9ee09f452d900e288b2aa187561ef05d">Recv</a> ()</td></tr>
<tr class="memdesc:a9ee09f452d900e288b2aa187561ef05d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receive data from the client and append it to a receive buffer.  <a href="#a9ee09f452d900e288b2aa187561ef05d"></a><br/></td></tr>
<tr class="memitem:afd723bd898217b3c41e29a02f43ec9e1"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#afd723bd898217b3c41e29a02f43ec9e1">ResolveHostname</a> ()</td></tr>
<tr class="memdesc:afd723bd898217b3c41e29a02f43ec9e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">A wrapper to <a class="el" href="classSocketClient.xhtml#a3cfd5a085d8df5b4fed5166afe7578b2" title="Resolve the hostname of the client. Threaded to avoid locking on long resolutions.">SocketClient::tResolveHostname()</a>. Necessary for threading a member function.  <a href="#afd723bd898217b3c41e29a02f43ec9e1"></a><br/></td></tr>
<tr class="memitem:a6268f3d184970ec0076da657c39d2e80"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80">Send</a> ()</td></tr>
<tr class="memdesc:a6268f3d184970ec0076da657c39d2e80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process data from the client's send buffer and transmit it via the socket.  <a href="#a6268f3d184970ec0076da657c39d2e80"></a><br/></td></tr>
<tr class="memitem:a472a64c9b811361791c107498eebf57a"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a472a64c9b811361791c107498eebf57a">Send</a> (const string &amp;msg)</td></tr>
<tr class="memdesc:a472a64c9b811361791c107498eebf57a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append data to an output buffer in preparation of being sent to the client.  <a href="#a472a64c9b811361791c107498eebf57a"></a><br/></td></tr>
<tr class="memitem:ae1cc85ca3320df2f78727f76e40fc5a3"><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ae1cc85ca3320df2f78727f76e40fc5a3">Serialize</a> () const </td></tr>
<tr class="memdesc:ae1cc85ca3320df2f78727f76e40fc5a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serializes the object for writing to disk to be later reloaded.  <a href="#ae1cc85ca3320df2f78727f76e40fc5a3"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Query</div></td></tr>
<tr class="memitem:a56e10cbe469179d7d7bc18eae6ca351c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classAccount.xhtml">Account</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c">gAccount</a> () const </td></tr>
<tr class="memdesc:a56e10cbe469179d7d7bc18eae6ca351c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> object associated to this <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>.  <a href="#a56e10cbe469179d7d7bc18eae6ca351c"></a><br/></td></tr>
<tr class="memitem:a9c982fdda7a3daa5b153eada40a3b6fb"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb">gIdle</a> () const </td></tr>
<tr class="memdesc:a9c982fdda7a3daa5b153eada40a3b6fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of time the client has been idle.  <a href="#a9c982fdda7a3daa5b153eada40a3b6fb"></a><br/></td></tr>
<tr class="memitem:acdff38db903da34b2a9fcc3e12d6a796"><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796">gLogin</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;key) const </td></tr>
<tr class="memdesc:acdff38db903da34b2a9fcc3e12d6a796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of a <a class="el" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2a">SOC_LOGIN</a> key.  <a href="#acdff38db903da34b2a9fcc3e12d6a796"></a><br/></td></tr>
<tr class="memitem:aa0badca8f614127e98281995c02cb385"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385">gState</a> () const </td></tr>
<tr class="memdesc:aa0badca8f614127e98281995c02cb385"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the connection state of the client from <a class="el" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7">SOC_STATE</a>.  <a href="#aa0badca8f614127e98281995c02cb385"></a><br/></td></tr>
<tr class="memitem:aaad671b55573cb36a5d0bcc1e4a518fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSocketClient_1_1TermInfo.xhtml">SocketClient::TermInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aaad671b55573cb36a5d0bcc1e4a518fb">gTermInfo</a> () const </td></tr>
<tr class="memdesc:aaad671b55573cb36a5d0bcc1e4a518fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the terminal information of the <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>.  <a href="#aaad671b55573cb36a5d0bcc1e4a518fb"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Internal</div></td></tr>
<tr class="memitem:a80d1b7bfb8b4126d706981a80e05c78f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a80d1b7bfb8b4126d706981a80e05c78f">SocketClient</a> ()</td></tr>
<tr class="memdesc:a80d1b7bfb8b4126d706981a80e05c78f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor for the <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> class.  <a href="#a80d1b7bfb8b4126d706981a80e05c78f"></a><br/></td></tr>
<tr class="memitem:af4ecba63b08737b5be4fef324cef1df6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#af4ecba63b08737b5be4fef324cef1df6">~SocketClient</a> ()</td></tr>
<tr class="memdesc:af4ecba63b08737b5be4fef324cef1df6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor for the <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> class.  <a href="#af4ecba63b08737b5be4fef324cef1df6"></a><br/></td></tr>
<tr class="inherit_header pub_methods_classSocket"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classSocket')"><img src="closed.png" alt="-"/>&nbsp;Public Member Functions inherited from <a class="el" href="classSocket.xhtml">Socket</a></td></tr>
<tr class="memitem:a508457b48e6296d1e86c7cc72af65948 inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948">Valid</a> () const </td></tr>
<tr class="memdesc:a508457b48e6296d1e86c7cc72af65948 inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return if the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a> is valid for use.  <a href="#a508457b48e6296d1e86c7cc72af65948"></a><br/></td></tr>
<tr class="memitem:ad7ac03a288e6ef47a45e6837f7fef002 inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#ad7ac03a288e6ef47a45e6837f7fef002">gBytesRecvd</a> () const </td></tr>
<tr class="memdesc:ad7ac03a288e6ef47a45e6837f7fef002 inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bytes received by the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a>.  <a href="#ad7ac03a288e6ef47a45e6837f7fef002"></a><br/></td></tr>
<tr class="memitem:a3bb9f40d6e5f32cfa960a86323322c0c inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a3bb9f40d6e5f32cfa960a86323322c0c">gBytesSent</a> () const </td></tr>
<tr class="memdesc:a3bb9f40d6e5f32cfa960a86323322c0c inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bytes sent by the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a>.  <a href="#a3bb9f40d6e5f32cfa960a86323322c0c"></a><br/></td></tr>
<tr class="memitem:a45d3aa99d71b868921543a4708471f82 inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82">gDescriptor</a> () const </td></tr>
<tr class="memdesc:a45d3aa99d71b868921543a4708471f82 inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file descriptor associated to the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a>.  <a href="#a45d3aa99d71b868921543a4708471f82"></a><br/></td></tr>
<tr class="memitem:adc72a37934a4f2d10f6ae8fc94bb4ca7 inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7">gHostname</a> () const </td></tr>
<tr class="memdesc:adc72a37934a4f2d10f6ae8fc94bb4ca7 inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the hostname associated to the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a>.  <a href="#adc72a37934a4f2d10f6ae8fc94bb4ca7"></a><br/></td></tr>
<tr class="memitem:accd94dbf518b30cdd878a9710d3c481c inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#accd94dbf518b30cdd878a9710d3c481c">gPort</a> () const </td></tr>
<tr class="memdesc:accd94dbf518b30cdd878a9710d3c481c inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the port associated to the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a>.  <a href="#accd94dbf518b30cdd878a9710d3c481c"></a><br/></td></tr>
<tr class="memitem:aec278bc5096a3087a7bb6a1ed06d7ddd inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#aec278bc5096a3087a7bb6a1ed06d7ddd">aBytesRecvd</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;amount)</td></tr>
<tr class="memdesc:aec278bc5096a3087a7bb6a1ed06d7ddd inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increment the total count of bytes received by the socket.  <a href="#aec278bc5096a3087a7bb6a1ed06d7ddd"></a><br/></td></tr>
<tr class="memitem:a688f0d2182f7ca098de3f76156efad0a inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a688f0d2182f7ca098de3f76156efad0a">aBytesSent</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;amount)</td></tr>
<tr class="memdesc:a688f0d2182f7ca098de3f76156efad0a inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increment the total count of bytes sent by the socket.  <a href="#a688f0d2182f7ca098de3f76156efad0a"></a><br/></td></tr>
<tr class="memitem:a60b2aa97e6b50c485486e510a1f14d0a inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a60b2aa97e6b50c485486e510a1f14d0a">sDescriptor</a> (const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;descriptor)</td></tr>
<tr class="memdesc:a60b2aa97e6b50c485486e510a1f14d0a inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the file descriptor that was opened for the socket.  <a href="#a60b2aa97e6b50c485486e510a1f14d0a"></a><br/></td></tr>
<tr class="memitem:a14e5e2493abcae97043297dd170e7a39 inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a14e5e2493abcae97043297dd170e7a39">sHostname</a> (const string &amp;hostname)</td></tr>
<tr class="memdesc:a14e5e2493abcae97043297dd170e7a39 inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the hostname of the socket.  <a href="#a14e5e2493abcae97043297dd170e7a39"></a><br/></td></tr>
<tr class="memitem:a24c8132ced233add89f4fda68284e578 inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a24c8132ced233add89f4fda68284e578">sPort</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;port)</td></tr>
<tr class="memdesc:a24c8132ced233add89f4fda68284e578 inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the port that was opened for the socket.  <a href="#a24c8132ced233add89f4fda68284e578"></a><br/></td></tr>
<tr class="memitem:a7c3256c4fc6e2c603df73201049fae5a inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#a7c3256c4fc6e2c603df73201049fae5a">Socket</a> ()</td></tr>
<tr class="memdesc:a7c3256c4fc6e2c603df73201049fae5a inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor for the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a> class.  <a href="#a7c3256c4fc6e2c603df73201049fae5a"></a><br/></td></tr>
<tr class="memitem:aeac4eb6379a543d38ed88977d3b6630a inherit pub_methods_classSocket"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocket.xhtml#aeac4eb6379a543d38ed88977d3b6630a">~Socket</a> ()</td></tr>
<tr class="memdesc:aeac4eb6379a543d38ed88977d3b6630a inherit pub_methods_classSocket"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor for the <a class="el" href="classSocket.xhtml" title="Functions and interfaces that are common to both SocketClient and SocketServer.">Socket</a> class.  <a href="#aeac4eb6379a543d38ed88977d3b6630a"></a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aebf1dbfb77a447461d70452f23bfc1f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classAccount.xhtml">Account</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a></td></tr>
<tr class="memitem:a3c51b2f60fefcc90bfa5ed710e0eb96f"><td class="memItemLeft" align="right" valign="top">deque&lt; pair&lt; string, string &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a></td></tr>
<tr class="memitem:aa3da4ed0f9760c3dd0c39c048f9e99ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aa3da4ed0f9760c3dd0c39c048f9e99ac">m_idle</a></td></tr>
<tr class="memitem:afb9f8fd3659c27bd154c1d1e0f39f09a"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a></td></tr>
<tr class="memitem:ad99b556e3fbc75145cd4a26f8cb2521b"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ad99b556e3fbc75145cd4a26f8cb2521b">m_login</a> [<a class="el" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaeafa7e90eb336c4b3533bef63ec3a445">MAX_SOC_LOGIN</a>]</td></tr>
<tr class="memitem:a2a54cf3d5a21ee7bd695213f3f200576"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a></td></tr>
<tr class="memitem:a84ede1902642e34c0389adaa0e718f96"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a84ede1902642e34c0389adaa0e718f96">m_quitting</a></td></tr>
<tr class="memitem:aa02d9372cc719fd598b842ff2aa4866c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aa02d9372cc719fd598b842ff2aa4866c">m_state</a></td></tr>
<tr class="memitem:a52a31f4112c24bd7e75858d4021fcf95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSocketClient_1_1TermInfo.xhtml">SocketClient::TermInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a52a31f4112c24bd7e75858d4021fcf95">m_terminfo</a></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="member-group"></a>
Manipulate</h2></td></tr>
<tr class="memitem:aaa13ed7d0aa65770b617cbf72a5c28d9"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#aaa13ed7d0aa65770b617cbf72a5c28d9">sAccount</a> (<a class="el" href="classAccount.xhtml">Account</a> *account)</td></tr>
<tr class="memdesc:aaa13ed7d0aa65770b617cbf72a5c28d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Associates an <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> object to the <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>.  <a href="#aaa13ed7d0aa65770b617cbf72a5c28d9"></a><br/></td></tr>
<tr class="memitem:a686aea73a8e9c9dbaac6438ec1b24293"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293">sIdle</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;idle)</td></tr>
<tr class="memdesc:a686aea73a8e9c9dbaac6438ec1b24293"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the idle timer value of the socket.  <a href="#a686aea73a8e9c9dbaac6438ec1b24293"></a><br/></td></tr>
<tr class="memitem:ad6d652d220b5b6820e0d15a328ad9484"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484">sLogin</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;key, const string &amp;val)</td></tr>
<tr class="memdesc:ad6d652d220b5b6820e0d15a328ad9484"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the login command or arguments to be passed between handler functions.  <a href="#ad6d652d220b5b6820e0d15a328ad9484"></a><br/></td></tr>
<tr class="memitem:ab5e6737c8acd4aaa21268e10c1a050b4"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4">sState</a> (const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;state)</td></tr>
<tr class="memdesc:ab5e6737c8acd4aaa21268e10c1a050b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the connection state value of the socket.  <a href="#ab5e6737c8acd4aaa21268e10c1a050b4"></a><br/></td></tr>
<tr class="memitem:a3cfd5a085d8df5b4fed5166afe7578b2"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSocketClient.xhtml#a3cfd5a085d8df5b4fed5166afe7578b2">tResolveHostname</a> (void *data)</td></tr>
<tr class="memdesc:a3cfd5a085d8df5b4fed5166afe7578b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resolve the hostname of the client. Threaded to avoid locking on long resolutions.  <a href="#a3cfd5a085d8df5b4fed5166afe7578b2"></a><br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00034">34</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a80d1b7bfb8b4126d706981a80e05c78f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SocketClient::SocketClient </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00818">818</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> = NULL;</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.clear();</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#aa3da4ed0f9760c3dd0c39c048f9e99ac">m_idle</a> = 0;</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.clear();</div>
<div class="line">    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaeafa7e90eb336c4b3533bef63ec3a445">MAX_SOC_LOGIN</a>; i++ )</div>
<div class="line">        <a class="code" href="classSocketClient.xhtml#ad99b556e3fbc75145cd4a26f8cb2521b">m_login</a>[i].clear();</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a>.clear();</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a84ede1902642e34c0389adaa0e718f96">m_quitting</a> = <span class="keyword">false</span>;</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#aa02d9372cc719fd598b842ff2aa4866c">m_state</a> = <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad79e38eb5b7df99065c5222ab9bb1583">SOC_STATE_DISCONNECTED</a>;</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a52a31f4112c24bd7e75858d4021fcf95">m_terminfo</a> = <span class="keyword">new</span> <a class="code" href="classSocketClient_1_1TermInfo.xhtml" title="Remote terminal information and configuration.">SocketClient::TermInfo</a>();</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af4ecba63b08737b5be4fef324cef1df6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SocketClient::~SocketClient </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00839">839</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keyword">delete</span> <a class="code" href="classSocketClient.xhtml#a52a31f4112c24bd7e75858d4021fcf95">m_terminfo</a>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="af09328648d18ae943c8866cf744e5aad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const void SocketClient::Delete </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classSocket.xhtml#ac7a9c8cef7e70fa1cfa5d4512db2adea">Socket</a>.</p>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( find( <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(), <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(), this ) != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end() )</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.erase( find( <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(), <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(), this ) );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Force anything out of the buffer</span></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>();</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a9e9cff0e2ed046f840c5393d27016e60" title="Set the amount of subordinate SocketClient and SocketServer objects that have been closed on a NAMS S...">sSocketClose</a>( <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#ab8b67dac3edf34148bfbc4059fca8b97" title="Returns the combined number of SocketClient and SocketServer objects that have been destroyed...">gSocketClose</a>() + 1 ) )</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Disconnect()-&gt;Server::Stats::sSocketClose()-&gt; value %lu returned false&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#ab8b67dac3edf34148bfbc4059fca8b97" title="Returns the combined number of SocketClient and SocketServer objects that have been destroyed...">gSocketClose</a>() + 1 );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> != NULL )</div>
<div class="line">        <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>-&gt;<a class="code" href="classAccount.xhtml#aa82e62e930fb3a8ac58a4592f323db75" title="Unload an account from memory that was previously loaded via Account::New().">Delete</a>();</div>
<div class="line"></div>
<div class="line">    <span class="keyword">delete</span> <span class="keyword">this</span>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_af09328648d18ae943c8866cf744e5aad_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_af09328648d18ae943c8866cf744e5aad_icgraph.svg" width="100%" height="379"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a56e10cbe469179d7d7bc18eae6ca351c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classAccount.xhtml">Account</a> * SocketClient::gAccount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname"><a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a></td><td>Pointer to the associated <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> object. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00571">571</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a56e10cbe469179d7d7bc18eae6ca351c_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a9c982fdda7a3daa5b153eada40a3b6fb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> SocketClient::gIdle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">uint_t</td><td>The number of seconds the client has been idle. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00580">580</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classSocketClient.xhtml#aa3da4ed0f9760c3dd0c39c048f9e99ac">m_idle</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a9c982fdda7a3daa5b153eada40a3b6fb_icgraph.svg" width="619" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="acdff38db903da34b2a9fcc3e12d6a796"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string SocketClient::gLogin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">key</td><td>The key position to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">string</td><td>The string stored within the key position, or an empty string if key is outside the proper range. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00590">590</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( key &lt; uintmin_t || key &gt;= <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaeafa7e90eb336c4b3533bef63ec3a445">MAX_SOC_LOGIN</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::gLogin()-&gt; called with invalid key: %lu&quot;</span>, key );</div>
<div class="line">        <span class="keywordflow">return</span> string();</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classSocketClient.xhtml#ad99b556e3fbc75145cd4a26f8cb2521b">m_login</a>[key];</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_acdff38db903da34b2a9fcc3e12d6a796_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa0badca8f614127e98281995c02cb385"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> SocketClient::gState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">uint_t</td><td>The current connection state of the client. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00607">607</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classSocketClient.xhtml#aa02d9372cc719fd598b842ff2aa4866c">m_state</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_aa0badca8f614127e98281995c02cb385_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aaad671b55573cb36a5d0bcc1e4a518fb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classSocketClient_1_1TermInfo.xhtml">SocketClient::TermInfo</a> * SocketClient::gTermInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SocketClient::TermInfo*</td><td>A pointer to the terminal information of the <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00616">616</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classSocketClient.xhtml#a52a31f4112c24bd7e75858d4021fcf95">m_terminfo</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_aaad671b55573cb36a5d0bcc1e4a518fb_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a8399ef20292e9f3ec83b5c4bec2e105b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::New </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>reboot</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">descriptor</td><td>The file descriptor to utilize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reboot</td><td>Mark if the server is undergoing a reboot or not. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if there is an error in connecting the client. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the client is successfully connected. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classSocket.xhtml#a017a4476d49977ced119601f71483789">Socket</a>.</p>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> error = 0;</div>
<div class="line">    sockaddr_storage sin;</div>
<div class="line">    socklen_t size = <span class="keyword">static_cast&lt;</span>socklen_t<span class="keyword">&gt;</span>( <span class="keyword">sizeof</span>( sin ) );</div>
<div class="line">    <span class="keywordtype">char</span> hostname[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>], service[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>];</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocket.xhtml#a60b2aa97e6b50c485486e510a1f14d0a" title="Sets the file descriptor that was opened for the socket.">sDescriptor</a>( descriptor );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !reboot )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( ::fcntl( <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>(), F_SETFL, O_NONBLOCK ) &lt; 0 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;fcntl()-&gt;&quot;</span> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( ::getpeername( <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>(), reinterpret_cast&lt;sockaddr*&gt;( &amp;sin ), &amp;size ) &lt; 0 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;getpeername()-&gt;&quot;</span> );</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a14e5e2493abcae97043297dd170e7a39" title="Sets the hostname of the socket.">sHostname</a>( <span class="stringliteral">&quot;(unknown)&quot;</span> ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;SocketClient::sHostname()-&gt; hostname (unknown) returned false&quot;</span> );</div>
<div class="line">                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">else</span></div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">if</span> ( ( error = ::getnameinfo( reinterpret_cast&lt;sockaddr*&gt;( &amp;sin ), size, hostname, <span class="keyword">sizeof</span>( hostname ), service, <span class="keyword">sizeof</span>( service ), NI_NUMERICSERV) ) != 0 )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;getnameinfo()-&gt; returned errno %d:%s&quot;</span>, error, gai_strerror( error ) );</div>
<div class="line">                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a14e5e2493abcae97043297dd170e7a39" title="Sets the hostname of the socket.">sHostname</a>( hostname ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;SocketClient::sHostname()-&gt; hostname %s returned false&quot;</span>, hostname );</div>
<div class="line">                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a24c8132ced233add89f4fda68284e578" title="Sets the port that was opened for the socket.">sPort</a>( atol( service ) ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;SocketClient::sPort()-&gt; port %lu returned false&quot;</span>, atol( service ) );</div>
<div class="line">                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;SocketClient::New()-&gt; %s:%lu (%lu)&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ), <a class="code" href="classSocket.xhtml#accd94dbf518b30cdd878a9710d3c481c" title="Returns the port associated to the Socket.">gPort</a>(), <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="comment">// negotiate telopts, send login message</span></div>
<div class="line">        <span class="keywordflow">if</span> ( !<a class="code" href="namespaceTelopt.xhtml#aae5468ac9f53474dea225a4485905ac3" title="Send initial options to negotiate for, then the login string.">Telopt::InitialNegotiation</a>( <span class="keyword">this</span> ) )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;Telopt::InitialNegotiation()-&gt; returned false&quot;</span> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( !<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> ) )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::New()-&gt;SocketClient::sState()-&gt; state %lu returned false&quot;</span>, <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">Handler::LoginHandler</a>( <span class="keyword">this</span> );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a46cb8a5f50a8861516cb0420183d2d4a" title="Set the amount of subordinate SocketClient and SocketServer objects that have been opened on a NAMS S...">sSocketOpen</a>( <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a1f596bc714002b643097cf93d9760ea1" title="Returns the combined number of SocketClient and SocketServer objects that have been created...">gSocketOpen</a>() + 1 );</div>
<div class="line">    <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.push_back( <span class="keyword">this</span> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a8399ef20292e9f3ec83b5c4bec2e105b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a8399ef20292e9f3ec83b5c4bec2e105b_icgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa46590f5ac09115d9888fdb7c600ef1d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::PendingCommand </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the command queue is empty. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the command queue is not empty. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00149">149</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> !<a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.empty();</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_aa46590f5ac09115d9888fdb7c600ef1d_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad887231d8188cf23b88b6dad24b9408a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::PendingOutput </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the output buffer is empty. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the output buffer is not empty. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00159">159</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> !<a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a>.empty();</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ad887231d8188cf23b88b6dad24b9408a_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad4f63c7d906310dc56a1217136047d7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::ProcessCommand </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the socket is invalid or if a critical fault occurs during interpreting. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the queue is empty or there were no errors interpreting the command. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    pair&lt;string,string&gt; cmd;</div>
<div class="line">    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* command = NULL;</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> security = <a class="code" href="enum_8h.xhtml#a1ac3d345b9be3a5c05bc8d91f23ebd7aa62268793e26686df00b9673b04dd649b">ACT_SECURITY_NONE</a>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::ProcessCommand()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Nothing new to process; move along</span></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.empty() )</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> )</div>
<div class="line">        security = <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>-&gt;<a class="code" href="classAccount.xhtml#a9a9ee5a78d3353c688c6418c2a88ba54" title="Returns the authorized security level of the account.">gSecurity</a>();</div>
<div class="line"></div>
<div class="line">    cmd = <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.front();</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.pop_front();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Redirect if not fully logged in yet</span></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aa02d9372cc719fd598b842ff2aa4866c">m_state</a> &lt; <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> )</div>
<div class="line">        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">Handler::LoginHandler</a>( <span class="keyword">this</span>, cmd.first, cmd.second );</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">    {</div>
<div class="line">        <span class="comment">// Raw run if no Character exists to interpret</span></div>
<div class="line">        <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> == NULL || <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )</div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">if</span> ( ( command = <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( cmd.first ) ) != NULL )</div>
<div class="line">            {</div>
<div class="line">                <span class="keywordflow">if</span> ( command-&gt;<a class="code" href="classCommand.xhtml#a1ccef73405910cf3e44943a3244b645b" title="Check if sec is &gt;= m_security for permission to call Command::Run().">Authorized</a>( security ) )</div>
<div class="line">                    command-&gt;<a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd" title="Execute a Plugin object&#39;s primary function.">Run</a>( <span class="keyword">this</span>, cmd.first, cmd.second );</div>
<div class="line">                <span class="keywordflow">else</span></div>
<div class="line">                    <a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ac99cc23a3caa3959e24a3475ab43adbc" title="String sent when an invalid command is received.">CFG_STR_CMD_INVALID</a> );</div>
<div class="line">            }</div>
<div class="line">            <span class="keywordflow">else</span></div>
<div class="line">                <a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ac99cc23a3caa3959e24a3475ab43adbc" title="String sent when an invalid command is received.">CFG_STR_CMD_INVALID</a> );</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">else</span></div>
<div class="line">            <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad51f5ff0cfefa9bd7e674bc413f6b73c" title="Interprets cmd with args at level security.">Interpret</a>( security, cmd.first, cmd.second );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ad4f63c7d906310dc56a1217136047d7f_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ad4f63c7d906310dc56a1217136047d7f_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a92fea2bf7e0f20578404ce1abb835a0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::ProcessInput </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the socket is invalid or if a critical fault occurs when adding the command to the queue. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if there is no input to process or input was processed successfully. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00222">222</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    vector&lt;string&gt; commands;</div>
<div class="line">    <span class="keywordtype">string</span> command;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <span class="keywordtype">string</span>, vi );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::ProcessInput()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Nothing new to process; move along</span></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.empty() )</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"></div>
<div class="line">    commands = <a class="code" href="namespaceUtils.xhtml#a8c70e85acdb1549aa4cd3a16b8d8d9cf" title="Returns a vector of strings split at linebreaks based on input.">Utils::StrNewlines</a>( <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a> );</div>
<div class="line">    <span class="keywordflow">for</span> ( vi = commands.begin(); vi != commands.end(); vi++ )</div>
<div class="line">    {</div>
<div class="line">        command = *vi;</div>
<div class="line">        <span class="keywordflow">if</span> ( !<a class="code" href="classSocketClient.xhtml#aa3c0d7886b8fede981c73031cfaf17c6" title="Append a command to the back of the queue.">QueueCommand</a>( command ) )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::ProcessInput()-&gt;SocketClient::QueueCommand()-&gt; command %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( command ) );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.clear();</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a92fea2bf7e0f20578404ce1abb835a0b_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a92fea2bf7e0f20578404ce1abb835a0b_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa3c0d7886b8fede981c73031cfaf17c6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::QueueCommand </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>command</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the socket is invalid. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if a command was successfully added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00260">260</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <span class="keywordtype">string</span> args, cmd;</div>
<div class="line">    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* search = NULL;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::QueueCommand()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    args = command;</div>
<div class="line">    cmd = <a class="code" href="namespaceUtils.xhtml#af8586b5c4d77ae0617279186b2bfdb66" title="Returns the first delimeter separated argument from input and then erases it from input...">Utils::Argument</a>( args );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Check to see if the command can preempt and go to the front of the queue</span></div>
<div class="line">    <span class="keywordflow">if</span> ( ( search = <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( cmd ) ) != NULL )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( search-&gt;<a class="code" href="classCommand.xhtml#a24702b444e22d28a7566b539a0d15b90" title="Return the preempt status of the associated Plugin object.">gPreempt</a>() )</div>
<div class="line">            <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.push_front( pair&lt;string,string&gt;( cmd, args ) );</div>
<div class="line">        <span class="keywordflow">else</span></div>
<div class="line">            <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.push_back( pair&lt;string,string&gt;( cmd, args ) );</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <a class="code" href="classSocketClient.xhtml#a3c51b2f60fefcc90bfa5ed710e0eb96f">m_command_queue</a>.push_back( pair&lt;string,string&gt;( cmd, args ) );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_aa3c0d7886b8fede981c73031cfaf17c6_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_aa3c0d7886b8fede981c73031cfaf17c6_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad8ab017dd47d5e8b20ad30f72773a759"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void SocketClient::Quit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00293">293</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">switch</span> ( <a class="code" href="classSocketClient.xhtml#aa02d9372cc719fd598b842ff2aa4866c">m_state</a> )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9d096c75b5e31056089c1e20afad749e">SOC_STATE_DISC_LINKDEAD</a>:   <a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#acb1476c42b5b7907fee3de207542525a" title="String sent to the client when they are disconnected due to a new login session on the same Character...">CFG_STR_QUIT_LINKDEAD</a> );  <span class="keywordflow">break</span>;</div>
<div class="line">        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a>:         <a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aa6cfd255231b01ddf9e7eac08fb1838c" title="String sent to the client when they quit.">CFG_STR_QUIT_PLAYING</a> );   <span class="keywordflow">break</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() )</div>
<div class="line">            <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a>-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#acbf271cc1d8bf64bd5bd4c286f508f67" title="Serialize the character data.">Serialize</a>();</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Quit()-&gt; %s:%lu (%lu)&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ), <a class="code" href="classSocket.xhtml#accd94dbf518b30cdd878a9710d3c481c" title="Returns the port associated to the Socket.">gPort</a>(), <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a84ede1902642e34c0389adaa0e718f96">m_quitting</a> = <span class="keyword">true</span>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ad8ab017dd47d5e8b20ad30f72773a759_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ad8ab017dd47d5e8b20ad30f72773a759_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a92a268dc450fb7f42df61de1105a0416"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::Quitting </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the m_quitting is set to false. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the m_quitting is set to true. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00321">321</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code" href="classSocketClient.xhtml#a84ede1902642e34c0389adaa0e718f96">m_quitting</a>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a92a268dc450fb7f42df61de1105a0416_icgraph.svg" width="638" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a9ee09f452d900e288b2aa187561ef05d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::Recv </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if there was an error while receiving data. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if there is no data to receive or data was received successfully. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    ssize_t amount = 0;</div>
<div class="line">    <span class="keywordtype">char</span> buf[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>] = {<span class="charliteral">&#39;\0&#39;</span>};</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ( <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.length() + <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a> ) &gt;= <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.max_size() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt; called with m_input overflow: %lu + %lu&quot;</span>, <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.length(), <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ( amount = ::recv( <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>(), buf, <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a> - 1, 0 ) ) &lt; 1 )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( amount == 0 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt;recv()-&gt; broken pipe encountered on recv from: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ) );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( errno != EAGAIN &amp;&amp; errno != EWOULDBLOCK )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt;recv()-&gt;&quot;</span> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocket.xhtml#aec278bc5096a3087a7bb6a1ed06d7ddd" title="Increment the total count of bytes received by the socket.">aBytesRecvd</a>( amount ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt;SocketServer::aBytesRecvd()-&gt; value %lu returned false&quot;</span>, <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocket.xhtml#ad7ac03a288e6ef47a45e6837f7fef002" title="Returns the number of bytes received by the Socket.">gBytesRecvd</a>() + amount );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#aec278bc5096a3087a7bb6a1ed06d7ddd" title="Increment the total count of bytes received by the socket.">aBytesRecvd</a>( amount ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt;SocketClient::aBytesRecvd()-&gt; value %lu returned false&quot;</span>, <a class="code" href="classSocket.xhtml#ad7ac03a288e6ef47a45e6837f7fef002" title="Returns the number of bytes received by the Socket.">gBytesRecvd</a>() + amount );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( 0 ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;SocketClient::Recv()-&gt;SocketClient::sIdle()-&gt; value 0 returned false&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#afb9f8fd3659c27bd154c1d1e0f39f09a">m_input</a>.append( <a class="code" href="namespaceTelopt.xhtml#abdb8913fd8eb65e47c6035240d9a291f" title="Processes data received from a SocketClient for telnet sequences.">Telopt::ProcessInput</a>( <span class="keyword">this</span>, buf ) );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a9ee09f452d900e288b2aa187561ef05d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a9ee09f452d900e288b2aa187561ef05d_icgraph.svg" width="616" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="afd723bd898217b3c41e29a02f43ec9e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void SocketClient::ResolveHostname </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00390">390</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    pthread_t res_thread;</div>
<div class="line">    pthread_attr_t res_attr;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::ResolveHostname()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ::pthread_attr_init( &amp;res_attr ) != 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::ResolveHostname()-&gt;pthread_attr_init()-&gt;&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ::pthread_attr_setdetachstate( &amp;res_attr, PTHREAD_CREATE_DETACHED ) != 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::ResolveHostname()-&gt;pthread_attr_setdetachstate()-&gt;&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ::pthread_create( &amp;res_thread, &amp;res_attr, &amp;<a class="code" href="classSocketClient.xhtml#a3cfd5a085d8df5b4fed5166afe7578b2" title="Resolve the hostname of the client. Threaded to avoid locking on long resolutions.">SocketClient::tResolveHostname</a>, <span class="keyword">this</span> ) != 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::ResolveHostname()-&gt;pthread_create()-&gt;&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ::pthread_attr_destroy( &amp;res_attr ) != 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::ResolveHostname()-&gt;pthread_attr_destroy()-&gt;&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_afd723bd898217b3c41e29a02f43ec9e1_cgraph.svg" width="100%" height="423"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aaa13ed7d0aa65770b617cbf72a5c28d9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::sAccount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classAccount.xhtml">Account</a> *&#160;</td>
          <td class="paramname"><em>account</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">account</td><td>A pointer to the <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> object to be associated. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the account pointer is NULL. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the account is successfully associated. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00672">672</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> != NULL &amp;&amp; account != NULL )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;SocketClient::sAccount()-&gt; called while m_account is not NULL&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#aebf1dbfb77a447461d70452f23bfc1f4">m_account</a> = account;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_aaa13ed7d0aa65770b617cbf72a5c28d9_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a6268f3d184970ec0076da657c39d2e80"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::Send </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the socket is invalid or there is an error while sending. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if there is no data to send or data was sent successfully. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00434">434</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    ssize_t amount = 0;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;SocketClient::gAccount()-&gt; returned NULL with SOC_STATE_PLAYING&quot;</span> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;gCharacter() == NULL )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;Account::gCharacter()-&gt; returned NULL with SOC_STATE_PLAYING&quot;</span> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;gCharacter()-&gt;gPrompt() );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Nothing new to process; move along</span></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a>.empty() )</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ( amount = ::send( <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>(), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a> ), <a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a>.length(), 0 ) ) &lt; 1 )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( amount == 0 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;send()-&gt; broken pipe encountered on send to: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ) );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( errno != EAGAIN &amp;&amp; errno != EWOULDBLOCK )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;send()-&gt;&quot;</span> );</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocket.xhtml#a688f0d2182f7ca098de3f76156efad0a" title="Increment the total count of bytes sent by the socket.">aBytesSent</a>( amount ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;SocketServer::aBytesSent()-&gt; value %lu returned false&quot;</span>, <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocket.xhtml#a3bb9f40d6e5f32cfa960a86323322c0c" title="Returns the number of bytes sent by the Socket.">gBytesSent</a>() + amount );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a688f0d2182f7ca098de3f76156efad0a" title="Increment the total count of bytes sent by the socket.">aBytesSent</a>( amount ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;SocketClient::aBytesSent()-&gt; value %lu returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a3bb9f40d6e5f32cfa960a86323322c0c" title="Returns the number of bytes sent by the Socket.">gBytesSent</a>() + amount );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a>.clear();</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a6268f3d184970ec0076da657c39d2e80_cgraph.svg" width="374" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a6268f3d184970ec0076da657c39d2e80_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a472a64c9b811361791c107498eebf57a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::Send </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>The data to be buffered for sending. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the socket is invalid. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if data was successfully buffered for sending. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00503">503</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="classSocket.xhtml#a508457b48e6296d1e86c7cc72af65948" title="Return if the Socket is valid for use.">Valid</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::Send()-&gt;SocketClient::Valid()-&gt; descriptor %ld returned false&quot;</span>, <a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#a2a54cf3d5a21ee7bd695213f3f200576">m_output</a>.append( <a class="code" href="namespaceTelopt.xhtml#abb99f54e5e0a1ab69795aea0408c0fc2" title="Processes data to be sent to a SocketClient for telnet sequences.">Telopt::ProcessOutput</a>( <span class="keyword">this</span>, msg ) );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a472a64c9b811361791c107498eebf57a_cgraph.svg" width="366" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae1cc85ca3320df2f78727f76e40fc5a3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const string SocketClient::Serialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">string</td><td>A serialized string of all object data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000013">Todo:</a></b></dt><dd>Write this function. </dd></dl>

<p>Implements <a class="el" href="classSocket.xhtml#a2f38fa86bcb79d7b2d6139331fd95436">Socket</a>.</p>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00523">523</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> string();</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a686aea73a8e9c9dbaac6438ec1b24293"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::sIdle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>idle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idle</td><td>A <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> value ranging from 0 to <a class="el" href="config_8h.xhtml#a9e1bbc3ba39f67dbf7398220cdca6441" title="(Minutes / tick rate) before disconnecting an idle socket. Approx 30 minutes.">CFG_SOC_MAX_IDLE</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the idle value is outside the proper range. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the idle value was successfully set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00693">693</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( idle &lt; uintmin_t || idle &gt; <a class="code" href="config_8h.xhtml#a9e1bbc3ba39f67dbf7398220cdca6441" title="(Minutes / tick rate) before disconnecting an idle socket. Approx 30 minutes.">CFG_SOC_MAX_IDLE</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::sIdle()-&gt; called with invalid idle: %lu&quot;</span>, idle );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#aa3da4ed0f9760c3dd0c39c048f9e99ac">m_idle</a> = idle;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_a686aea73a8e9c9dbaac6438ec1b24293_icgraph.svg" width="100%" height="379"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad6d652d220b5b6820e0d15a328ad9484"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::sLogin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">key</td><td>A value from <a class="el" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2a">SOC_LOGIN</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>The value to set key to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the key value is outside the proper range. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the key value was successfully set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00715">715</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( key &lt; uintmin_t || key &gt;= <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaeafa7e90eb336c4b3533bef63ec3a445">MAX_SOC_LOGIN</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::sLogin()-&gt; called with invalid key: %lu&quot;</span>, key );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#ad99b556e3fbc75145cd4a26f8cb2521b">m_login</a>[key] = val;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ad6d652d220b5b6820e0d15a328ad9484_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab5e6737c8acd4aaa21268e10c1a050b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool SocketClient::sState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">state</td><td>A <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> value ranging from <a class="el" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad79e38eb5b7df99065c5222ab9bb1583">SOC_STATE_DISCONNECTED</a> to <a class="el" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a840d70589e2217ed8aa208ba921e5e88">MAX_SOC_STATE</a>-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the socket state value is outside the proper range. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the socket state was successfully set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00775">775</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( state &lt; SOC_STATE_DISCONNECTED || state &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a840d70589e2217ed8aa208ba921e5e88">MAX_SOC_STATE</a> )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::sState()-&gt; called with invalid state: %lu&quot;</span>, state );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="classSocketClient.xhtml#aa02d9372cc719fd598b842ff2aa4866c">m_state</a> = state;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classSocketClient_ab5e6737c8acd4aaa21268e10c1a050b4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3cfd5a085d8df5b4fed5166afe7578b2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * SocketClient::tResolveHostname </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>A self-reference passed via this to use for callback. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="socketclient_8cpp_source.xhtml#l00735">735</a> of file <a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>* socket_client = <span class="keyword">reinterpret_cast&lt;</span><a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*<span class="keyword">&gt;</span>( data );</div>
<div class="line">    <span class="keyword">static</span> sockaddr_in6 sa_zero;</div>
<div class="line">    sockaddr_in6 sa = sa_zero;</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> error = 0;</div>
<div class="line">    <span class="keywordtype">char</span> hostname[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>];</div>
<div class="line"></div>
<div class="line">    sa.sin6_family = AF_INET;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ( error = ::inet_pton( AF_INET6, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( socket_client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ), &amp;sa.sin6_addr ) ) != 1 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::tResolveHostname()-&gt;inet_pton()-&gt; returned errno %d: %s&quot;</span>, error, gai_strerror( error ) );</div>
<div class="line">        ::pthread_exit( reinterpret_cast&lt;void*&gt;( EXIT_FAILURE ) );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ( error = ::getnameinfo( reinterpret_cast&lt;sockaddr*&gt;( &amp;sa ), <span class="keyword">sizeof</span>( sa ), hostname, <span class="keyword">sizeof</span>( hostname ), NULL, 0, 0 ) ) != 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::tResolveHostname()-&gt;getnameinfo()-&gt; returned errno %d: %s&quot;</span>, error, gai_strerror( error ) );</div>
<div class="line">        ::pthread_exit( reinterpret_cast&lt;void*&gt;( EXIT_FAILURE ) );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocket.xhtml#a14e5e2493abcae97043297dd170e7a39" title="Sets the hostname of the socket.">sHostname</a>( hostname ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;SocketClient::tResolveHostname()-&gt;SocketClient::sHostname()-&gt; hostname %s returned false&quot;</span>, hostname );</div>
<div class="line">        ::pthread_exit( reinterpret_cast&lt;void*&gt;( EXIT_FAILURE ) );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;SocketClient::ResolveHostname()-&gt; %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( socket_client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ) );</div>
<div class="line"></div>
<div class="line">    ::pthread_exit( reinterpret_cast&lt;void*&gt;( EXIT_SUCCESS ) );</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a3cfd5a085d8df5b4fed5166afe7578b2_cgraph.svg" width="440" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-33" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-33-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-33-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-33-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSocketClient_a3cfd5a085d8df5b4fed5166afe7578b2_icgraph.svg" width="518" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<h2>Member Data Documentation</h2>
<a class="anchor" id="aebf1dbfb77a447461d70452f23bfc1f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classAccount.xhtml">Account</a>* SocketClient::m_account</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The account associated with the client. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00105">105</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3c51b2f60fefcc90bfa5ed710e0eb96f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">deque&lt; pair&lt;string,string&gt; &gt; SocketClient::m_command_queue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>FIFO queue for commands unless the command specifies preempt. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00106">106</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa3da4ed0f9760c3dd0c39c048f9e99ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> SocketClient::m_idle</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Amount of time since data was last received from the client. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00107">107</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="afb9f8fd3659c27bd154c1d1e0f39f09a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string SocketClient::m_input</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Data received from the client that hasn't been processed yet. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00108">108</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad99b556e3fbc75145cd4a26f8cb2521b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string SocketClient::m_login[<a class="el" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaeafa7e90eb336c4b3533bef63ec3a445">MAX_SOC_LOGIN</a>]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Used to pass login process commands and arguments between handler functions. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00109">109</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2a54cf3d5a21ee7bd695213f3f200576"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string SocketClient::m_output</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Data buffered for sending to the client. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00110">110</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="a84ede1902642e34c0389adaa0e718f96"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SocketClient::m_quitting</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Flag the client as quitting to escape nested loops. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00111">111</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa02d9372cc719fd598b842ff2aa4866c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> SocketClient::m_state</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Connection state of the client from <a class="el" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7">SOC_STATE</a>. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00112">112</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<a class="anchor" id="a52a31f4112c24bd7e75858d4021fcf95"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classSocketClient_1_1TermInfo.xhtml">SocketClient::TermInfo</a>* SocketClient::m_terminfo</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Terminal options and status. </p>

<p>Definition at line <a class="el" href="socketclient_8h_source.xhtml#l00113">113</a> of file <a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>h/<a class="el" href="socketclient_8h_source.xhtml">socketclient.h</a></li>
<li><a class="el" href="socketclient_8cpp_source.xhtml">socketclient.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 16 2013 17:23:47 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
