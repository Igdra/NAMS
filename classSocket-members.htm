<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>NAMS - Not Another MUD Server: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.1 -->
<script type="text/javascript">
function hasClass(ele,cls) {
  return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)'));
}

function addClass(ele,cls) {
  if (!this.hasClass(ele,cls)) ele.className += " "+cls;
}

function removeClass(ele,cls) {
  if (hasClass(ele,cls)) {
    var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)');
    ele.className=ele.className.replace(reg,' ');
  }
}

function toggleVisibility(linkObj) {
 var base = linkObj.getAttribute('id');
 var summary = document.getElementById(base + '-summary');
 var content = document.getElementById(base + '-content');
 var trigger = document.getElementById(base + '-trigger');
 if ( hasClass(linkObj,'closed') ) {
   summary.style.display = 'none';
   content.style.display = 'block';
   trigger.src = 'open.png';
   removeClass(linkObj,'closed');
   addClass(linkObj,'opened');
 } else if ( hasClass(linkObj,'opened') ) {
   summary.style.display = 'block';
   content.style.display = 'none';
   trigger.src = 'closed.png';
   removeClass(linkObj,'opened');
   addClass(linkObj,'closed');
 }
 return false;
}
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Socket Member List</h1>  </div>
</div>
<div class="contents">
This is the complete list of members for <a class="el" href="classSocket.htm">Socket</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#ac7a9c8cef7e70fa1cfa5d4512db2adea">Delete</a>()=0</td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#ad7ac03a288e6ef47a45e6837f7fef002">gBytesRecvd</a>() const </td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a3bb9f40d6e5f32cfa960a86323322c0c">gBytesSent</a>() const </td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a45d3aa99d71b868921543a4708471f82">gDescriptor</a>() const </td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#adc72a37934a4f2d10f6ae8fc94bb4ca7">gHostname</a>() const </td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#accd94dbf518b30cdd878a9710d3c481c">gPort</a>() const </td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a282d278ab607cbfca422504ef1945349">m_bytes_recvd</a></td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#af0b3dfd54d0f706925238bba410cf2f9">m_bytes_sent</a></td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#ad3472404a4a16e143e90dbfb45ddced5">m_descriptor</a></td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a86ca51943303992adf59bfb70036400a">m_hostname</a></td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a5df79ab7d50cced90646c94dc479e278">m_port</a></td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classThread.htm#a975e77d37e7955c21155bfe4b9ddc7d1">MutexLock</a>()</td><td><a class="el" href="classThread.htm">Thread</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classThread.htm#ad616deeb95beb7384b3283c00a0c9bdf">MutexUnlock</a>()</td><td><a class="el" href="classThread.htm">Thread</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a6c74362c2411c96aff10a875772021f2">New</a>()=0</td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a150a2ba8da11a6934d6943613ba011ec">sBytesRecvd</a>(const uint_t &amp;amount)</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a4966e11df7fca3a810cad1cc7091af5e">sBytesSent</a>(const uint_t &amp;amount)</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a60b2aa97e6b50c485486e510a1f14d0a">sDescriptor</a>(const sint_t &amp;descriptor)</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a14e5e2493abcae97043297dd170e7a39">sHostname</a>(const string &amp;hostname)</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#aab53cde845a88cec27192ad7ec8c8869">Socket</a>(Server *server, const sint_t &amp;descriptor)</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a24c8132ced233add89f4fda68284e578">sPort</a>(const uint_t &amp;port)</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classThread.htm#a95c703fb8f2f27cb64f475a8c940864a">Thread</a>()</td><td><a class="el" href="classThread.htm">Thread</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#a508457b48e6296d1e86c7cc72af65948">Valid</a>() const </td><td><a class="el" href="classSocket.htm">Socket</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classSocket.htm#aeac4eb6379a543d38ed88977d3b6630a">~Socket</a>()</td><td><a class="el" href="classSocket.htm">Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classThread.htm#a37d9edd3a1a776cbc27dedff949c9726">~Thread</a>()</td><td><a class="el" href="classThread.htm">Thread</a></td><td></td></tr>
</table></div>
<hr class="footer"/><address class="footer"><small>Generated on Sat Apr 14 2012 23:46:16 for NAMS - Not Another MUD Server by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
