<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: server.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">server.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="server_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/***************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * NAMS - Not Another MUD Server                                           *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *                                                                         *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by    *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * (at your option) any later version.                                     *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *                                                                         *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,         *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * GNU General Public License for more details.                            *</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *                                                                         *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License       *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> ***************************************************************************/</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="includes_8h.xhtml" title="All non-system includes that need to be within each .cpp file.">h/includes.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="server_8h.xhtml" title="The Server namespace.">h/server.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="account_8h.xhtml" title="The Account class.">h/account.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="character_8h.xhtml" title="The Character class.">h/character.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="command_8h.xhtml" title="The Command class.">h/command.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml" title="The Event class.">h/event.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exit_8h.xhtml" title="The Exit class.">h/exit.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="list_8h.xhtml" title="All globally referenced list / map / vector types.">h/list.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="location_8h.xhtml" title="The Location class.">h/location.h</a>&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="object_8h.xhtml" title="The Object class.">h/object.h</a>&quot;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="socketclient_8h.xhtml" title="The SocketClient class.">h/socketclient.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="socketserver_8h.xhtml" title="The SocketServer class.">h/socketserver.h</a>&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/* Core */</span></div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#ac8f796a3da103223e7f176800f4ef929">   49</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classServer_1_1Config.xhtml#ac8f796a3da103223e7f176800f4ef929" title="Unload runtime configuration from memory.">Server::Config::Delete</a>()</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">delete</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="code" href="classServer_1_1Global.xhtml#a14a06f48b3f3d845f54e09c1cbdd8960">   60</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classServer_1_1Global.xhtml#a14a06f48b3f3d845f54e09c1cbdd8960" title="Unload global variables from memory.">Server::Global::Delete</a>()</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">delete</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#a04c80b5a0190d979dce3b5b53c7fe122">   71</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classServer_1_1Stats.xhtml#a04c80b5a0190d979dce3b5b53c7fe122" title="Unload runtime statistics from memory.">Server::Stats::Delete</a>()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">delete</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#ae1bb8d3c7c71119bae6dd4205fd6c0cc">   83</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#ae1bb8d3c7c71119bae6dd4205fd6c0cc" title="Sends a message to all clients connected to the Server.">Server::Broadcast</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; msg )</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> *client = NULL;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*, si );</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        client = *si;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( msg );</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a45782df02e28df1c52c2a8edb90264e1">  107</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceServer.xhtml#a45782df02e28df1c52c2a8edb90264e1" title="Compile a Plugin file.">Server::BuildPlugin</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; file, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; force )</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    FILE* popen_fil = NULL;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">string</span> build_cmd, build_res;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">char</span> buf[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>] = {<span class="charliteral">&#39;\0&#39;</span>};</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// No need to run if the output file already exists and a rebuild wasn&#39;t forced</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#a158e1deb611937a6313e8683fe7db3fc" title="Determines if a file is readable.">Utils::iReadable</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a7e0533ce20f3c090bdf24cc750916edb" title="Directory for plugins to be loaded from.">CFG_DAT_DIR_OBJ</a>, file, <a class="code" href="config_8h.xhtml#aec22aee0979a918423c5743237a25d81" title="File extension for files after they are compiled.">CFG_PLG_BUILD_EXT_OUT</a> ) ) &amp;&amp; !force )</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    build_cmd = <a class="code" href="config_8h.xhtml#a7c9c9701683a057772f0aa1de56d7285" title="The compiler command to use when building plugins.">CFG_PLG_BUILD_CMD</a> <span class="stringliteral">&quot; -o &quot;</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    build_cmd.append( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a7e0533ce20f3c090bdf24cc750916edb" title="Directory for plugins to be loaded from.">CFG_DAT_DIR_OBJ</a>, file, <a class="code" href="config_8h.xhtml#aec22aee0979a918423c5743237a25d81" title="File extension for files after they are compiled.">CFG_PLG_BUILD_EXT_OUT</a> ) );</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    build_cmd.append( <span class="stringliteral">&quot; &quot;</span> );</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    build_cmd.append( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#af2e75e297c4447df28b526dff66734ce" title="Directory for commands to be loaded from.">CFG_DAT_DIR_COMMAND</a>, file ) );</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    build_cmd.append( <span class="stringliteral">&quot; &quot;</span> <a class="code" href="config_8h.xhtml#aaa9f269d301804d5b6963323f2a049a6" title="All build options passed during compiling a plugin.">CFG_PLG_BUILD_OPT</a> );</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// Pipe the build_cmd to the host for processing</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">if</span> ( ( popen_fil = popen( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( build_cmd ), <span class="stringliteral">&quot;r&quot;</span> ) ) != NULL )</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">while</span>( fgets( buf, <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>, popen_fil ) != NULL )</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            build_res.append( buf );</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        pclose( popen_fil );</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Something went wrong</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span> ( !build_res.empty() )</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::BuildPlugin()-&gt;returned error: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( build_res ) );</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Plugin built successfully: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a21b284fbb08f1d61510945f64d0673cb">  149</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a21b284fbb08f1d61510945f64d0673cb" title="Links Exit pointers together after all locations are loaded.">Server::LinkExits</a>()</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="macros_8h.xhtml#af138bcf3c5cc79a8d4649c54ed8cfcf4" title="Define a bitset variable (name) with UTILS_TYPE_ERROR already enabled.">UFLAGS_E</a>( flags );</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>*, li );</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classExit.xhtml" title="A link between two locations within the game world.">Exit</a>*, ei );</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    list&lt;Exit*&gt; loc_exits;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* destination = NULL;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* location = NULL;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="classExit.xhtml" title="A link between two locations within the game world.">Exit</a>* exit = NULL;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    start = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a5358a6cea3578d0e09e2b9db56281941" title="String to output prior to linking exit pointers between locations.">CFG_STR_FILE_EXIT_READ</a> );</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">for</span> ( li = <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.begin(); li != <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.end(); li++ )</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        location = *li;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        loc_exits = location-&gt;<a class="code" href="classLocation.xhtml#ae583e2944b9f01b0cf3784040f9ba32e" title="Returns the list of Exits associated to this Location.">gExits</a>();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">for</span> ( ei = loc_exits.begin(); ei != loc_exits.end(); ei++ )</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            exit = *ei;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">if</span> ( ( destination = <a class="code" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f" title="Locates a Location associated with the game.">Handler::FindLocation</a>( exit-&gt;<a class="code" href="classExit.xhtml#a365f2a3f411df703cb2726ce7a83e0f8" title="Returns the destination id of the Exit.">gDestId</a>(), <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> ) ) == NULL )</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LinkExits()-&gt; location %s has invalid exit to %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( location-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( exit-&gt;<a class="code" href="classExit.xhtml#a365f2a3f411df703cb2726ce7a83e0f8" title="Returns the destination id of the Exit.">gDestId</a>() ) );</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                location-&gt;<a class="code" href="classLocation.xhtml#aca658255ecc7a1f000913f3aefd54fad" title="Removes an Exit associated with this Location.">RemoveExit</a>( exit );</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                exit-&gt;<a class="code" href="classExit.xhtml#ac490c605f6b1581429cc59290e7bd400" title="Unload an exit from memory that was previously loaded via Exit::New().">Delete</a>();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                exit-&gt;<a class="code" href="classExit.xhtml#ae4b375ca6875ef63c9de87bd4f945323" title="Sets the target destination of this Exit.">sDestination</a>( destination );</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    finish = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Linked %lu exits in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Linked %lu exits in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.size(), duration );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#ac2e1d14caee54a38a89c2394abe6e5a5">  198</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceServer.xhtml#ac2e1d14caee54a38a89c2394abe6e5a5" title="Search all subfolders of CFG_DAT_DIR_COMMAND and call Command::New() to load each file found to memor...">Server::LoadCommands</a>()</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* cmd = NULL;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    multimap&lt;bool,string&gt; files;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keywordtype">bool</span>,<span class="keywordtype">string</span>, mi );</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    start = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#acb9463983ccf03f1775ef48719c8ea6e" title="String to output prior to loading command plugins.">CFG_STR_FILE_COMMAND_READ</a> );</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">// Populate the multimap with a recursive listing of the commands folder</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a995fed3bf7ff41788f5b3dbdc6a70ecb" title="Return a multimap of a specified directory tree on disk.">Utils::ListDirectory</a>( <a class="code" href="config_8h.xhtml#af2e75e297c4447df28b526dff66734ce" title="Directory for commands to be loaded from.">CFG_DAT_DIR_COMMAND</a>, <span class="keyword">true</span>, <span class="keyword">false</span>, files, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">if</span> ( files.empty() )</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::LoadCommands()-&gt;Utils::ListDirectory()-&gt; CFG_DAT_DIR_COMMAND returned NULL&quot;</span> );</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">for</span> ( mi = files.begin(); mi != files.end(); mi++ )</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">if</span> ( mi-&gt;first == <a class="code" href="enum_8h.xhtml#a9325070b1daf70dbe43f7fb9a341aaf2">UTILS_IS_FILE</a> &amp;&amp; ( mi-&gt;second.substr( mi-&gt;second.find_last_of( <span class="stringliteral">&quot;.&quot;</span> ) + 1 ) == <a class="code" href="config_8h.xhtml#a47a6c4a9a6b1e4fbcd8edeee92314a25" title="File extension for files to be compiled.">CFG_PLG_BUILD_EXT_IN</a> ) )</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a45782df02e28df1c52c2a8edb90264e1" title="Compile a Plugin file.">BuildPlugin</a>( mi-&gt;second ) )</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadCommand()-&gt;Server::BuildPlugin()-&gt; file %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            cmd = <span class="keyword">new</span> <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>();</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordflow">if</span> ( !cmd-&gt;<a class="code" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48" title="Load a plugin command from CFG_DAT_DIR_OBJ.">New</a>( mi-&gt;second ) )</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadCommands()-&gt;Command::New()-&gt; command %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                cmd-&gt;<a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Delete</a>();</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    finish = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu commands in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu commands in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.size(), duration );</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a9b8efad79a32f2356d431788449e1f82">  252</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceServer.xhtml#a9b8efad79a32f2356d431788449e1f82" title="Search all subfolders of CFG_DAT_DIR_WORLD and call Location::New() to load each file found to memory...">Server::LoadLocations</a>()</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;{</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* loc = NULL;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    multimap&lt;bool,string&gt; files;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keywordtype">bool</span>,<span class="keywordtype">string</span>, mi );</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    start = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a598a5b0092285bf2bd4bfdd628cd9d02" title="String to output prior to loading location files.">CFG_STR_FILE_LOCATION_READ</a> );</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="comment">// Populate the multimap with a recursive listing of the locations folder</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a995fed3bf7ff41788f5b3dbdc6a70ecb" title="Return a multimap of a specified directory tree on disk.">Utils::ListDirectory</a>( <a class="code" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a>, <span class="keyword">true</span>, <span class="keyword">true</span>, files, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">if</span> ( files.empty() )</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::LoadLocations()-&gt;Utils::ListDirectory()-&gt; CFG_DAT_DIR_WORLD returned NULL&quot;</span> );</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">for</span> ( mi = files.begin(); mi != files.end(); mi++ )</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">if</span> ( mi-&gt;first == <a class="code" href="enum_8h.xhtml#a9325070b1daf70dbe43f7fb9a341aaf2">UTILS_IS_FILE</a> &amp;&amp; ( mi-&gt;second.substr( mi-&gt;second.find_last_of( <span class="stringliteral">&quot;.&quot;</span> ) + 1 ) == <a class="code" href="config_8h.xhtml#a56fdb354a0a0aa4879db1e77a32d824b" title="File extension to use for location files.">CFG_DAT_FILE_LOC_EXT</a> ) )</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            loc = <span class="keyword">new</span> <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>();</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">if</span> ( !loc-&gt;<a class="code" href="classLocation.xhtml#a6396aba5eab9bcbabb000c3f6478e1a2" title="Create a new location.">New</a>( mi-&gt;second ) )</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadLocations()-&gt;Location::New()-&gt; location %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                loc-&gt;<a class="code" href="classLocation.xhtml#a2640eee7c5e9b2b08f84a401f7beab53" title="Unload a location from memory that was previously loaded via Location::New().">Delete</a>();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    finish = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu locations in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu locations in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.size(), duration );</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a0a8c7c124f8cc8e5e6a9c7b067be5ff5">  300</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceServer.xhtml#a0a8c7c124f8cc8e5e6a9c7b067be5ff5" title="Search all subfolders of CFG_DAT_DIR_WORLD and call Object::New() to load each file found to memory...">Server::LoadObjects</a>()</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <a class="code" href="classObject.xhtml" title="A physical object within the game world.">Object</a>* obj = NULL;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    multimap&lt;bool,string&gt; files;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keywordtype">bool</span>,<span class="keywordtype">string</span>, mi );</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    start = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a895676d2a595ac29e7cc4e9b6be5ffa7" title="String to output prior to loading object files.">CFG_STR_FILE_OBJECT_READ</a> );</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="comment">// Populate the multimap with a recursive listing of the objectss folder</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a995fed3bf7ff41788f5b3dbdc6a70ecb" title="Return a multimap of a specified directory tree on disk.">Utils::ListDirectory</a>( <a class="code" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a>, <span class="keyword">true</span>, <span class="keyword">true</span>, files, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">if</span> ( files.empty() )</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::LoadObjects()-&gt;Utils::ListDirectory()-&gt; CFG_DAT_DIR_WORLD returned NULL&quot;</span> );</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">for</span> ( mi = files.begin(); mi != files.end(); mi++ )</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="keywordflow">if</span> ( mi-&gt;first == <a class="code" href="enum_8h.xhtml#a9325070b1daf70dbe43f7fb9a341aaf2">UTILS_IS_FILE</a> &amp;&amp; ( mi-&gt;second.substr( mi-&gt;second.find_last_of( <span class="stringliteral">&quot;.&quot;</span> ) + 1 ) == <a class="code" href="config_8h.xhtml#ac6f3fea2937f933a91da70fd5059dd9d" title="File extension to use for object files.">CFG_DAT_FILE_OBJ_EXT</a> ) )</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            obj = <span class="keyword">new</span> <a class="code" href="classObject.xhtml" title="A physical object within the game world.">Object</a>();</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">if</span> ( !obj-&gt;<a class="code" href="classObject.xhtml#abbf694ca0643b6bd1e0b5fbc8d6ade24" title="Create a new object.">New</a>( mi-&gt;second ) )</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadObjects()-&gt;Object::New()-&gt; object %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                obj-&gt;<a class="code" href="classObject.xhtml#a3a18a6bfb53e565749e48f32f19141c6" title="Unload an object from memory that was previously loaded via Object::New() or Object::Clone().">Delete</a>();</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    finish = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu objects in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu objects in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.size(), duration );</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;}</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a39dbe16fdc8c5f6fbd678c6540fbcd6c">  348</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceServer.xhtml#a39dbe16fdc8c5f6fbd678c6540fbcd6c" title="Poll all SocketClient objects that are communicating with the associated SocketServer object...">Server::PollSockets</a>()</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;{</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keyword">static</span> timespec static_time;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    fd_set exc_set;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    fd_set in_set;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    fd_set out_set;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*, si );</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>* socket_client;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> client_desc = 0, max_desc = 0, server_desc = 0;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    FD_ZERO( &amp;exc_set );</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    FD_ZERO( &amp;in_set );</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    FD_ZERO( &amp;out_set );</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span> ( ( server_desc = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketServer::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, server_desc );</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    FD_SET( server_desc, &amp;in_set );</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    max_desc = server_desc;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="comment">// Build three file descriptor lists to be polled</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        socket_client = *si;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        {</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a92a268dc450fb7f42df61de1105a0416" title="Checks if a client is marked as quitting.">Quitting</a>() )</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>();</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        max_desc = max( server_desc, client_desc );</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="comment">// Populate lists of: exceptions, pending input, pending output</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        FD_SET( client_desc, &amp;exc_set );</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        FD_SET( client_desc, &amp;in_set );</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        FD_SET( client_desc, &amp;out_set );</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="comment">// Ensure the file descriptor lists can be watched for updates</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">if</span> ( ::pselect( max_desc + 1, &amp;in_set, &amp;out_set, &amp;exc_set, &amp;static_time, 0 ) &lt; 0 )</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;pselect()-&gt;&quot;</span> );</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">// Process new connections</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordflow">if</span> ( FD_ISSET( server_desc, &amp;in_set ) )</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocketServer.xhtml#afdbc60c3bc840875d2214b59c6213f63" title="Accept a new connection on the listening port.">Accept</a>();</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="comment">// Process faulted connections</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    {</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        socket_client = *si;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        }</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <span class="comment">// Found a faulted socket in the exceptions list</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keywordflow">if</span> ( FD_ISSET( client_desc, &amp;exc_set ) )</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        {</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <span class="comment">// Don&#39;t try to save characters on faulty clients, just boot them</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt; disconnecting faulted descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        }</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    }</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="comment">// Process input from active connections</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        socket_client = *si;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <span class="comment">// Found an active socket in the input list</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keywordflow">if</span> ( FD_ISSET( client_desc, &amp;in_set ) )</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        {</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="comment">// Pending input; clear the idle timeout</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( 0 ) )</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            {</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::sIdle()-&gt; descriptor %ld returned false setting idle: 0&quot;</span>, client_desc );</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <span class="comment">// Read input, save game character and disconnect socket if unable to</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9ee09f452d900e288b2aa187561ef05d" title="Receive data from the client and append it to a receive buffer.">Recv</a>() )</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::Recv()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                <span class="comment">// Detach the Character as linkdead</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> )</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                {</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                    <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() != NULL )</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                    {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() != NULL )</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                            <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>* <span class="keyword">event</span> = <span class="keyword">new</span> <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>();</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9d096c75b5e31056089c1e20afad749e">SOC_STATE_DISC_LINKDEAD</a> );</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( NULL );</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                            <span class="keyword">event</span>-&gt;New( <span class="stringliteral">&quot;quit&quot;</span>, <span class="stringliteral">&quot;quit&quot;</span>, socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>(), <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( <span class="stringliteral">&quot;quit&quot;</span> ), <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a15e6557b4ff5e76148a16c4adad8e407">EVENT_TYPE_CMD_CHARACTER</a>, <a class="code" href="config_8h.xhtml#a2e5cf1b99e6fb32492aeee4eeb9590d3" title="(Minutes / tick rate) before disconnecting an idle Character detached from an Account. Approx 5 minutes.">CFG_CHR_MAX_IDLE</a> );</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( NULL );</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                        }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            }</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        }</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        {</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb" title="Returns the amount of time the client has been idle.">gIdle</a>() + 1 ) )</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::sIdle()-&gt; descriptor %ld returned false setting idle: %lu&quot;</span>, client_desc, socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb" title="Returns the amount of time the client has been idle.">gIdle</a>() + 1 );</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="comment">// Process any pending output</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        socket_client = *si;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        {</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        }</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="comment">// Disconnect sockets that have been idle for too long</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb" title="Returns the amount of time the client has been idle.">gIdle</a>() &gt;= <a class="code" href="config_8h.xhtml#a9e1bbc3ba39f67dbf7398220cdca6441" title="(Minutes / tick rate) before disconnecting an idle socket. Approx 30 minutes.">CFG_SOC_MAX_IDLE</a> )</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gIdle()-&gt; disconnecting idle descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a8e2bae4932d5625144ae9f3bfc8c3fb0" title="String sent on disconnecting an idle socket.">CFG_STR_IDLE</a> );</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="comment">// Found an active socket in the output list</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keywordflow">if</span> ( FD_ISSET( client_desc, &amp;out_set ) &amp;&amp; socket_client-&gt;<a class="code" href="classSocketClient.xhtml#ad887231d8188cf23b88b6dad24b9408a" title="Tests if there is any output to be processed.">PendingOutput</a>() )</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        {</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="comment">// Send output, save game character and disconnect socket if unable to</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>() )</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::PendingOutput()-&gt;SocketClient::Send()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            }</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;}</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a266931bde9b1955346955140986d2b00">  543</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a266931bde9b1955346955140986d2b00" title="Process any scheduled events tied to the Server.">Server::ProcessEvents</a>()</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;{</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>*, ei );</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>* event;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">for</span> ( ei = <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.begin(); ei != <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.end(); ei = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#aaa0f8f02223ffe28765bc7fe3f5b2ea4">m_next_event</a> )</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    {</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <span class="keyword">event</span> = *ei;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#aaa0f8f02223ffe28765bc7fe3f5b2ea4">m_next_event</a> = ++ei;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keywordflow">if</span> ( !event-&gt;<a class="code" href="classEvent.xhtml#a65983b240559175bfabe83c640ed7147" title="Updates the Event by decrementing the remaining time.">Update</a>() )</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            event-&gt;<a class="code" href="classEvent.xhtml#ae00620af2a424d3d0041676e76b9303c" title="Execute the function stored within the Event object.">Run</a>();</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    }</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;}</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00564"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a2b4cec469bb99c2a45e49de5ba74d1ae">  564</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a2b4cec469bb99c2a45e49de5ba74d1ae" title="Processes input from all active SocketClient objects.">Server::ProcessInput</a>()</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;{</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*, si );</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>* socket_client;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> client_desc = 0;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    {</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        socket_client = *si;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        {</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ProcessInput()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;            <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        }</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a92fea2bf7e0f20578404ce1abb835a0b" title="Process data from the client&#39;s receive buffer and split it into commands to queue as necessary...">ProcessInput</a>() )</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        {</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ProcessInput()-&gt;SocketClient::ProcessInput()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        }</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa46590f5ac09115d9888fdb7c600ef1d" title="Tests if there are any commands in the queue to be processed.">PendingCommand</a>() )</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        {</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#ad4f63c7d906310dc56a1217136047d7f" title="Interpret the command at the front of the queue.">ProcessCommand</a>() )</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ProcessInput()-&gt;SocketClient::PendingCommand()-&gt;SocketClient::ProcessCommand()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                <span class="comment">// todo: save character</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            }</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        }</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    }</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;}</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div>
<div class="line"><a name="l00613"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a16ea0639731dee10e1a253375b508a02">  613</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a16ea0639731dee10e1a253375b508a02" title="Recovers the server state and re-connects client sockets after a reboot.">Server::RebootRecovery</a>( <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; reboot )</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;{</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    ifstream recovery;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keywordtype">string</span> key, value, line, silent;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> *client = NULL;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> *account = NULL;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> *character = NULL;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keywordflow">if</span> ( reboot )</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    {</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        recovery.open( <a class="code" href="config_8h.xhtml#a139b7703e057cd102ea853e5999f39fd" title="Directory for temporary files.">CFG_DAT_DIR_VAR</a> <span class="stringliteral">&quot;/&quot;</span> <a class="code" href="config_8h.xhtml#a44e2e94d8914eab0940c8c13d064e2f6" title="File for reboot data to be temporarily stored in.">CFG_DAT_FILE_REBOOT</a>, ifstream::in );</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">while</span> ( recovery.is_open() &amp;&amp; recovery.good() &amp;&amp; getline( recovery, line ) )</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        {</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;            <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b" title="Splits a string in the format of key=value. Retains any whitespace in the value.">Utils::KeyValue</a>( key, value, line) )</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            {</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;Error reading line &quot;</span> &lt;&lt; line &lt;&lt; endl;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            }</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;slnt&quot;</span> )</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                silent = value;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;desc&quot;</span> )</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            {</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                client = <span class="keyword">new</span> <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>();</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                client-&gt;<a class="code" href="classSocketClient.xhtml#a8399ef20292e9f3ec83b5c4bec2e105b" title="Build a SocketClient for a new client connection and set all attributes.">New</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ), <span class="keyword">true</span> );</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            }</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;port&quot;</span> )</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                client-&gt;<a class="code" href="classSocket.xhtml#a24c8132ced233add89f4fda68284e578" title="Sets the port that was opened for the socket.">sPort</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;host&quot;</span> )</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                client-&gt;<a class="code" href="classSocket.xhtml#a14e5e2493abcae97043297dd170e7a39" title="Sets the hostname of the socket.">sHostname</a>( value );</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;recv&quot;</span> )</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                client-&gt;<a class="code" href="classSocket.xhtml#aec278bc5096a3087a7bb6a1ed06d7ddd" title="Increment the total count of bytes received by the socket.">aBytesRecvd</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;sent&quot;</span> )</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                client-&gt;<a class="code" href="classSocket.xhtml#a688f0d2182f7ca098de3f76156efad0a" title="Increment the total count of bytes sent by the socket.">aBytesSent</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;idle&quot;</span> )</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                client-&gt;<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;stat&quot;</span> )</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;acct&quot;</span> )</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, value );</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;pasw&quot;</span> )</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            {</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                account = <span class="keyword">new</span> <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>();</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, value );</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                account-&gt;<a class="code" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf" title="Create a new account.">New</a>( client, <span class="keyword">true</span> );</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            }</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;char&quot;</span> )</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            {</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                character = <span class="keyword">new</span> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>();</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( character );</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                character-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                character-&gt;<a class="code" href="classCharacter.xhtml#a829a28ec5f8573f3f53684ac4dcb75bb" title="Create a new character.">New</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#acee0aed5b91b420a7dbcf37b4b5d08e8" title="Returns the id of the account.">gId</a>() + <span class="stringliteral">&quot;.&quot;</span> + value + <span class="stringliteral">&quot;.&quot;</span> + <a class="code" href="config_8h.xhtml#a2339c99068cee7dd8024d0097583cdee" title="File extension to use for player character files.">CFG_DAT_FILE_PLR_EXT</a>, true );</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                <a class="code" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb" title="Places the character loaded against the account into the game world.">Handler::EnterGame</a>( client, <span class="stringliteral">&quot;reboot&quot;</span>, silent );</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            }</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        }</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        recovery.close();</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        ::unlink( <a class="code" href="config_8h.xhtml#a139b7703e057cd102ea853e5999f39fd" title="Directory for temporary files.">CFG_DAT_DIR_VAR</a> <span class="stringliteral">&quot;/&quot;</span> CFG_DAT_FILE_REBOOT );</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    }</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;}</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div>
<div class="line"><a name="l00683"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a4073e768d93ce18c25cb5996f4cd3729">  683</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceServer.xhtml#a4073e768d93ce18c25cb5996f4cd3729" title="Reloads a Command Plugin.">Server::ReloadCommand</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name )</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;{</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* command = NULL;</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <span class="keywordtype">string</span> file;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    command = <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( name );</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="keywordflow">if</span> ( command == NULL )</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ReloadCommand()-&gt;Server::FindCommand()-&gt; command %s returned NULL&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( name ) );</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    }</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    file = command-&gt;<a class="code" href="classCommand.xhtml#a63b8f3fc40a0cc9e02fcaa2ea2329c40" title="Return the filename of the associated Plugin object.">gFile</a>();</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    command-&gt;<a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Delete</a>();</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    command = <span class="keyword">new</span> <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>();</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="keywordflow">if</span> ( !command-&gt;<a class="code" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48" title="Load a plugin command from CFG_DAT_DIR_OBJ.">New</a>( file ) )</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    {</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ReloadCommand()-&gt;Command::New()-&gt; command %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        command-&gt;<a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Delete</a>();</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    }</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;}</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div>
<div class="line"><a name="l00716"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762">  716</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Server::Shutdown</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a>&amp; status )</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;{</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keywordtype">bool</span> was_running = !<a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97b9415b50cd9bd2b9a96d23553789c4">m_shutdown</a>;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <a class="code" href="namespaceServer.xhtml#ae1bb8d3c7c71119bae6dd4205fd6c0cc" title="Sends a message to all clients connected to the Server.">Broadcast</a>( <a class="code" href="config_8h.xhtml#ac4f506b4cbf175bd5fd4539fe3cafdea" title="String broadcast to all clients when the server is shutting down.">CFG_STR_SHUTDOWN</a> );</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97b9415b50cd9bd2b9a96d23553789c4">m_shutdown</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="comment">// Write runtime settings</span></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#a39f409e995ec914244e9eff416d4477e" title="Serialize runtime configuration settings and write them to CFG_DAT_FILE_SETTINGS.">Serialize</a>();</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="comment">// Cleanup commands</span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.empty() )</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.begin()-&gt;second-&gt;Delete();</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <span class="comment">// Cleanup events</span></div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.empty() )</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.front()-&gt;Delete();</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <span class="comment">// Cleanup exits</span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.empty() )</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.front()-&gt;Delete();</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="comment">// Cleanup locations</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.empty() )</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.front()-&gt;Delete();</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <span class="comment">// Cleanup object copies</span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a408253363e78188e2f70717ee46e7fcc" title="All objects that exist as a copy of a template within the server.">object_list</a>.empty() )</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <a class="code" href="list_8cpp.xhtml#a408253363e78188e2f70717ee46e7fcc" title="All objects that exist as a copy of a template within the server.">object_list</a>.front()-&gt;Delete();</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <span class="comment">// Cleanup object templates</span></div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.empty() )</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.front()-&gt;Delete();</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="comment">// Cleanup socket clients</span></div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.empty() )</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.front()-&gt;Delete();</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <span class="comment">// Only output if the server actually booted; otherwise it probably faulted while getting a port from main()</span></div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    <span class="keywordflow">if</span> ( was_running )</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    {</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        <span class="keywordflow">if</span> ( status == EXIT_SUCCESS )</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#ac53ab4c77c45a5e739a054086eec42fa" title="String to write to log on EXIT_SUCCESS.">CFG_STR_EXIT_SUCCESS</a> );</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#ac890497fb16954e976eabed51b23b1dd" title="String to write to log on EXIT_FAILURE.">CFG_STR_EXIT_FAILURE</a> );</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    }</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="comment">//Cleanup globals last as logging the above depends on them</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#ac8f796a3da103223e7f176800f4ef929" title="Unload runtime configuration from memory.">Delete</a>();</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a04c80b5a0190d979dce3b5b53c7fe122" title="Unload runtime statistics from memory.">Delete</a>();</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a14a06f48b3f3d845f54e09c1cbdd8960" title="Unload global variables from memory.">Delete</a>();</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    ::exit( status );</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;}</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;</div>
<div class="line"><a name="l00769"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a19a1e493e1fb50a56d9c77332543d565">  769</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a19a1e493e1fb50a56d9c77332543d565" title="Start the NAMS Server. Responsible for calling all critical boot-time functions such as SocketServer ...">Server::Startup</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a>&amp; desc )</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;{</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <a class="code" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a>* socket_server = NULL;</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> descriptor = 0;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <span class="keywordtype">bool</span> reboot = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97b9415b50cd9bd2b9a96d23553789c4">m_shutdown</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;%s started.&quot;</span>, <a class="code" href="config_8h.xhtml#ae0189326402738016ca074f43606978f" title="The current server version.">CFG_STR_VERSION</a> );</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    <span class="comment">// Fresh boot, otherwise it would already be assigned during a reboot</span></div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keywordflow">if</span> ( desc == 0 )</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    {</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;        <span class="keywordflow">if</span> ( ( descriptor = ::socket( AF_INET6, SOCK_STREAM, 0 ) ) &lt; 0 )</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        {</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;socket()-&gt;&quot;</span> );</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        }</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    }</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    {</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        descriptor = desc;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        reboot = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    socket_server = <span class="keyword">new</span> <a class="code" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a>();</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a> = socket_server;</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="keywordflow">if</span> ( !socket_server-&gt;<a class="code" href="classSocketServer.xhtml#a0e621d024f754a8c045b4243280cabbe" title="Build a socket for a server and set all attributes.">New</a>( descriptor, reboot ) )</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    {</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;SocketServer::New()-&gt; returned false&quot;</span> );</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    }</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <span class="comment">// Bump ourselves to the root folder for file paths</span></div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <span class="keywordflow">if</span> ( !reboot &amp;&amp; ::chdir( <span class="stringliteral">&quot;..&quot;</span> ) &lt; 0 )</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    {</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;chdir()-&gt;&quot;</span> );</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    }</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#a54dba418bfd3365ccfb30bda37ccd461" title="Unserialize runtime configuration settings from CFG_DAT_FILE_SETTINGS.">Unserialize</a>() )</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    {</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Config::Unserialize()-&gt; returned false&quot;</span> );</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    }</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#ac2e1d14caee54a38a89c2394abe6e5a5" title="Search all subfolders of CFG_DAT_DIR_COMMAND and call Command::New() to load each file found to memor...">LoadCommands</a>() )</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    {</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;Server::LoadCommands()-&gt; returned false&quot;</span> );</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    }</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a9b8efad79a32f2356d431788449e1f82" title="Search all subfolders of CFG_DAT_DIR_WORLD and call Location::New() to load each file found to memory...">LoadLocations</a>() )</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    {</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;Server::LoadLocations()-&gt; returned false&quot;</span> );</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    }</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a0a8c7c124f8cc8e5e6a9c7b067be5ff5" title="Search all subfolders of CFG_DAT_DIR_WORLD and call Object::New() to load each file found to memory...">LoadObjects</a>() )</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    {</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;Server::LoadObjects()-&gt; returned false&quot;</span> );</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    }</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <a class="code" href="namespaceServer.xhtml#a21b284fbb08f1d61510945f64d0673cb" title="Links Exit pointers together after all locations are loaded.">LinkExits</a>();</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <a class="code" href="namespaceServer.xhtml#a16ea0639731dee10e1a253375b508a02" title="Recovers the server state and re-connects client sockets after a reboot.">RebootRecovery</a>( reboot );</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <span class="comment">// Cleanup any leftovers from a hard crash mid-write</span></div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a57b7c6b0c6ea6f1498129d9c9a16d8a8" title="Unlinks any temp files leftover from a failed write.">Utils::CleanupTemp</a>( <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;%s is ready on port %lu.&quot;</span>, <a class="code" href="config_8h.xhtml#ae0189326402738016ca074f43606978f" title="The current server version.">CFG_STR_VERSION</a>, <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ad75b902c5e4d9bc524ac87cfa1f6ee49">m_port</a> );</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <span class="stringliteral">&quot;Last compiled on &quot;</span> __DATE__ <span class="stringliteral">&quot; at &quot;</span> __TIME__ <span class="stringliteral">&quot;.&quot;</span> );</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;}</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div>
<div class="line"><a name="l00848"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a50b81aa91d8fdaee6f52c5c5ec987990">  848</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceServer.xhtml#a50b81aa91d8fdaee6f52c5c5ec987990" title="The core update loop of NAMS. This loop spawns all other subsystem update routines and then sleeps fo...">Server::Update</a>()</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;{</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a38310cb58e1f644fa74ab8e1f5321e4e">m_time_current</a> = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <span class="comment">// Poll all sockets for changes</span></div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a39dbe16fdc8c5f6fbd678c6540fbcd6c" title="Poll all SocketClient objects that are communicating with the associated SocketServer object...">PollSockets</a>() )</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    {</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Update()-&gt;Server::PollSockets()-&gt; returned false&quot;</span> );</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    }</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    <span class="comment">// Process any input received</span></div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <a class="code" href="namespaceServer.xhtml#a2b4cec469bb99c2a45e49de5ba74d1ae" title="Processes input from all active SocketClient objects.">ProcessInput</a>();</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="comment">// Process any scheduled events</span></div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <a class="code" href="namespaceServer.xhtml#a266931bde9b1955346955140986d2b00" title="Process any scheduled events tied to the Server.">ProcessEvents</a>();</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    <span class="comment">// Sleep to control game pacing</span></div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    ::usleep( <a class="code" href="macros_8h.xhtml#a5fc45be6b0bb71dc5d4c6390d98bf3ee" title="This is the maximum value usleep will take per man (3) usleep – 1 second.">USLEEP_MAX</a> / <a class="code" href="config_8h.xhtml#abf59791d9bc371bb841717a963babfc3" title="How many cycles per second should be processed.">CFG_GAM_PULSE_RATE</a> );</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;}</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">/* Query */</span></div>
<div class="line"><a name="l00878"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#a19e57fb735f4ff3787e9e418e5789365">  878</a></span>&#160;vector&lt;string&gt; <a class="code" href="classServer_1_1Config.xhtml#a19e57fb735f4ff3787e9e418e5789365" title="Returns a copy of the disabled commands list.">Server::Config::gDisabledCommands</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    <span class="keywordflow">return</span> m_disabled_commands;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;}</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div>
<div class="line"><a name="l00888"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#ac5ab9debe123ba5b03bd0a127ce5db76">  888</a></span>&#160;list&lt;string&gt; <a class="code" href="classServer_1_1Config.xhtml#ac5ab9debe123ba5b03bd0a127ce5db76" title="Returns a a copy of the prohibited names list using type from SVR_CFG_PROHIBITED_NAMES.">Server::Config::gProhibitedNames</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; type )<span class="keyword"> const</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    <span class="keywordflow">if</span> ( type &lt; uintmin_t || type &gt;= <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a7ed5feb77c107fca67e72bebebbffc94">MAX_SVR_CFG_PROHIBITED_NAMES</a> )</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    {</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Config::gProhibitedNames()-&gt; called with invalid type %lu&quot;</span>, type );</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;        <span class="keywordflow">return</span> list&lt;string&gt;();</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    }</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    <span class="keywordflow">return</span> m_prohibited_names[type];</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;}</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div>
<div class="line"><a name="l00905"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#ab8b67dac3edf34148bfbc4059fca8b97">  905</a></span>&#160;<span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> <a class="code" href="classServer_1_1Stats.xhtml#ab8b67dac3edf34148bfbc4059fca8b97" title="Returns the combined number of SocketClient and SocketServer objects that have been destroyed...">Server::Stats::gSocketClose</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    <span class="keywordflow">return</span> m_socket_close;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;}</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div>
<div class="line"><a name="l00914"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#a1f596bc714002b643097cf93d9760ea1">  914</a></span>&#160;<span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> <a class="code" href="classServer_1_1Stats.xhtml#a1f596bc714002b643097cf93d9760ea1" title="Returns the combined number of SocketClient and SocketServer objects that have been created...">Server::Stats::gSocketOpen</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    <span class="keywordflow">return</span> m_socket_open;</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;}</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;</div>
<div class="line"><a name="l00924"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#afe8c6faa17f98a6ff4b883bcfad7bccb">  924</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="namespaceServer.xhtml#afe8c6faa17f98a6ff4b883bcfad7bccb" title="Gets the hostname of the machine that NAMS is running on.">Server::gHostname</a>()</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;{</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;    <span class="keywordtype">string</span> output;</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;    <span class="keywordtype">char</span> hostname[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>] = {<span class="charliteral">&#39;\0&#39;</span>};</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;    <span class="keywordflow">if</span> ( ::gethostname( hostname, <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a> - 1 ) &lt; 0 )</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    {</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::gHostname()-&gt;gethostname()-&gt;&quot;</span> );</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        output = <span class="stringliteral">&quot;(unknown)&quot;</span>;</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;        <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    }</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    output = hostname;</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;}</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;</div>
<div class="line"><a name="l00947"></a><span class="lineno"><a class="code" href="namespaceServer.xhtml#a0cd8d593edfecdbb98403c2a2c203d64">  947</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="namespaceServer.xhtml#a0cd8d593edfecdbb98403c2a2c203d64" title="Display miscellaneous data about the NAMS Server, such as total data transfered, objects in memory...">Server::gStatus</a>()</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;{</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    <span class="keywordtype">string</span> output;</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = 0, x = 0;</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <span class="comment">// Header</span></div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    output += <span class="stringliteral">&quot;        Status Report for &quot;</span> <a class="code" href="config_8h.xhtml#ae0189326402738016ca074f43606978f" title="The current server version.">CFG_STR_VERSION</a> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    x = output.length() - 2; <span class="comment">// Knock two off for the CRLF</span></div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span>;</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; x; i++ )</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;        output += <span class="stringliteral">&quot;-&quot;</span>;</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    output += CRLF <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    <span class="comment">// Time info</span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    output += <span class="stringliteral">&quot;The MUD was last booted at &quot;</span> + <a class="code" href="namespaceUtils.xhtml#a2b2dad8fa1999271cf613dc735f851d4" title="Returns a given time as a string.">Utils::StrTime</a>( chrono::high_resolution_clock::to_time_t( <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#aa67c259fe2ac90523a49a261721cde47">m_time_boot</a> ) ) + <span class="stringliteral">&quot;.&quot;</span> + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    output += <span class="stringliteral">&quot;The current system time is &quot;</span> + <a class="code" href="namespaceUtils.xhtml#a2b2dad8fa1999271cf613dc735f851d4" title="Returns a given time as a string.">Utils::StrTime</a>( chrono::high_resolution_clock::to_time_t( <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a38310cb58e1f644fa74ab8e1f5321e4e">m_time_current</a> ) ) + <span class="stringliteral">&quot;.&quot;</span> + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    <span class="comment">// Memory info</span></div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    output += CRLF <span class="stringliteral">&quot;Objects in Memory&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Commands&quot;</span>, <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Events&quot;</span>, <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Exits&quot;</span>, <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Locations&quot;</span>, <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Object Templates&quot;</span>, <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Unique Characters&quot;</span>, <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Unique Objects&quot;</span>, <a class="code" href="list_8cpp.xhtml#a408253363e78188e2f70717ee46e7fcc" title="All objects that exist as a copy of a template within the server.">object_list</a>.size() ) + CRLF;</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    <span class="comment">//Runtime statistics</span></div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;    output += CRLF <span class="stringliteral">&quot;Runtime Statistics&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Directories Opened&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> ) + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Directories Closed&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a> ) + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Sockets Opened&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a1f596bc714002b643097cf93d9760ea1" title="Returns the combined number of SocketClient and SocketServer objects that have been created...">gSocketOpen</a>() ) + CRLF;</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Sockets Closed&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#ab8b67dac3edf34148bfbc4059fca8b97" title="Returns the combined number of SocketClient and SocketServer objects that have been destroyed...">gSocketClose</a>() ) + CRLF;</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;}</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">/* Manipulate */</span></div>
<div class="line"><a name="l00990"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#a39f409e995ec914244e9eff416d4477e">  990</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classServer_1_1Config.xhtml#a39f409e995ec914244e9eff416d4477e" title="Serialize runtime configuration settings and write them to CFG_DAT_FILE_SETTINGS.">Server::Config::Serialize</a>()</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;{</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    ofstream ofs;</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    <span class="keywordtype">string</span> value;</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    stringstream line;</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    <a class="code" href="macros_8h.xhtml#ae55287491ba1907e91a3a9fa09ef9d9a" title="Define a const iterator variable (name) of (type) using (container).">CITER</a>( list, <span class="keywordtype">string</span>, li );</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <a class="code" href="macros_8h.xhtml#ae55287491ba1907e91a3a9fa09ef9d9a" title="Define a const iterator variable (name) of (type) using (container).">CITER</a>( vector, <span class="keywordtype">string</span>, vi );</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a0cf49ed4df3002f63ace602d113423b7" title="String to output prior to writing settings files.">CFG_STR_FILE_SETTINGS_WRITE</a> );</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a67fd451200ee8a3cc646aeba5cb9513b" title="Begins a write to a temporary file that is intended to replace a live file.">Utils::FileOpen</a>( ofs, <a class="code" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a> );</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordflow">if</span> ( !ofs.good() )</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    {</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Config::Serialize()-&gt; failed to open settings file: %s&quot;</span>, <a class="code" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a> );</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    }</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    <a class="code" href="macros_8h.xhtml#a820638a5bca755f5ec10ced9cd8e1a37" title="Begins writing (name) to (stream) in key:value format.">KEYLIST</a>( ofs, <span class="stringliteral">&quot;disabled_commands&quot;</span> );</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    {</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;        line.str( <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;        <span class="keywordflow">if</span> ( !m_disabled_commands.empty() )</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;        {</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;            <span class="keywordflow">for</span> ( vi = m_disabled_commands.begin(); vi != m_disabled_commands.end(); vi++ )</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;                line &lt;&lt; *vi &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;            value = line.str();</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;            value.erase( value.end() - 1 );</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;            ofs &lt;&lt; value &lt;&lt; endl;</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;        }</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;            ofs &lt;&lt; endl;</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;    }</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;    <a class="code" href="macros_8h.xhtml#a56c55a4fe68d269a30a5dbddbb210b47" title="Begins writing (name)[iter] to (stream) in key:value format.">KEYLISTLOOP</a>( ofs, <span class="stringliteral">&quot;prohibited_names&quot;</span>, i ); </div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    {</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a7ed5feb77c107fca67e72bebebbffc94">MAX_SVR_CFG_PROHIBITED_NAMES</a>; i++ )</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        {</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;            ofs &lt;&lt; <span class="stringliteral">&quot;prohibited_names[&quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;]&quot;</span> &lt;&lt; <span class="stringliteral">&quot; = &quot;</span>;</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;            line.str( <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;            <span class="keywordflow">if</span> ( !m_prohibited_names[i].empty() )</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;            {</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                <span class="keywordflow">for</span> ( li = m_prohibited_names[i].begin(); li != m_prohibited_names[i].end(); li++ )</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;                    line &lt;&lt; *li &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;                value = line.str();</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                value.erase( value.end() - 1 );</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                ofs &lt;&lt; value &lt;&lt; endl;</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;            }</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                ofs &lt;&lt; endl;</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;        }</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    }</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a7008f8effca71806721305d1834bde1e" title="Completes a read from a file.">Utils::FileClose</a>( ofs, <a class="code" href="config_8h.xhtml#abba93b5729f88761203292fb048c9f21" title="Directory for misc files to be written to and loaded from.">CFG_DAT_DIR_ETC</a>, <a class="code" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a> );</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a02331f1e513a67a7b6574740502b9575" title="String to output after file read/write operations are complete.">CFG_STR_FILE_DONE</a> );</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;}</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div>
<div class="line"><a name="l01058"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#a6f3c3debe1401ac7e55ca846f1d8cfa2"> 1058</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classServer_1_1Config.xhtml#a6f3c3debe1401ac7e55ca846f1d8cfa2" title="Toggles if a command is disabled or not.">Server::Config::ToggleDisable</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; command )</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;{</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* cmd = NULL;</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <span class="keywordtype">string</span>, vi );</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <span class="keywordflow">if</span> ( command.empty() )</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    {</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Config::TogleDisable()-&gt; called with empty command&quot;</span> );</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;    }</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    <span class="keywordflow">if</span> ( ( cmd = <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( command ) ) == NULL )</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    cmd-&gt;<a class="code" href="classCommand.xhtml#a12d4913a30482ab5aaedbf6ec3ad3244" title="Toggles the disabled state of a Command.">ToggleDisable</a>();</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    <span class="keywordflow">if</span> ( ( vi = find( m_disabled_commands.begin(), m_disabled_commands.end(), <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( cmd-&gt;<a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>() ) ) ) == m_disabled_commands.end() )</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;        m_disabled_commands.push_back( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( cmd-&gt;<a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>() ) );</div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;        m_disabled_commands.erase( vi );</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    Serialize();</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;}</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;</div>
<div class="line"><a name="l01090"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#a54dba418bfd3365ccfb30bda37ccd461"> 1090</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classServer_1_1Config.xhtml#a54dba418bfd3365ccfb30bda37ccd461" title="Unserialize runtime configuration settings from CFG_DAT_FILE_SETTINGS.">Server::Config::Unserialize</a>()</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;{</div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;    ifstream ifs;</div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;    <span class="keywordtype">string</span> key, value, line;</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    vector&lt;string&gt; token;</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <span class="keywordtype">string</span>, ti );</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    stringstream loop;</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a17c9f6780711319e53ae873b4201147a" title="String to output prior to loading settings files.">CFG_STR_FILE_SETTINGS_READ</a> );</div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a67fd451200ee8a3cc646aeba5cb9513b" title="Begins a write to a temporary file that is intended to replace a live file.">Utils::FileOpen</a>( ifs, <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#abba93b5729f88761203292fb048c9f21" title="Directory for misc files to be written to and loaded from.">CFG_DAT_DIR_ETC</a>, <a class="code" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a> ) );</div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;</div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    <span class="keywordflow">if</span> ( !ifs.good() )</div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    {</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Config::Unserialize()-&gt; failed to open settings file: %s&quot;</span>, <a class="code" href="config_8h.xhtml#a924ea8b2682938f819a03cde988804af" title="File for runtime and account settings.">CFG_DAT_FILE_SETTINGS</a> );</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    }</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;</div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;    <span class="keywordflow">while</span> ( getline( ifs, line ) )</div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    {</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;        <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b" title="Splits a string in the format of key=value. Retains any whitespace in the value.">Utils::KeyValue</a>( key, value, line) )</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;        {</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Config::Unserialize()-&gt; error reading line: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( line ) );</div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;        }</div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;        <span class="keywordflow">for</span> ( ;; )</div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        {</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;            found = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;            <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;disabled_commands&quot;</span> )</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;            {</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;                found = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;                token = <a class="code" href="namespaceUtils.xhtml#a402a36406edb7938330204e83b1abe83" title="Returns a vector of strings split at spaces based on input.">Utils::StrTokens</a>( value, <span class="keyword">true</span> );</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;                <span class="keywordflow">for</span> ( ti = token.begin(); ti != token.end(); ti++ )</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;                    m_disabled_commands.push_back( *ti );</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;                sort( m_disabled_commands.begin(), m_disabled_commands.end() );</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;            }</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( <span class="stringliteral">&quot;prohibited_names&quot;</span>, key ) ) </div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;            {</div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;                <span class="keywordflow">for</span> ( ; i &lt; <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a7ed5feb77c107fca67e72bebebbffc94">MAX_SVR_CFG_PROHIBITED_NAMES</a>; i++ )</div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;                {</div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;                    loop.str( <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;                    loop &lt;&lt; <span class="stringliteral">&quot;prohibited_names[&quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;</div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;                    <span class="keywordflow">if</span> ( key == loop.str() )</div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;                    {</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;                        found = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;                        token = <a class="code" href="namespaceUtils.xhtml#a402a36406edb7938330204e83b1abe83" title="Returns a vector of strings split at spaces based on input.">Utils::StrTokens</a>( value, <span class="keyword">true</span> );</div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;                        <span class="keywordflow">for</span> ( ti = token.begin(); ti != token.end(); ti++ )</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;                            m_prohibited_names[i].push_front( *ti );</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;                        m_prohibited_names[i].reverse();</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;                    }</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;                }</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;            }</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;</div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;            <span class="keywordflow">if</span> ( !found )</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Config::Unserialize()-&gt;Utils::KeySet()-&gt; key not found: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( key ) );</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;        }</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    }</div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;</div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    <a class="code" href="namespaceUtils.xhtml#a7008f8effca71806721305d1834bde1e" title="Completes a read from a file.">Utils::FileClose</a>( ifs );</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a02331f1e513a67a7b6574740502b9575" title="String to output after file read/write operations are complete.">CFG_STR_FILE_DONE</a> );</div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;</div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;}</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div>
<div class="line"><a name="l01168"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#a9e9cff0e2ed046f840c5393d27016e60"> 1168</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classServer_1_1Stats.xhtml#a9e9cff0e2ed046f840c5393d27016e60" title="Set the amount of subordinate SocketClient and SocketServer objects that have been closed on a NAMS S...">Server::Stats::sSocketClose</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; amount )</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;{</div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;</div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    <span class="keywordflow">if</span> ( amount &lt; uintmin_t || amount &gt;= <a class="code" href="limits_8h.xhtml#a036884201058b0d86aae031fdbcfa16f" title="The maximum value of any uint_t variable.">uintmax_t</a> )</div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;    {</div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Stats::sSocketClose()-&gt; called with m_socket_close overflow: %lu + %lu&quot;</span>, m_socket_close, amount );</div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    }</div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    m_socket_close = amount;</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;</div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;}</div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;</div>
<div class="line"><a name="l01189"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#a46cb8a5f50a8861516cb0420183d2d4a"> 1189</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classServer_1_1Stats.xhtml#a46cb8a5f50a8861516cb0420183d2d4a" title="Set the amount of subordinate SocketClient and SocketServer objects that have been opened on a NAMS S...">Server::Stats::sSocketOpen</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; amount )</div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;{</div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;</div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    <span class="keywordflow">if</span> ( amount &lt; uintmin_t || amount &gt;= <a class="code" href="limits_8h.xhtml#a036884201058b0d86aae031fdbcfa16f" title="The maximum value of any uint_t variable.">uintmax_t</a> )</div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    {</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::Stats::sSocketOpen()-&gt; called with m_socket_open overflow: %lu + %lu&quot;</span>, m_socket_open, amount );</div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    }</div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    m_socket_open = amount;</div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;</div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;}</div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;<span class="comment">/* Internal */</span></div>
<div class="line"><a name="l01208"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#a8fc5b25bc53ed28009c2405e4f55c7ba"> 1208</a></span>&#160;<a class="code" href="classServer_1_1Config.xhtml#a8fc5b25bc53ed28009c2405e4f55c7ba" title="Constructor for the Server::Config class.">Server::Config::Config</a>()</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;{</div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    m_disabled_commands.clear();</div>
<div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a7ed5feb77c107fca67e72bebebbffc94">MAX_SVR_CFG_PROHIBITED_NAMES</a>; i++ )</div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;        m_prohibited_names[i].clear();</div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;}</div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;</div>
<div class="line"><a name="l01222"></a><span class="lineno"><a class="code" href="classServer_1_1Config.xhtml#a03f08c4efd61997ae6c6be516481a58c"> 1222</a></span>&#160;<a class="code" href="classServer_1_1Config.xhtml#a03f08c4efd61997ae6c6be516481a58c" title="Destructor for the Server::Config class.">Server::Config::~Config</a>()</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;{</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;}</div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;</div>
<div class="line"><a name="l01230"></a><span class="lineno"><a class="code" href="classServer_1_1Global.xhtml#a2b3effe974a7f4e8e813fc08eac57cdb"> 1230</a></span>&#160;<a class="code" href="classServer_1_1Global.xhtml#a2b3effe974a7f4e8e813fc08eac57cdb" title="Constructor for the Server::Global class.">Server::Global::Global</a>()</div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;{</div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;    m_listen = NULL;</div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    m_next_character = <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.begin();</div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;    m_next_event = <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.begin();</div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    m_next_socket_client = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin();</div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;    m_port = 0;</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    m_shutdown = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    m_time_boot = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    m_time_current = chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;</div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;}</div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div>
<div class="line"><a name="l01247"></a><span class="lineno"><a class="code" href="classServer_1_1Global.xhtml#a49a7fdf90420561906df68759af61a78"> 1247</a></span>&#160;<a class="code" href="classServer_1_1Global.xhtml#a49a7fdf90420561906df68759af61a78" title="Destructor for the Server::Global class.">Server::Global::~Global</a>()</div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;{</div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    m_listen-&gt;Delete();</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;</div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;}</div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;</div>
<div class="line"><a name="l01257"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#a21af6c2e660e406572eca24b4ac0cd7e"> 1257</a></span>&#160;<a class="code" href="classServer_1_1Stats.xhtml#a21af6c2e660e406572eca24b4ac0cd7e" title="Constructor for the Server::Stats class.">Server::Stats::Stats</a>()</div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;{</div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    m_dir_close = 0;</div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    m_dir_open = 0;</div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    m_socket_close = 0;</div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    m_socket_open = 0;</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;</div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;}</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;</div>
<div class="line"><a name="l01270"></a><span class="lineno"><a class="code" href="classServer_1_1Stats.xhtml#ac083faa794183fe0577c1c2c0a023a25"> 1270</a></span>&#160;<a class="code" href="classServer_1_1Stats.xhtml#ac083faa794183fe0577c1c2c0a023a25" title="Destructor for the Server::Stats class.">Server::Stats::~Stats</a>()</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;{</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 16 2013 17:23:46 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
