<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: Utils Namespace Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Utils Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUtils_1_1DeleteObject.xhtml">DeleteObject</a></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T , class U &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a478a7f4bb31ceb79a2d3e19aaa53724d">DirPath</a> (const T &amp;path, const U &amp;file)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a35029e6e20697c4fef5121040892e144">DelSpaces</a> (const T &amp;t)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f">Lower</a> (const T &amp;t)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a817d26eb6a3427ad3742fb3cb788d30e">Upper</a> (const T &amp;t)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a594756861a60d256d31db7bb34ea70de">String</a> (const T &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const timeval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#adbb91eecf7e80e6e97b3ebe38123cc12">CurrentTime</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a405af6e04f92e289f5be1f8ae24a78ee">DiffTime</a> (const timeval &amp;prev, const timeval &amp;current, const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;granularity)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a33e08ea185b71aab494d83322ad3cd53">_FormatString</a> (const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;narg, const bitset&lt; <a class="el" href="config_8h.xhtml#a67bd2c66766c9c7f481025398b42dadb">CFG_MEM_MAX_BITSET</a> &gt; &amp;flags, const string &amp;caller, const string &amp;fmt,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a070c642e01b4b1d2ded94e234d32f65e">__FormatString</a> (const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;narg, const bitset&lt; <a class="el" href="config_8h.xhtml#a67bd2c66766c9c7f481025398b42dadb">CFG_MEM_MAX_BITSET</a> &gt; &amp;flags, const string &amp;caller, const string &amp;fmt, va_list &amp;val)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#aa2ac8bf1bb304bab8f29829ec30af243">_Logger</a> (const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;narg, const bitset&lt; <a class="el" href="config_8h.xhtml#a67bd2c66766c9c7f481025398b42dadb">CFG_MEM_MAX_BITSET</a> &gt; &amp;flags, const string &amp;caller, const string &amp;fmt,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#afaf029667f299587a52ba9c8de11edfa">NumChar</a> (const string &amp;input, const string &amp;item)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#aeda29ae05e927b463309cf1db39344a0">StrNewlines</a> (const string &amp;input)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#aa3855eafe3e4898c743bc47cdc962a4a">StrTime</a> (const timeval &amp;now)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a9b5c8a47a2cb834c5970f9bc6633b00a">StrTokens</a> (const string &amp;input)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a303e8afc983db3b483fb450a1c499c1e">iDirectory</a> (const string &amp;dir)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a7d40818a602fb21db4b4f0917705f85b">iFile</a> (const string &amp;file)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a47aae40aead5b696e927fb0cdd336442">iNumber</a> (const string &amp;input)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class K , class V , class I &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b">KeyValue</a> (K &amp;key, V &amp;val, const I &amp;item)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class K , class V &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d">KeySet</a> (const bool &amp;igncase, bool &amp;found, const K &amp;keyd, const V &amp;valu, const string &amp;item, string &amp;loc)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class K , class V , class I , class L &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">const void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#a0aff3514e06faae8ed026c673efe002b">KeySet</a> (const bool &amp;igncase, bool &amp;found, const K &amp;keyd, const V &amp;valu, const I &amp;item, L &amp;loc)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const multimap&lt; bool, string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceUtils.xhtml#af8f745fab0d76a937181e752a54015e4">ListDirectory</a> (const string &amp;dir, const bool &amp;recursive, multimap&lt; bool, string &gt; &amp;output, <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;dir_close, <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;dir_open)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a070c642e01b4b1d2ded94e234d32f65e"></a><!-- doxytag: member="Utils::__FormatString" ref="a070c642e01b4b1d2ded94e234d32f65e" args="(const uint_t &amp;narg, const bitset&lt; CFG_MEM_MAX_BITSET &gt; &amp;flags, const string &amp;caller, const string &amp;fmt, va_list &amp;val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a070c642e01b4b1d2ded94e234d32f65e">Utils::__FormatString</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>narg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bitset&lt; <a class="el" href="config_8h.xhtml#a67bd2c66766c9c7f481025398b42dadb">CFG_MEM_MAX_BITSET</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>caller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list &amp;&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a33e08ea185b71aab494d83322ad3cd53"></a><!-- doxytag: member="Utils::_FormatString" ref="a33e08ea185b71aab494d83322ad3cd53" args="(const uint_t &amp;narg, const bitset&lt; CFG_MEM_MAX_BITSET &gt; &amp;flags, const string &amp;caller, const string &amp;fmt,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a33e08ea185b71aab494d83322ad3cd53">Utils::_FormatString</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>narg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bitset&lt; <a class="el" href="config_8h.xhtml#a67bd2c66766c9c7f481025398b42dadb">CFG_MEM_MAX_BITSET</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>caller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa2ac8bf1bb304bab8f29829ec30af243"></a><!-- doxytag: member="Utils::_Logger" ref="aa2ac8bf1bb304bab8f29829ec30af243" args="(const uint_t &amp;narg, const bitset&lt; CFG_MEM_MAX_BITSET &gt; &amp;flags, const string &amp;caller, const string &amp;fmt,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceUtils.xhtml#aa2ac8bf1bb304bab8f29829ec30af243">Utils::_Logger</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>narg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bitset&lt; <a class="el" href="config_8h.xhtml#a67bd2c66766c9c7f481025398b42dadb">CFG_MEM_MAX_BITSET</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>caller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="adbb91eecf7e80e6e97b3ebe38123cc12"></a><!-- doxytag: member="Utils::CurrentTime" ref="adbb91eecf7e80e6e97b3ebe38123cc12" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const timeval <a class="el" href="namespaceUtils.xhtml#adbb91eecf7e80e6e97b3ebe38123cc12">Utils::CurrentTime</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="utils_8cpp_source.xhtml">utils.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502">UFLAGS_DE</a>( flags );
    timeval now;

    <span class="keywordflow">if</span> ( ::gettimeofday( &amp;now, NULL ) &lt; 0 )
    {
        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Utils::CurrentTime()-&gt;&quot;</span> );
        <span class="keywordflow">return</span> timeval();
    }

    <span class="keywordflow">return</span> now;
}
</pre></div>
<p><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceUtils_adbb91eecf7e80e6e97b3ebe38123cc12_icgraph.svg" width="648" height="143"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a35029e6e20697c4fef5121040892e144"></a><!-- doxytag: member="Utils::DelSpaces" ref="a35029e6e20697c4fef5121040892e144" args="(const T &amp;t)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a35029e6e20697c4fef5121040892e144">Utils::DelSpaces</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00048">48</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">{ <span class="keywordtype">string</span> output( t ); output.erase( remove_if( output.begin(), output.end(), ::isspace ), output.end() ); <span class="keywordflow">return</span> output; }
</pre></div>
</div>
</div>
<a class="anchor" id="a405af6e04f92e289f5be1f8ae24a78ee"></a><!-- doxytag: member="Utils::DiffTime" ref="a405af6e04f92e289f5be1f8ae24a78ee" args="(const timeval &amp;prev, const timeval &amp;current, const uint_t &amp;granularity)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> <a class="el" href="namespaceUtils.xhtml#a405af6e04f92e289f5be1f8ae24a78ee">Utils::DiffTime</a> </td>
          <td>(</td>
          <td class="paramtype">const timeval &amp;&#160;</td>
          <td class="paramname"><em>prev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const timeval &amp;&#160;</td>
          <td class="paramname"><em>current</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>granularity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="utils_8cpp_source.xhtml">utils.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">switch</span> ( granularity )
    {
        <span class="keywordflow">case</span>  <a class="code" href="enum_8h.xhtml#adf764cbdea00d65edcd07bb9953ad2b7ae8ea1ef3caec7348d521d686adcfbfff">UTILS_TIME_S</a>: <span class="keywordflow">return</span> ( current.tv_sec - prev.tv_sec );
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#adf764cbdea00d65edcd07bb9953ad2b7ab80ef2c700675085764563f89553686d">UTILS_TIME_MS</a>: <span class="keywordflow">return</span> ( current.tv_usec - prev.tv_usec ) / 1000;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#adf764cbdea00d65edcd07bb9953ad2b7aee1cb989b30c560f341cf31b44f1f64d">UTILS_TIME_US</a>:
                   <span class="keywordflow">default</span>: <span class="keywordflow">return</span> ( current.tv_usec - prev.tv_usec );
    }
}
</pre></div>
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceUtils_a405af6e04f92e289f5be1f8ae24a78ee_icgraph.svg" width="622" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a478a7f4bb31ceb79a2d3e19aaa53724d"></a><!-- doxytag: member="Utils::DirPath" ref="a478a7f4bb31ceb79a2d3e19aaa53724d" args="(const T &amp;path, const U &amp;file)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class U &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a478a7f4bb31ceb79a2d3e19aaa53724d">Utils::DirPath</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const U &amp;&#160;</td>
          <td class="paramname"><em>file</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00032">32</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">    {
        <span class="keywordtype">string</span> output = path;

        <span class="comment">// Ensure a trailing slash is present to properly recurse</span>
        <span class="keywordflow">if</span> ( output.compare( output.length() - 1, 1, <span class="stringliteral">&quot;/&quot;</span> ) != 0 )
            output += <span class="stringliteral">&quot;/&quot;</span>;

        <span class="comment">// Now append the first letter of the file recieved as a subdir</span>
        output += file[0]; output += <span class="stringliteral">&quot;/&quot;</span>;

        <span class="comment">// Finally add the filename</span>
        output += file;

        <span class="keywordflow">return</span> output;
    }
</pre></div>
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceUtils_a478a7f4bb31ceb79a2d3e19aaa53724d_icgraph.svg" width="100%" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a303e8afc983db3b483fb450a1c499c1e"></a><!-- doxytag: member="Utils::iDirectory" ref="a303e8afc983db3b483fb450a1c499c1e" args="(const string &amp;dir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceUtils.xhtml#a303e8afc983db3b483fb450a1c499c1e">Utils::iDirectory</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>dir</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a7d40818a602fb21db4b4f0917705f85b"></a><!-- doxytag: member="Utils::iFile" ref="a7d40818a602fb21db4b4f0917705f85b" args="(const string &amp;file)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceUtils.xhtml#a7d40818a602fb21db4b4f0917705f85b">Utils::iFile</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>file</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceUtils_a7d40818a602fb21db4b4f0917705f85b_icgraph.svg" width="100%" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a47aae40aead5b696e927fb0cdd336442"></a><!-- doxytag: member="Utils::iNumber" ref="a47aae40aead5b696e927fb0cdd336442" args="(const string &amp;input)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceUtils.xhtml#a47aae40aead5b696e927fb0cdd336442">Utils::iNumber</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceUtils_a47aae40aead5b696e927fb0cdd336442_icgraph.svg" width="230" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aba8fca9daa0f767d7f5af5e2b1d6b81d"></a><!-- doxytag: member="Utils::KeySet" ref="aba8fca9daa0f767d7f5af5e2b1d6b81d" args="(const bool &amp;igncase, bool &amp;found, const K &amp;keyd, const V &amp;valu, const string &amp;item, string &amp;loc)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class K , class V &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d">Utils::KeySet</a> </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>igncase</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>found</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const K &amp;&#160;</td>
          <td class="paramname"><em>keyd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const V &amp;&#160;</td>
          <td class="paramname"><em>valu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string &amp;&#160;</td>
          <td class="paramname"><em>loc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00091">91</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">    {
        <span class="keywordtype">string</span> key( keyd );
        <span class="keywordtype">string</span> val( valu );

        <span class="keywordflow">if</span> ( igncase )
        {
            transform( key.begin(), key.end(), key.begin(), ::tolower );
            transform( val.begin(), val.end(), val.begin(), ::tolower );
        }

        <span class="keywordflow">if</span>( key.compare( val ) == 0 )
        {
            loc = item;
            found = <span class="keyword">true</span>;

            <span class="keywordflow">return</span>;
        }

        <span class="keywordflow">return</span>;
    }
</pre></div>
<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceUtils_aba8fca9daa0f767d7f5af5e2b1d6b81d_icgraph.svg" width="100%" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0aff3514e06faae8ed026c673efe002b"></a><!-- doxytag: member="Utils::KeySet" ref="a0aff3514e06faae8ed026c673efe002b" args="(const bool &amp;igncase, bool &amp;found, const K &amp;keyd, const V &amp;valu, const I &amp;item, L &amp;loc)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class K , class V , class I , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d">Utils::KeySet</a> </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>igncase</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>found</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const K &amp;&#160;</td>
          <td class="paramname"><em>keyd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const V &amp;&#160;</td>
          <td class="paramname"><em>valu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const I &amp;&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L &amp;&#160;</td>
          <td class="paramname"><em>loc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00112">112</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">    {
        <span class="keywordtype">string</span> key( keyd );
        <span class="keywordtype">string</span> val( valu );

        <span class="keywordflow">if</span> ( igncase )
        {
            transform( key.begin(), key.end(), key.begin(), ::tolower );
            transform( val.begin(), val.end(), val.begin(), ::tolower );
        }

        <span class="keywordflow">if</span>( key.compare( val ) == 0 )
        {
            <span class="keywordtype">string</span> tf( item );

            <span class="comment">// Allow bools be any of: true / 1 or false / 0</span>
            transform( tf.begin(), tf.end(), tf.begin(), ::tolower );

            <span class="keywordflow">if</span> ( tf.compare( <span class="stringliteral">&quot;true&quot;</span> ) == 0 )
                loc = <span class="keyword">true</span>;
            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( tf.compare( <span class="stringliteral">&quot;false&quot;</span> ) == 0 )
                loc = <span class="keyword">false</span>;
            <span class="keywordflow">else</span>
                stringstream( item ) &gt;&gt; loc;
            found = <span class="keyword">true</span>;

            <span class="keywordflow">return</span>;
        }

        <span class="keywordflow">return</span>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a4a4d3dfd2ddb691bc5bcff82252c058b"></a><!-- doxytag: member="Utils::KeyValue" ref="a4a4d3dfd2ddb691bc5bcff82252c058b" args="(K &amp;key, V &amp;val, const I &amp;item)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class K , class V , class I &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b">Utils::KeyValue</a> </td>
          <td>(</td>
          <td class="paramtype">K &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">V &amp;&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const I &amp;&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00075">75</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">    {
        <span class="keywordtype">size_t</span> loc = 0;

        <span class="keywordflow">if</span> ( ( loc = item.find( <span class="stringliteral">&quot;=&quot;</span> ) ) == string::npos )
            <span class="keywordflow">return</span> <span class="keyword">false</span>;

        key = item.substr( 0, loc - 1 );
        val = item.substr( loc + 1, item.length() );
        loc = key.find_last_not_of( <span class="stringliteral">&quot; &quot;</span> );
        key.erase( loc + 1 );
        loc = val.find_first_not_of( <span class="stringliteral">&quot; &quot;</span> );
        val.erase( 0, loc );

        <span class="keywordflow">return</span> <span class="keyword">true</span>;
    }
</pre></div>
<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceUtils_a4a4d3dfd2ddb691bc5bcff82252c058b_icgraph.svg" width="100%" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="af8f745fab0d76a937181e752a54015e4"></a><!-- doxytag: member="Utils::ListDirectory" ref="af8f745fab0d76a937181e752a54015e4" args="(const string &amp;dir, const bool &amp;recursive, multimap&lt; bool, string &gt; &amp;output, uint_t &amp;dir_close, uint_t &amp;dir_open)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const multimap&lt;bool,string&gt; <a class="el" href="namespaceUtils.xhtml#af8f745fab0d76a937181e752a54015e4">Utils::ListDirectory</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>recursive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">multimap&lt; bool, string &gt; &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>dir_close</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>dir_open</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceUtils_af8f745fab0d76a937181e752a54015e4_icgraph.svg" width="648" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a9b70f9dd0af906c806695b35488e778f"></a><!-- doxytag: member="Utils::Lower" ref="a9b70f9dd0af906c806695b35488e778f" args="(const T &amp;t)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f">Utils::Lower</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00049">49</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">{ stringstream ss; ss &lt;&lt; nouppercase &lt;&lt; t; <span class="keywordflow">return</span> ss.str(); }
</pre></div>
</div>
</div>
<a class="anchor" id="afaf029667f299587a52ba9c8de11edfa"></a><!-- doxytag: member="Utils::NumChar" ref="afaf029667f299587a52ba9c8de11edfa" args="(const string &amp;input, const string &amp;item)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="limits_8h.xhtml#a12a1e9b3ce141648783a82445d02b58d">uint_t</a> <a class="el" href="namespaceUtils.xhtml#afaf029667f299587a52ba9c8de11edfa">Utils::NumChar</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a594756861a60d256d31db7bb34ea70de"></a><!-- doxytag: member="Utils::String" ref="a594756861a60d256d31db7bb34ea70de" args="(const T &amp;t)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a594756861a60d256d31db7bb34ea70de">Utils::String</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00051">51</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">{ stringstream ss( t ); <span class="keywordflow">return</span> ss.str(); }
</pre></div>
</div>
</div>
<a class="anchor" id="aeda29ae05e927b463309cf1db39344a0"></a><!-- doxytag: member="Utils::StrNewlines" ref="aeda29ae05e927b463309cf1db39344a0" args="(const string &amp;input)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const vector&lt;string&gt; <a class="el" href="namespaceUtils.xhtml#aeda29ae05e927b463309cf1db39344a0">Utils::StrNewlines</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceUtils_aeda29ae05e927b463309cf1db39344a0_icgraph.svg" width="100%" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa3855eafe3e4898c743bc47cdc962a4a"></a><!-- doxytag: member="Utils::StrTime" ref="aa3855eafe3e4898c743bc47cdc962a4a" args="(const timeval &amp;now)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#aa3855eafe3e4898c743bc47cdc962a4a">Utils::StrTime</a> </td>
          <td>(</td>
          <td class="paramtype">const timeval &amp;&#160;</td>
          <td class="paramname"><em>now</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="utils_8cpp_source.xhtml">utils.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502">UFLAGS_DE</a>( flags );
    <span class="keywordtype">string</span> output;

    <span class="keywordflow">if</span> ( ( output = ::ctime( &amp;now.tv_sec ) ).empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598">LOGSTR</a>( flags, <span class="stringliteral">&quot;Utils::CurrentTime()-&gt;ctime()-&gt; returned NULL&quot;</span> );
        <span class="keywordflow">return</span> output;
    }

    <span class="comment">// Strip the newline off the end</span>
    output.resize( output.length() - 1 );

    <span class="keywordflow">return</span> output;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9b5c8a47a2cb834c5970f9bc6633b00a"></a><!-- doxytag: member="Utils::StrTokens" ref="a9b5c8a47a2cb834c5970f9bc6633b00a" args="(const string &amp;input)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const vector&lt;string&gt; <a class="el" href="namespaceUtils.xhtml#a9b5c8a47a2cb834c5970f9bc6633b00a">Utils::StrTokens</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a817d26eb6a3427ad3742fb3cb788d30e"></a><!-- doxytag: member="Utils::Upper" ref="a817d26eb6a3427ad3742fb3cb788d30e" args="(const T &amp;t)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const string <a class="el" href="namespaceUtils.xhtml#a817d26eb6a3427ad3742fb3cb788d30e">Utils::Upper</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="utils_8h_source.xhtml#l00050">50</a> of file <a class="el" href="utils_8h_source.xhtml">utils.h</a>.</p>
<div class="fragment"><pre class="fragment">{ stringstream ss; ss &lt;&lt; uppercase &lt;&lt; t; <span class="keywordflow">return</span> ss.str(); }
</pre></div>
</div>
</div>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Apr 15 2012 03:39:41 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
