<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>NAMS - Not Another MUD Server: command.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.1 -->
<script type="text/javascript">
function hasClass(ele,cls) {
  return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)'));
}

function addClass(ele,cls) {
  if (!this.hasClass(ele,cls)) ele.className += " "+cls;
}

function removeClass(ele,cls) {
  if (hasClass(ele,cls)) {
    var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)');
    ele.className=ele.className.replace(reg,' ');
  }
}

function toggleVisibility(linkObj) {
 var base = linkObj.getAttribute('id');
 var summary = document.getElementById(base + '-summary');
 var content = document.getElementById(base + '-content');
 var trigger = document.getElementById(base + '-trigger');
 if ( hasClass(linkObj,'closed') ) {
   summary.style.display = 'none';
   content.style.display = 'block';
   trigger.src = 'open.png';
   removeClass(linkObj,'closed');
   addClass(linkObj,'opened');
 } else if ( hasClass(linkObj,'opened') ) {
   summary.style.display = 'block';
   content.style.display = 'none';
   trigger.src = 'closed.png';
   removeClass(linkObj,'opened');
   addClass(linkObj,'closed');
 }
 return false;
}
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>command.cpp</h1>  </div>
</div>
<div class="contents">
<a href="command_8cpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/***************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * NAMS - Not Another MUD Server                                           *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                         *</span>
<a name="l00005"></a>00005 <span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span>
<a name="l00006"></a>00006 <span class="comment"> * it under the terms of the GNU General Public License as published by    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span>
<a name="l00008"></a>00008 <span class="comment"> * (at your option) any later version.                                     *</span>
<a name="l00009"></a>00009 <span class="comment"> *                                                                         *</span>
<a name="l00010"></a>00010 <span class="comment"> * This program is distributed in the hope that it will be useful,         *</span>
<a name="l00011"></a>00011 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span>
<a name="l00012"></a>00012 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU General Public License for more details.                            *</span>
<a name="l00014"></a>00014 <span class="comment"> *                                                                         *</span>
<a name="l00015"></a>00015 <span class="comment"> * You should have received a copy of the GNU General Public License       *</span>
<a name="l00016"></a>00016 <span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span>
<a name="l00017"></a>00017 <span class="comment"> ***************************************************************************/</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include &quot;<a class="code" href="includes_8h.htm">h/includes.h</a>&quot;</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &quot;<a class="code" href="class_8h.htm">h/class.h</a>&quot;</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.htm">h/command.h</a>&quot;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &quot;<a class="code" href="list_8h.htm">h/list.h</a>&quot;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">// Core</span>
<a name="l00025"></a><a class="code" href="classCommand.htm#a90be4d3384e3bc09529247ecfe5d4a9e">00025</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classCommand.htm#a90be4d3384e3bc09529247ecfe5d4a9e">Command::Load</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; file )
<a name="l00026"></a>00026 {
<a name="l00027"></a>00027     <a class="code" href="macros_8h.htm#a56f9e62010649bf59e47724b826e3502">UFLAGS_DE</a>( flags );
<a name="l00028"></a>00028     <span class="keywordtype">string</span> path(  <a class="code" href="namespaceUtils.htm#a13fa7041ab6558f7b99ae365953199de">Utils::DirPath</a>( <a class="code" href="config_8h.htm#af2e75e297c4447df28b526dff66734ce">CFG_DAT_DIR_COMMAND</a>, file ) );
<a name="l00029"></a>00029     <span class="keywordtype">string</span> line, key, value;
<a name="l00030"></a>00030     <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
<a name="l00031"></a>00031     ifstream cmd;
<a name="l00032"></a>00032 
<a name="l00033"></a>00033     <span class="comment">// Ensure there is a valid file to open</span>
<a name="l00034"></a>00034     <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.htm#a7d40818a602fb21db4b4f0917705f85b">Utils::iFile</a>( path ) )
<a name="l00035"></a>00035     {
<a name="l00036"></a>00036         <a class="code" href="macros_8h.htm#ac116c157aff5572959fd33c0ecd913da">LOGFMT</a>( flags, <span class="stringliteral">&quot;Command::Load()-&gt;Utils::iFile()-&gt; returned false for path: %s&quot;</span>, <a class="code" href="macros_8h.htm#a9e05c5960bb1d108f6621513f708bad4">CSTR</a>( path ) );
<a name="l00037"></a>00037         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00038"></a>00038     }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040     cmd.open( <a class="code" href="macros_8h.htm#a9e05c5960bb1d108f6621513f708bad4">CSTR</a>( path ), ifstream::in );
<a name="l00041"></a>00041     <span class="keywordflow">while</span>( cmd.is_open() &amp;&amp; cmd.good() &amp;&amp; getline( cmd, line ) )
<a name="l00042"></a>00042     {
<a name="l00043"></a>00043         <span class="comment">// Find the key = value split</span>
<a name="l00044"></a>00044         <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.htm#af108db174617d66d6635103994b77895">Utils::KeyValue</a>( key, value, line ) )
<a name="l00045"></a>00045         {
<a name="l00046"></a>00046             <a class="code" href="macros_8h.htm#ac116c157aff5572959fd33c0ecd913da">LOGFMT</a>( flags, <span class="stringliteral">&quot;Command::Load()-&gt;getline()-&gt; invalid line format: %s&quot;</span>, <a class="code" href="macros_8h.htm#a9e05c5960bb1d108f6621513f708bad4">CSTR</a>( line ) );
<a name="l00047"></a>00047             <span class="keywordflow">continue</span>;
<a name="l00048"></a>00048         }
<a name="l00049"></a>00049 
<a name="l00050"></a>00050         <span class="comment">// If the contents of arg3 == arg4 then assign arg5 == arg6</span>
<a name="l00051"></a>00051         <span class="keywordflow">for</span> ( ;; )
<a name="l00052"></a>00052         {
<a name="l00053"></a>00053             found = <span class="keyword">false</span>;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055             <a class="code" href="namespaceUtils.htm#a4fec8844bf786b38a8eaebd822bafa05">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;Level&quot;</span>,   value, <a class="code" href="classCommand.htm#a2c51a583e6a514d0a038a7822fcc8dc0">m_level</a>   );
<a name="l00056"></a>00056             <a class="code" href="namespaceUtils.htm#a4fec8844bf786b38a8eaebd822bafa05">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;Name&quot;</span>,    value, <a class="code" href="classCommand.htm#af0105dd32ef8d8e0035631fc3a6ba9b6">m_name</a>    );
<a name="l00057"></a>00057             <a class="code" href="namespaceUtils.htm#a4fec8844bf786b38a8eaebd822bafa05">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;Preempt&quot;</span>, value, <a class="code" href="classCommand.htm#a227283c6b253cedd657d0a55a2526aff">m_preempt</a> );
<a name="l00058"></a>00058 
<a name="l00059"></a>00059             <span class="keywordflow">if</span> ( !found )
<a name="l00060"></a>00060                 <a class="code" href="macros_8h.htm#ac116c157aff5572959fd33c0ecd913da">LOGFMT</a>( flags, <span class="stringliteral">&quot;Command::Load()-&gt;Utils::KeySet()-&gt; key not found: %s&quot;</span>, <a class="code" href="macros_8h.htm#a9e05c5960bb1d108f6621513f708bad4">CSTR</a>( key ) );
<a name="l00061"></a>00061 
<a name="l00062"></a>00062             <span class="keywordflow">break</span>;
<a name="l00063"></a>00063         }
<a name="l00064"></a>00064     }
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     <a class="code" href="list_8cpp.htm#a82a4f4375bf789a81d7ef1a01ea83943">command_list</a>.insert( pair&lt;const char,Command*&gt;( <a class="code" href="classCommand.htm#af0105dd32ef8d8e0035631fc3a6ba9b6">m_name</a>[0], <span class="keyword">this</span> ) );
<a name="l00067"></a>00067 
<a name="l00068"></a>00068     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00069"></a>00069 }
<a name="l00070"></a>00070 
<a name="l00071"></a><a class="code" href="classCommand.htm#a133870f97086cfd556c4191fbebb2106">00071</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classCommand.htm#a133870f97086cfd556c4191fbebb2106">Command::Unload</a>()
<a name="l00072"></a>00072 {
<a name="l00073"></a>00073     <span class="keyword">delete</span> <span class="keyword">this</span>;
<a name="l00074"></a>00074 
<a name="l00075"></a>00075    <span class="keywordflow">return</span>;
<a name="l00076"></a>00076 }
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="comment">// Query</span>
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="comment">// Manipulate</span>
<a name="l00081"></a>00081 
<a name="l00082"></a><a class="code" href="classCommand.htm#a18df2d81039392daeb0b78c346a70537">00082</a> <a class="code" href="classCommand.htm#a18df2d81039392daeb0b78c346a70537">Command::Command</a>()
<a name="l00083"></a>00083 {
<a name="l00084"></a>00084     <a class="code" href="classCommand.htm#a2c51a583e6a514d0a038a7822fcc8dc0">m_level</a> = 0;
<a name="l00085"></a>00085     <a class="code" href="classCommand.htm#af0105dd32ef8d8e0035631fc3a6ba9b6">m_name</a>.clear();
<a name="l00086"></a>00086     <a class="code" href="classCommand.htm#a227283c6b253cedd657d0a55a2526aff">m_preempt</a> = <span class="keyword">false</span>;
<a name="l00087"></a>00087 
<a name="l00088"></a>00088     <span class="keywordflow">return</span>;
<a name="l00089"></a>00089 }
<a name="l00090"></a>00090 
<a name="l00091"></a><a class="code" href="classCommand.htm#ab552bb3a07fdd1acbfd8ea76e69b2278">00091</a> <a class="code" href="classCommand.htm#ab552bb3a07fdd1acbfd8ea76e69b2278">Command::~Command</a>()
<a name="l00092"></a>00092 {
<a name="l00093"></a>00093     <span class="keywordflow">return</span>;
<a name="l00094"></a>00094 }
</pre></div></div>
</div>
<hr class="footer"/><address class="footer"><small>Generated on Sat Apr 14 2012 23:46:15 for NAMS - Not Another MUD Server by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
