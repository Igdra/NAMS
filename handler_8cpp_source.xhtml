<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: handler.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">handler.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="handler_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/***************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * NAMS - Not Another MUD Server                                           *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                         *</span>
<a name="l00005"></a>00005 <span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span>
<a name="l00006"></a>00006 <span class="comment"> * it under the terms of the GNU General Public License as published by    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span>
<a name="l00008"></a>00008 <span class="comment"> * (at your option) any later version.                                     *</span>
<a name="l00009"></a>00009 <span class="comment"> *                                                                         *</span>
<a name="l00010"></a>00010 <span class="comment"> * This program is distributed in the hope that it will be useful,         *</span>
<a name="l00011"></a>00011 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span>
<a name="l00012"></a>00012 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU General Public License for more details.                            *</span>
<a name="l00014"></a>00014 <span class="comment"> *                                                                         *</span>
<a name="l00015"></a>00015 <span class="comment"> * You should have received a copy of the GNU General Public License       *</span>
<a name="l00016"></a>00016 <span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span>
<a name="l00017"></a>00017 <span class="comment"> ***************************************************************************/</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="includes_8h.xhtml" title="All non-system includes that need to be within each .cpp file.">h/includes.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="class_8h.xhtml" title="All class declarations.">h/class.h</a>&quot;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="handler_8h.xhtml" title="The Handler namespace.">h/handler.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="account_8h.xhtml" title="The Account class.">h/account.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.xhtml" title="The Command class.">h/command.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="list_8h.xhtml" title="All globally referenced list / map / vector types.">h/list.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="server_8h.xhtml" title="The Server class.">h/server.h</a>&quot;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="comment">/* Core */</span>
<a name="l00044"></a><a class="code" href="namespaceHandler.xhtml#a093ad11406855ab2a6ca197bc2db42b7">00044</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a093ad11406855ab2a6ca197bc2db42b7" title="Main account menu for all account actions.">Handler::AccountMenu</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00045"></a>00045 {
<a name="l00046"></a>00046     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00047"></a>00047 
<a name="l00048"></a>00048     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00049"></a>00049     {
<a name="l00050"></a>00050         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AccountMenu()-&gt; called with NULL client&quot;</span> );
<a name="l00051"></a>00051         <span class="keywordflow">return</span>;
<a name="l00052"></a>00052     }
<a name="l00053"></a>00053 
<a name="l00054"></a>00054     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00055"></a>00055     {
<a name="l00056"></a>00056         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AccountMenu()-&gt; called with NULL account&quot;</span> );
<a name="l00057"></a>00057         <span class="keywordflow">return</span>;
<a name="l00058"></a>00058     }
<a name="l00059"></a>00059 
<a name="l00060"></a>00060     cout &lt;&lt; <span class="stringliteral">&quot;state=[&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &lt;&lt; <span class="stringliteral">&quot;} cmd={&quot;</span> &lt;&lt; cmd &lt;&lt; <span class="stringliteral">&quot;} args={&quot;</span> &lt;&lt; args &lt;&lt;<span class="stringliteral">&quot;}&quot;</span> &lt;&lt; endl;
<a name="l00061"></a>00061     <span class="keywordflow">switch</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() )
<a name="l00062"></a>00062     {
<a name="l00063"></a>00063         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a>:
<a name="l00064"></a>00064             <a class="code" href="namespaceHandler.xhtml#a22b7749e3b3771d31eb2299efa5d821b" title="Send initial account interface menu.">MenuScreen</a>( client, cmd, args );
<a name="l00065"></a>00065         <span class="keywordflow">break</span>;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a>:
<a name="l00068"></a>00068             <a class="code" href="namespaceHandler.xhtml#af55c3642454fd95ff0fa2c4ff575bf67" title="Create a new character in the game.">CharacterCreate</a>( client, cmd, args );
<a name="l00069"></a>00069         <span class="keywordflow">break</span>;
<a name="l00070"></a>00070 
<a name="l00071"></a>00071         <span class="keywordflow">default</span>:
<a name="l00072"></a>00072         <span class="keywordflow">break</span>;
<a name="l00073"></a>00073     }
<a name="l00074"></a>00074 
<a name="l00075"></a>00075     <span class="keywordflow">return</span>;
<a name="l00076"></a>00076 }
<a name="l00077"></a>00077 
<a name="l00085"></a><a class="code" href="namespaceHandler.xhtml#a142c6f0b9e36e54eba3d72f9db2dfe40">00085</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a142c6f0b9e36e54eba3d72f9db2dfe40" title="Redirect to the appropriate subsystem based on socket state.">Handler::Interpret</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00086"></a>00086 {
<a name="l00087"></a>00087     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00088"></a>00088     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> state = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00089"></a>00089 
<a name="l00090"></a>00090     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00091"></a>00091     {
<a name="l00092"></a>00092         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::Interpret()-&gt; called with NULL client&quot;</span> );
<a name="l00093"></a>00093         <span class="keywordflow">return</span>;
<a name="l00094"></a>00094     }
<a name="l00095"></a>00095 
<a name="l00096"></a>00096     state = client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>();
<a name="l00097"></a>00097 
<a name="l00098"></a>00098     <span class="keywordflow">if</span> ( state &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> &amp;&amp; state &lt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> )
<a name="l00099"></a>00099         <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client, cmd, args );
<a name="l00100"></a>00100     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( state &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> )
<a name="l00101"></a>00101         <a class="code" href="namespaceHandler.xhtml#a093ad11406855ab2a6ca197bc2db42b7" title="Main account menu for all account actions.">AccountMenu</a>( client, cmd, args );
<a name="l00102"></a>00102 
<a name="l00103"></a>00103     <span class="keywordflow">return</span>;
<a name="l00104"></a>00104 }
<a name="l00105"></a>00105 
<a name="l00113"></a><a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9">00113</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">Handler::ProcessLogin</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00114"></a>00114 {
<a name="l00115"></a>00115     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00116"></a>00116 
<a name="l00117"></a>00117     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00118"></a>00118     {
<a name="l00119"></a>00119         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::ProcessLogin()-&gt; called with NULL client&quot;</span> );
<a name="l00120"></a>00120         <span class="keywordflow">return</span>;
<a name="l00121"></a>00121     }
<a name="l00122"></a>00122 
<a name="l00123"></a>00123     <span class="keywordflow">switch</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() )
<a name="l00124"></a>00124     {
<a name="l00125"></a>00125         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a>:
<a name="l00126"></a>00126             <a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191" title="Send initial greeting and request for account name.">LoginScreen</a>( client, cmd, args );
<a name="l00127"></a>00127         <span class="keywordflow">break</span>;
<a name="l00128"></a>00128 
<a name="l00129"></a>00129         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad1df19251e972b85012bd03f5a12f47b">SOC_STATE_GET_OLD_PASSWORD</a>:
<a name="l00130"></a>00130             <a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6" title="Compare a received password against an existing account.">GetOldPassword</a>( client, cmd, args );
<a name="l00131"></a>00131         <span class="keywordflow">break</span>;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a60ba81eec35892e83b8430190320529f">SOC_STATE_GET_NEW_ACCOUNT</a>:
<a name="l00134"></a>00134             <a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4" title="Select a new account name.">GetNewAccount</a>( client, cmd, args );
<a name="l00135"></a>00135         <span class="keywordflow">break</span>;
<a name="l00136"></a>00136 
<a name="l00137"></a>00137         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a812001ad08d1204b69ffbaa7eaaba1c7">SOC_STATE_GET_NEW_PASSWORD</a>:
<a name="l00138"></a>00138             <a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2" title="Create a new account.">GetNewPassword</a>( client, cmd, args );
<a name="l00139"></a>00139         <span class="keywordflow">break</span>;
<a name="l00140"></a>00140 
<a name="l00141"></a>00141         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a>:
<a name="l00142"></a>00142         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a>:
<a name="l00143"></a>00143             <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">AttachAccount</a>( client, cmd, args );
<a name="l00144"></a>00144         <span class="keywordflow">break</span>;
<a name="l00145"></a>00145 
<a name="l00146"></a>00146         <span class="keywordflow">default</span>:
<a name="l00147"></a>00147         <span class="keywordflow">break</span>;
<a name="l00148"></a>00148     }
<a name="l00149"></a>00149 
<a name="l00150"></a>00150     <span class="keywordflow">return</span>;
<a name="l00151"></a>00151 }
<a name="l00152"></a>00152 
<a name="l00153"></a>00153 <span class="comment">/* Query */</span>
<a name="l00161"></a><a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88">00161</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88" title="Check to see if the current account is already being created.">Handler::CheckCreating</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name )
<a name="l00162"></a>00162 {
<a name="l00163"></a>00163     <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flags );
<a name="l00164"></a>00164     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>*, si );
<a name="l00165"></a>00165     <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* socket_client;
<a name="l00166"></a>00166 
<a name="l00167"></a>00167     <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = client-&gt;<a class="code" href="classSocketClient.xhtml#abb055f2dc275dd975ac9465a8e5b19e5" title="Returns the Server object associated to this SocketClient.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#a94d4152506da23d153a6070af7e72009" title="Returns the Server&#39;s globally referenced next iterator for SocketClient objects.">gSocketClientNext</a>() )
<a name="l00168"></a>00168     {
<a name="l00169"></a>00169         socket_client = *si;
<a name="l00170"></a>00170         client-&gt;<a class="code" href="classSocketClient.xhtml#abb055f2dc275dd975ac9465a8e5b19e5" title="Returns the Server object associated to this SocketClient.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#ab25462e8370bd6f9270c2f0734b70354" title="Sets the Server&#39;s globally referenced next iterator for SocketClient objects.">sSocketClientNext</a>( ++si );
<a name="l00171"></a>00171 
<a name="l00172"></a>00172         <span class="keywordflow">if</span> ( socket_client == client )
<a name="l00173"></a>00173             <span class="keywordflow">continue</span>;
<a name="l00174"></a>00174 
<a name="l00175"></a>00175         <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> )
<a name="l00176"></a>00176             <span class="keywordflow">continue</span>;
<a name="l00177"></a>00177 
<a name="l00178"></a>00178         <span class="keywordflow">if</span> ( name == socket_client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) )
<a name="l00179"></a>00179         {
<a name="l00180"></a>00180             <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::CheckPlaying()-&gt; player from site %s attempted to login as %s (in creation)&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( name ) );
<a name="l00181"></a>00181             <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00182"></a>00182         }
<a name="l00183"></a>00183     }
<a name="l00184"></a>00184 
<a name="l00185"></a>00185     <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00186"></a>00186 }
<a name="l00187"></a>00187 
<a name="l00195"></a><a class="code" href="namespaceHandler.xhtml#a4f2b4f0ba0aa42e2d348655a1bd2bc7e">00195</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceHandler.xhtml#a4f2b4f0ba0aa42e2d348655a1bd2bc7e" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name )
<a name="l00196"></a>00196 {
<a name="l00197"></a>00197     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( forward_list, <span class="keywordtype">string</span>, fi );
<a name="l00198"></a>00198     forward_list&lt;string&gt; search;
<a name="l00199"></a>00199     <span class="keywordtype">string</span> comp;
<a name="l00200"></a>00200 
<a name="l00201"></a>00201     <span class="comment">// Search for prohibited names</span>
<a name="l00202"></a>00202     search = client-&gt;<a class="code" href="classSocketClient.xhtml#abb055f2dc275dd975ac9465a8e5b19e5" title="Returns the Server object associated to this SocketClient.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#a2b5b372322a87cdfeb7f6f5e4a01fa58" title="Gets the runtime configuration of the server.">gConfig</a>()-&gt;<a class="code" href="classServer_1_1Config.xhtml#ae93688e4861753dd11a8b537e092ab77" title="Returns an a copy of the account prohibited names list.">gAccountProhibitedNames</a>();
<a name="l00203"></a>00203     <span class="keywordflow">for</span> ( fi = search.begin(); fi != search.end(); fi++ )
<a name="l00204"></a>00204     {
<a name="l00205"></a>00205         comp = *fi;
<a name="l00206"></a>00206         <span class="keywordflow">if</span> ( comp == name )
<a name="l00207"></a>00207             <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00208"></a>00208     }
<a name="l00209"></a>00209 
<a name="l00210"></a>00210     <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00211"></a>00211 }
<a name="l00212"></a>00212 
<a name="l00213"></a>00213 <span class="comment">/* Manipulate */</span>
<a name="l00221"></a><a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0">00221</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">Handler::AttachAccount</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00222"></a>00222 {
<a name="l00223"></a>00223     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00224"></a>00224     <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>* account = NULL;
<a name="l00225"></a>00225     <span class="keywordtype">bool</span> exists = <span class="keyword">false</span>;
<a name="l00226"></a>00226 
<a name="l00227"></a>00227     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() == <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a> )
<a name="l00228"></a>00228         exists = <span class="keyword">false</span>;
<a name="l00229"></a>00229     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() == <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> )
<a name="l00230"></a>00230         exists = <span class="keyword">true</span>;
<a name="l00231"></a>00231     <span class="keywordflow">else</span>
<a name="l00232"></a>00232     {
<a name="l00233"></a>00233         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::AttachAccount()-&gt; called with invalid client state: %lu&quot;</span>, client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() );
<a name="l00234"></a>00234         <span class="keywordflow">return</span>;
<a name="l00235"></a>00235     }
<a name="l00236"></a>00236 
<a name="l00237"></a>00237     <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">false</span> );
<a name="l00238"></a>00238 
<a name="l00239"></a>00239     account = <span class="keyword">new</span> <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>();
<a name="l00240"></a>00240     <span class="keywordflow">if</span> ( !account-&gt;<a class="code" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf" title="Create a new account.">New</a>( client, exists ) )
<a name="l00241"></a>00241     {
<a name="l00242"></a>00242         account-&gt;<a class="code" href="classAccount.xhtml#aa82e62e930fb3a8ac58a4592f323db75" title="Unload an account from memory that was previously loaded via Account::New().">Delete</a>();
<a name="l00243"></a>00243 
<a name="l00244"></a>00244         <span class="keywordflow">if</span> ( exists )
<a name="l00245"></a>00245             client-&gt;<a class="code" href="classSocketClient.xhtml#abb055f2dc275dd975ac9465a8e5b19e5" title="Returns the Server object associated to this SocketClient.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#acf928ad938e32e6342c0cdd278e793bc">FindCommand</a>( <span class="stringliteral">&quot;quit&quot;</span> )-&gt;<a class="code" href="classCommand.xhtml#a6448d432978113719bfdfa3783da5106" title="Execute a Plugin object&#39;s primary function.">Run</a>( client );
<a name="l00246"></a>00246         <span class="keywordflow">else</span>
<a name="l00247"></a>00247         {
<a name="l00248"></a>00248             client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00249"></a>00249             client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00250"></a>00250             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );
<a name="l00251"></a>00251             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a4c33c190efd41cbd350a341e0942fe20" title="String sent if an error occurs when first creating a new account.">CFG_STR_ACT_NEW_ERROR</a> );
<a name="l00252"></a>00252             <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00253"></a>00253         }
<a name="l00254"></a>00254 
<a name="l00255"></a>00255         <span class="keywordflow">return</span>;
<a name="l00256"></a>00256     }
<a name="l00257"></a>00257 
<a name="l00258"></a>00258     <span class="comment">// All went well, off to the account menu</span>
<a name="l00259"></a>00259     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l00260"></a>00260     <a class="code" href="namespaceHandler.xhtml#a093ad11406855ab2a6ca197bc2db42b7" title="Main account menu for all account actions.">AccountMenu</a>( client );
<a name="l00261"></a>00261 
<a name="l00262"></a>00262     <span class="keywordflow">return</span>;
<a name="l00263"></a>00263 }
<a name="l00264"></a>00264 
<a name="l00272"></a><a class="code" href="namespaceHandler.xhtml#af55c3642454fd95ff0fa2c4ff575bf67">00272</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#af55c3642454fd95ff0fa2c4ff575bf67" title="Create a new character in the game.">Handler::CharacterCreate</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00273"></a>00273 {
<a name="l00274"></a>00274     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00275"></a>00275     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00276"></a>00276 
<a name="l00277"></a>00277     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00278"></a>00278     {
<a name="l00279"></a>00279         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreate()-&gt; called with NULL client&quot;</span> );
<a name="l00280"></a>00280         <span class="keywordflow">return</span>;
<a name="l00281"></a>00281     }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00284"></a>00284     {
<a name="l00285"></a>00285         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreate()-&gt; called with NULL account&quot;</span> );
<a name="l00286"></a>00286         <span class="keywordflow">return</span>;
<a name="l00287"></a>00287     }
<a name="l00288"></a>00288 
<a name="l00289"></a>00289     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00290"></a>00290     {
<a name="l00291"></a>00291         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
<a name="l00292"></a>00292         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
<a name="l00293"></a>00293         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Create a new character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <span class="stringliteral">&quot;Please select one of the following options:&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> );
<a name="l00294"></a>00294         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;     %d) Fill me in&quot;</span> CRLF, 1 ) );
<a name="l00295"></a>00295         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;    %d) Back&quot;</span> CRLF, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca917eb8927a034d85ab875216abb49c3f">ACT_MENU_CHARACTER_CREATE_BACK</a> ) );
<a name="l00296"></a>00296         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Option: &quot;</span> );
<a name="l00297"></a>00297         <span class="keywordflow">return</span>;
<a name="l00298"></a>00298     }
<a name="l00299"></a>00299 
<a name="l00300"></a>00300     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l00301"></a>00301     stringstream( cmd ) &gt;&gt; val;
<a name="l00302"></a>00302 
<a name="l00303"></a>00303     <span class="keywordflow">switch</span>( val )
<a name="l00304"></a>00304     {
<a name="l00305"></a>00305          <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca917eb8927a034d85ab875216abb49c3f">ACT_MENU_CHARACTER_CREATE_BACK</a>:
<a name="l00306"></a>00306             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l00307"></a>00307             <a class="code" href="namespaceHandler.xhtml#a093ad11406855ab2a6ca197bc2db42b7" title="Main account menu for all account actions.">AccountMenu</a>( client );
<a name="l00308"></a>00308         <span class="keywordflow">break</span>;
<a name="l00309"></a>00309 
<a name="l00310"></a>00310         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcaf2b0e2301eaa9639f7b43d86cd050e0c">ACT_MENU_CHARACTER_CREATE_INVALID</a>:
<a name="l00311"></a>00311         <span class="keywordflow">default</span>:
<a name="l00312"></a>00312             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Invalid selection.&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> );
<a name="l00313"></a>00313             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Option: &quot;</span> );
<a name="l00314"></a>00314         <span class="keywordflow">break</span>;
<a name="l00315"></a>00315     }
<a name="l00316"></a>00316 
<a name="l00317"></a>00317     <span class="keywordflow">return</span>;
<a name="l00318"></a>00318 }
<a name="l00319"></a>00319 
<a name="l00320"></a>00320 <span class="comment">/* Internal */</span>
<a name="l00328"></a><a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4">00328</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4" title="Select a new account name.">Handler::GetNewAccount</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00329"></a>00329 {
<a name="l00330"></a>00330     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00331"></a>00331 
<a name="l00332"></a>00332     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00333"></a>00333     {
<a name="l00334"></a>00334         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetNewAccount()-&gt; called with NULL client&quot;</span> );
<a name="l00335"></a>00335         <span class="keywordflow">return</span>;
<a name="l00336"></a>00336     }
<a name="l00337"></a>00337 
<a name="l00338"></a>00338     <span class="comment">//Initial entry or an invalid selection</span>
<a name="l00339"></a>00339     <span class="keywordflow">if</span> ( cmd.empty() &amp;&amp; !client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
<a name="l00340"></a>00340     {
<a name="l00341"></a>00341         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a180ca46bce137e0d17c8840effb7fbbe" title="String sent to request the user confirms their new account name.">CFG_STR_ACT_NAME_CONFIRM</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) );
<a name="l00342"></a>00342         <span class="keywordflow">return</span>;
<a name="l00343"></a>00343     }
<a name="l00344"></a>00344 
<a name="l00345"></a>00345     <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( cmd, <span class="stringliteral">&quot;no&quot;</span>, <span class="keyword">true</span> ) )
<a name="l00346"></a>00346     {
<a name="l00347"></a>00347         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00348"></a>00348         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );
<a name="l00349"></a>00349     }
<a name="l00350"></a>00350     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( cmd, <span class="stringliteral">&quot;yes&quot;</span>, <span class="keyword">true</span> ) )
<a name="l00351"></a>00351         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a812001ad08d1204b69ffbaa7eaaba1c7">SOC_STATE_GET_NEW_PASSWORD</a> );
<a name="l00352"></a>00352     <span class="keywordflow">else</span>
<a name="l00353"></a>00353         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l00354"></a>00354 
<a name="l00355"></a>00355     <span class="comment">//Generate the next input prompt</span>
<a name="l00356"></a>00356     <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00357"></a>00357 
<a name="l00358"></a>00358     <span class="keywordflow">return</span>;
<a name="l00359"></a>00359 }
<a name="l00360"></a>00360 
<a name="l00368"></a><a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2">00368</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2" title="Create a new account.">Handler::GetNewPassword</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00369"></a>00369 {
<a name="l00370"></a>00370     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00371"></a>00371 
<a name="l00372"></a>00372     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00373"></a>00373     {
<a name="l00374"></a>00374         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetNewPassword()-&gt; called with NULL client&quot;</span> );
<a name="l00375"></a>00375         <span class="keywordflow">return</span>;
<a name="l00376"></a>00376     }
<a name="l00377"></a>00377 
<a name="l00378"></a>00378     <span class="comment">//Initial entry</span>
<a name="l00379"></a>00379     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00380"></a>00380     {
<a name="l00381"></a>00381         <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">true</span> );
<a name="l00382"></a>00382         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a1d11ba4800f063ecd9329569236f95e7" title="String sent when a new account will be created.">CFG_STR_ACT_NEW</a> );
<a name="l00383"></a>00383         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l00384"></a>00384 
<a name="l00385"></a>00385         <span class="keywordflow">return</span>;
<a name="l00386"></a>00386     }
<a name="l00387"></a>00387 
<a name="l00388"></a>00388     <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#aa99a9bd0582d67d7098143471509b5a7" title="The minimum allowable length for an account password.">CFG_ACT_PASSWORD_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#a5347d13812efe93d42355d726e565ea6" title="The maximum allowable length for an account password.">CFG_ACT_PASSWORD_MAX_LEN</a> )
<a name="l00389"></a>00389     {
<a name="l00390"></a>00390         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00391"></a>00391         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a8ca9b1580c268c16dbe8feddb330c025" title="String sent when an invalid account password is received.">CFG_STR_ACT_PASSWORD_INVALID</a> );
<a name="l00392"></a>00392         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a475d489333cb51b56a3f5cd5d76a738c" title="String additionally sent when an account password is invalid due to length.">CFG_STR_ACT_PASSWORD_LENGTH</a>, <a class="code" href="config_8h.xhtml#aa99a9bd0582d67d7098143471509b5a7" title="The minimum allowable length for an account password.">CFG_ACT_PASSWORD_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#a5347d13812efe93d42355d726e565ea6" title="The maximum allowable length for an account password.">CFG_ACT_PASSWORD_MAX_LEN</a> ) );
<a name="l00393"></a>00393         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l00394"></a>00394 
<a name="l00395"></a>00395         <span class="keywordflow">return</span>;
<a name="l00396"></a>00396     }
<a name="l00397"></a>00397 
<a name="l00398"></a>00398     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ).empty() )
<a name="l00399"></a>00399     {
<a name="l00400"></a>00400         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, crypt( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#adafa6fa32d5b637ea62db12aa35db6e0" title="Returns a salt value for use with crypt.">Utils::Salt</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) ) );
<a name="l00401"></a>00401         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a51eaea4b5ef702d560ee8d1037757650" title="String sent to request the user confirms their new account password.">CFG_STR_ACT_PASSWORD_CONFIRM</a> );
<a name="l00402"></a>00402 
<a name="l00403"></a>00403         <span class="keywordflow">return</span>;
<a name="l00404"></a>00404     }
<a name="l00405"></a>00405 
<a name="l00406"></a>00406     <span class="keywordflow">if</span> ( <a class="code" href="macros_8h.xhtml#ab8dd2a96f2d83fd315a460c2b0e7401c" title="Compare two the value of (check) to (old) based on (salt).">CKPASSWORD</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ), cmd, client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ) ) )
<a name="l00407"></a>00407         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a> );
<a name="l00408"></a>00408     <span class="keywordflow">else</span>
<a name="l00409"></a>00409     {
<a name="l00410"></a>00410         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00411"></a>00411         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a850c90516fb31c985fc8cbcc2ab52946" title="String sent when a new password confirmation fails.">CFG_STR_ACT_PASSWORD_MISMATCH</a> );
<a name="l00412"></a>00412         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l00413"></a>00413 
<a name="l00414"></a>00414         <span class="keywordflow">return</span>;
<a name="l00415"></a>00415     }
<a name="l00416"></a>00416 
<a name="l00417"></a>00417     <span class="comment">//Generate the next input prompt</span>
<a name="l00418"></a>00418     <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00419"></a>00419 
<a name="l00420"></a>00420     <span class="keywordflow">return</span>;
<a name="l00421"></a>00421 }
<a name="l00422"></a>00422 
<a name="l00430"></a><a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6">00430</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6" title="Compare a received password against an existing account.">Handler::GetOldPassword</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00431"></a>00431 {
<a name="l00432"></a>00432     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00433"></a>00433 
<a name="l00434"></a>00434     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00435"></a>00435     {
<a name="l00436"></a>00436         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetOldPassword()-&gt; called with NULL client&quot;</span> );
<a name="l00437"></a>00437         <span class="keywordflow">return</span>;
<a name="l00438"></a>00438     }
<a name="l00439"></a>00439 
<a name="l00440"></a>00440     <span class="comment">//Initial hit prompting for password</span>
<a name="l00441"></a>00441     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00442"></a>00442     {
<a name="l00443"></a>00443         <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">true</span> );
<a name="l00444"></a>00444         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l00445"></a>00445         <span class="keywordflow">return</span>;
<a name="l00446"></a>00446     }
<a name="l00447"></a>00447 
<a name="l00448"></a>00448     client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, crypt( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#adafa6fa32d5b637ea62db12aa35db6e0" title="Returns a salt value for use with crypt.">Utils::Salt</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) ) );
<a name="l00449"></a>00449     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> );
<a name="l00450"></a>00450 
<a name="l00451"></a>00451     <span class="comment">//Generate the next input prompt</span>
<a name="l00452"></a>00452     <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00453"></a>00453 
<a name="l00454"></a>00454     <span class="keywordflow">return</span>;
<a name="l00455"></a>00455 }
<a name="l00456"></a>00456 
<a name="l00464"></a><a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191">00464</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191" title="Send initial greeting and request for account name.">Handler::LoginScreen</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00465"></a>00465 {
<a name="l00466"></a>00466     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00467"></a>00467 
<a name="l00468"></a>00468     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00469"></a>00469     {
<a name="l00470"></a>00470         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginScreen()-&gt; called with NULL client&quot;</span> );
<a name="l00471"></a>00471         <span class="keywordflow">return</span>;
<a name="l00472"></a>00472     }
<a name="l00473"></a>00473 
<a name="l00474"></a>00474     <span class="comment">// Initial connection with no input yet received or previous name was invalid</span>
<a name="l00475"></a>00475     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00476"></a>00476     {
<a name="l00477"></a>00477         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#af0eb185d6833661ec6d553871aba031e" title="String sent to request the user enters their account name.">CFG_STR_ACT_NAME_GET</a> );
<a name="l00478"></a>00478         <span class="keywordflow">return</span>;
<a name="l00479"></a>00479     }
<a name="l00480"></a>00480 
<a name="l00481"></a>00481     <span class="comment">// Only allow alphanumerics for the account name itself</span>
<a name="l00482"></a>00482     <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a36780f0aa565047ca0db53bda2aff5fc" title="Checks to ensure an input is entirely alphanumeric.">Utils::iAlNum</a>( cmd ) )
<a name="l00483"></a>00483     {
<a name="l00484"></a>00484         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l00485"></a>00485         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7790e568748a47be0bd52ead4a73375b" title="String additionally sent if an account name is invalid due to non-alphanumeric characters.">CFG_STR_ACT_NAME_ALNUM</a> );
<a name="l00486"></a>00486         <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00487"></a>00487 
<a name="l00488"></a>00488         <span class="keywordflow">return</span>;
<a name="l00489"></a>00489     }
<a name="l00490"></a>00490 
<a name="l00491"></a>00491     <span class="comment">//Prevent prohibited names based on Server runtime configuration</span>
<a name="l00492"></a>00492     <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a4f2b4f0ba0aa42e2d348655a1bd2bc7e" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( client, cmd ) )
<a name="l00493"></a>00493     {
<a name="l00494"></a>00494         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l00495"></a>00495         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aae9cb78e2deef0ffe39bdf49496fcec6" title="String additionally sent when an account name matches the prohibited names list.">CFG_STR_ACT_NAME_PROHIBITED</a> );
<a name="l00496"></a>00496         <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00497"></a>00497 
<a name="l00498"></a>00498         <span class="keywordflow">return</span>;
<a name="l00499"></a>00499     }
<a name="l00500"></a>00500 
<a name="l00501"></a>00501     <span class="comment">//Prevent two new accounts being created with the same name</span>
<a name="l00502"></a>00502     <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88" title="Check to see if the current account is already being created.">Handler::CheckCreating</a>( client, cmd ) )
<a name="l00503"></a>00503     {
<a name="l00504"></a>00504         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l00505"></a>00505         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aae9cb78e2deef0ffe39bdf49496fcec6" title="String additionally sent when an account name matches the prohibited names list.">CFG_STR_ACT_NAME_PROHIBITED</a> );
<a name="l00506"></a>00506         <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00507"></a>00507 
<a name="l00508"></a>00508         <span class="keywordflow">return</span>;
<a name="l00509"></a>00509     }
<a name="l00510"></a>00510 
<a name="l00511"></a>00511     <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#a4383bb3891f4ea262e0979ee17a161f6" title="The minimum allowable length for an account name.">CFG_ACT_NAME_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#ab3eaf7083d24131807f6d079fce51264" title="The maximum allowable length for an account name.">CFG_ACT_NAME_MAX_LEN</a> )
<a name="l00512"></a>00512     {
<a name="l00513"></a>00513         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l00514"></a>00514         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#ad62726ae21a312dfa9d1512113283fee" title="String additionally sent when an account name is invalid due to length.">CFG_STR_ACT_NAME_LENGTH</a>, <a class="code" href="config_8h.xhtml#a4383bb3891f4ea262e0979ee17a161f6" title="The minimum allowable length for an account name.">CFG_ACT_NAME_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#ab3eaf7083d24131807f6d079fce51264" title="The maximum allowable length for an account name.">CFG_ACT_NAME_MAX_LEN</a> ) );
<a name="l00515"></a>00515         <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00516"></a>00516 
<a name="l00517"></a>00517         <span class="keywordflow">return</span>;
<a name="l00518"></a>00518     }
<a name="l00519"></a>00519 
<a name="l00520"></a>00520     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
<a name="l00521"></a>00521     {
<a name="l00522"></a>00522         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, cmd );
<a name="l00523"></a>00523 
<a name="l00524"></a>00524         <span class="keywordflow">switch</span> (  <a class="code" href="namespaceUtils.xhtml#ac41c505e3efccab8549238e6843b0d2e" title="Determines if a directory exists on disk.">Utils::DirExists</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, cmd ) ) )
<a name="l00525"></a>00525         {
<a name="l00526"></a>00526             <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88ae9b6a246539fb57fb810ac271b05d050">UTILS_RET_FALSE</a>:
<a name="l00527"></a>00527                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a60ba81eec35892e83b8430190320529f">SOC_STATE_GET_NEW_ACCOUNT</a> );
<a name="l00528"></a>00528             <span class="keywordflow">break</span>;
<a name="l00529"></a>00529 
<a name="l00530"></a>00530             <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88ae2722723183013676ca1f0f065fc0b24">UTILS_RET_TRUE</a>:
<a name="l00531"></a>00531                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad1df19251e972b85012bd03f5a12f47b">SOC_STATE_GET_OLD_PASSWORD</a> );
<a name="l00532"></a>00532             <span class="keywordflow">break</span>;
<a name="l00533"></a>00533 
<a name="l00534"></a>00534             <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88aa6afb4eb3fbede68c19c12bf3543045f">UTILS_RET_ERROR</a>:
<a name="l00535"></a>00535             <span class="keywordflow">default</span>:
<a name="l00536"></a>00536                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l00537"></a>00537                 <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::LoginScreen()-&gt;Utils::DirExists()-&gt; returned UTILS_RET_ERROR for name: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ) );
<a name="l00538"></a>00538             <span class="keywordflow">break</span>;
<a name="l00539"></a>00539         }
<a name="l00540"></a>00540     }
<a name="l00541"></a>00541 
<a name="l00542"></a>00542     <span class="comment">//Generate the next input prompt</span>
<a name="l00543"></a>00543     <a class="code" href="namespaceHandler.xhtml#af650e47f3d4baf393b54376d1eaa1fa9" title="Handle SocketClient objects who have not fully logged into the game yet.">ProcessLogin</a>( client );
<a name="l00544"></a>00544 
<a name="l00545"></a>00545     <span class="keywordflow">return</span>;
<a name="l00546"></a>00546 }
<a name="l00547"></a>00547 
<a name="l00555"></a><a class="code" href="namespaceHandler.xhtml#a22b7749e3b3771d31eb2299efa5d821b">00555</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a22b7749e3b3771d31eb2299efa5d821b" title="Send initial account interface menu.">Handler::MenuScreen</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00556"></a>00556 {
<a name="l00557"></a>00557     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00558"></a>00558     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00559"></a>00559 
<a name="l00560"></a>00560     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00561"></a>00561     {
<a name="l00562"></a>00562         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::MenuScreen()-&gt; called with NULL client&quot;</span> );
<a name="l00563"></a>00563         <span class="keywordflow">return</span>;
<a name="l00564"></a>00564     }
<a name="l00565"></a>00565 
<a name="l00566"></a>00566     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00567"></a>00567     {
<a name="l00568"></a>00568         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::MenuScreen()-&gt; called with NULL account&quot;</span> );
<a name="l00569"></a>00569         <span class="keywordflow">return</span>;
<a name="l00570"></a>00570     }
<a name="l00571"></a>00571 
<a name="l00572"></a>00572     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00573"></a>00573     {
<a name="l00574"></a>00574         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
<a name="l00575"></a>00575         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
<a name="l00576"></a>00576         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <span class="stringliteral">&quot;Please select one of the following options:&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> );
<a name="l00577"></a>00577         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;     %d) Create a new character&quot;</span> CRLF, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201beaa36c938e86e6e01a12cc0da8e3e1311e">ACT_MENU_MAIN_CHARACTER_CREATE</a> ) );
<a name="l00578"></a>00578         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;    %d) Quit&quot;</span> CRLF, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea48e5d6fc0c721f034a7dbd3de9e6f960">ACT_MENU_MAIN_QUIT</a> ) );
<a name="l00579"></a>00579         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Option: &quot;</span> );
<a name="l00580"></a>00580         <span class="keywordflow">return</span>;
<a name="l00581"></a>00581     }
<a name="l00582"></a>00582 
<a name="l00583"></a>00583     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l00584"></a>00584     stringstream( cmd ) &gt;&gt; val;
<a name="l00585"></a>00585 
<a name="l00586"></a>00586     <span class="keywordflow">switch</span>( val )
<a name="l00587"></a>00587     {
<a name="l00588"></a>00588         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201beaa36c938e86e6e01a12cc0da8e3e1311e">ACT_MENU_MAIN_CHARACTER_CREATE</a>:
<a name="l00589"></a>00589             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
<a name="l00590"></a>00590             <a class="code" href="namespaceHandler.xhtml#a093ad11406855ab2a6ca197bc2db42b7" title="Main account menu for all account actions.">AccountMenu</a>( client );
<a name="l00591"></a>00591         <span class="keywordflow">break</span>;
<a name="l00592"></a>00592 
<a name="l00593"></a>00593         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea48e5d6fc0c721f034a7dbd3de9e6f960">ACT_MENU_MAIN_QUIT</a>:
<a name="l00594"></a>00594             client-&gt;<a class="code" href="classSocketClient.xhtml#ad8ab017dd47d5e8b20ad30f72773a759" title="Flags a client as quitting to break out of nested loops.">Quit</a>();
<a name="l00595"></a>00595         <span class="keywordflow">break</span>;
<a name="l00596"></a>00596 
<a name="l00597"></a>00597         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754b81d889ca855ffcd87b628aaa88b0">ACT_MENU_MAIN_INVALID</a>:
<a name="l00598"></a>00598         <span class="keywordflow">default</span>:
<a name="l00599"></a>00599             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Invalid selection.&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> );
<a name="l00600"></a>00600             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Option: &quot;</span> );
<a name="l00601"></a>00601         <span class="keywordflow">break</span>;
<a name="l00602"></a>00602     }
<a name="l00603"></a>00603 
<a name="l00604"></a>00604     <span class="keywordflow">return</span>;
<a name="l00605"></a>00605 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 17 2013 16:00:35 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
