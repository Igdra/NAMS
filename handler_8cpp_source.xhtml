<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: handler.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">handler.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="handler_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/***************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * NAMS - Not Another MUD Server                                           *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                         *</span>
<a name="l00005"></a>00005 <span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span>
<a name="l00006"></a>00006 <span class="comment"> * it under the terms of the GNU General Public License as published by    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span>
<a name="l00008"></a>00008 <span class="comment"> * (at your option) any later version.                                     *</span>
<a name="l00009"></a>00009 <span class="comment"> *                                                                         *</span>
<a name="l00010"></a>00010 <span class="comment"> * This program is distributed in the hope that it will be useful,         *</span>
<a name="l00011"></a>00011 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span>
<a name="l00012"></a>00012 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU General Public License for more details.                            *</span>
<a name="l00014"></a>00014 <span class="comment"> *                                                                         *</span>
<a name="l00015"></a>00015 <span class="comment"> * You should have received a copy of the GNU General Public License       *</span>
<a name="l00016"></a>00016 <span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span>
<a name="l00017"></a>00017 <span class="comment"> ***************************************************************************/</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="includes_8h.xhtml" title="All non-system includes that need to be within each .cpp file.">h/includes.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="handler_8h.xhtml" title="The Handler namespace.">h/handler.h</a>&quot;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="account_8h.xhtml" title="The Account class.">h/account.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="character_8h.xhtml" title="The Character class.">h/character.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.xhtml" title="The Command class.">h/command.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml" title="The Event class.">h/event.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="list_8h.xhtml" title="All globally referenced list / map / vector types.">h/list.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="location_8h.xhtml" title="The Location class.">h/location.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="socketclient_8h.xhtml" title="The SocketClient class.">h/socketclient.h</a>&quot;</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="comment">/* Core */</span>
<a name="l00045"></a><a class="code" href="namespaceHandler.xhtml#ab2e9bf0a670cbf82be7a440065151516">00045</a> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* <a class="code" href="namespaceHandler.xhtml#ab2e9bf0a670cbf82be7a440065151516" title="Locates a Character within the game.">Handler::FindCharacter</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name, <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; type )
<a name="l00046"></a>00046 {
<a name="l00047"></a>00047     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00048"></a>00048     <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
<a name="l00049"></a>00049     <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
<a name="l00050"></a>00050     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>*, ci );
<a name="l00051"></a>00051     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> search = type;
<a name="l00052"></a>00052 
<a name="l00053"></a>00053     <span class="keywordflow">if</span> ( name.empty() )
<a name="l00054"></a>00054         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindCharacter()-&gt; called with empty name&quot;</span> );
<a name="l00055"></a>00055 
<a name="l00056"></a>00056     <span class="keywordflow">if</span> ( <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.empty() )
<a name="l00057"></a>00057         chr = NULL;
<a name="l00058"></a>00058     <span class="keywordflow">else</span>
<a name="l00059"></a>00059     {
<a name="l00060"></a>00060         <span class="keywordflow">if</span> ( search &lt; uintmin_t || search &gt;= <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a76f1872093e830545839a2ec938b3098">MAX_HANDLER_FIND</a> )
<a name="l00061"></a>00061         {
<a name="l00062"></a>00062             <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::FindCharacter()-&gt; Called with invalid type: %lu&quot;</span>, search );
<a name="l00063"></a>00063             <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindCharacter()-&gt; defaulting to HANDLER_FIND_ID&quot;</span> );
<a name="l00064"></a>00064             search = <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a>;
<a name="l00065"></a>00065         }
<a name="l00066"></a>00066 
<a name="l00067"></a>00067         <span class="keywordflow">for</span> ( ci = <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.begin(); ci != <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.end(); ci++ )
<a name="l00068"></a>00068         {
<a name="l00069"></a>00069             found = <span class="keyword">false</span>;
<a name="l00070"></a>00070             chr = *ci;
<a name="l00071"></a>00071 
<a name="l00072"></a>00072             <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
<a name="l00073"></a>00073             {
<a name="l00074"></a>00074                 <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
<a name="l00075"></a>00075                     found = <span class="keyword">true</span>;
<a name="l00076"></a>00076                 <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( chr-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
<a name="l00077"></a>00077                     found = <span class="keyword">true</span>;
<a name="l00078"></a>00078             }
<a name="l00079"></a>00079             <span class="keywordflow">else</span>
<a name="l00080"></a>00080             {
<a name="l00081"></a>00081                 <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>().find( name ) == 0 )
<a name="l00082"></a>00082                     found = <span class="keyword">true</span>;
<a name="l00083"></a>00083                 <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; chr-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>().find( name ) == 0 )
<a name="l00084"></a>00084                     found = <span class="keyword">true</span>;
<a name="l00085"></a>00085             }
<a name="l00086"></a>00086 
<a name="l00087"></a>00087             <span class="keywordflow">if</span> ( found )
<a name="l00088"></a>00088                 <span class="keywordflow">break</span>;
<a name="l00089"></a>00089         }
<a name="l00090"></a>00090 
<a name="l00091"></a>00091         <span class="keywordflow">if</span> ( !found )
<a name="l00092"></a>00092             chr = NULL;
<a name="l00093"></a>00093     }
<a name="l00094"></a>00094 
<a name="l00095"></a>00095     <span class="keywordflow">return</span> chr;
<a name="l00096"></a>00096 }
<a name="l00097"></a>00097 
<a name="l00103"></a><a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d">00103</a> <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name )
<a name="l00104"></a>00104 {
<a name="l00105"></a>00105     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00106"></a>00106     <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* cmd = NULL;
<a name="l00107"></a>00107     <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
<a name="l00108"></a>00108     pair&lt;multimap&lt;const char,Command*&gt;::iterator,multimap&lt;const char,Command*&gt;::iterator&gt; cmd_list;
<a name="l00109"></a>00109     <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keyword">const</span> <span class="keywordtype">char</span>,<a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>*, mi );
<a name="l00110"></a>00110 
<a name="l00111"></a>00111     <span class="keywordflow">if</span> ( name.empty() )
<a name="l00112"></a>00112         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindCommand()-&gt; called with empty name&quot;</span> );
<a name="l00113"></a>00113 
<a name="l00114"></a>00114     <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
<a name="l00115"></a>00115         cmd_list = <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.equal_range( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name )[0] );
<a name="l00116"></a>00116     <span class="keywordflow">else</span>
<a name="l00117"></a>00117         cmd_list = <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.equal_range( name[0] );
<a name="l00118"></a>00118 
<a name="l00119"></a>00119     <span class="keywordflow">if</span> ( cmd_list.first == cmd_list.second )
<a name="l00120"></a>00120         cmd = NULL;
<a name="l00121"></a>00121     <span class="keywordflow">else</span>
<a name="l00122"></a>00122     {
<a name="l00123"></a>00123         <span class="keywordflow">for</span> ( mi = cmd_list.first; mi != cmd_list.second; mi++ )
<a name="l00124"></a>00124         {
<a name="l00125"></a>00125             found = <span class="keyword">false</span>;
<a name="l00126"></a>00126             cmd = mi-&gt;second;
<a name="l00127"></a>00127 
<a name="l00128"></a>00128             <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
<a name="l00129"></a>00129             {
<a name="l00130"></a>00130                 <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( cmd-&gt;<a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
<a name="l00131"></a>00131                     found = <span class="keyword">true</span>;
<a name="l00132"></a>00132             }
<a name="l00133"></a>00133             <span class="keywordflow">else</span>
<a name="l00134"></a>00134             {
<a name="l00135"></a>00135                 <span class="keywordflow">if</span> ( cmd-&gt;<a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>().find( name ) == 0 )
<a name="l00136"></a>00136                     found = <span class="keyword">true</span>;
<a name="l00137"></a>00137             }
<a name="l00138"></a>00138 
<a name="l00139"></a>00139             <span class="keywordflow">if</span> ( found )
<a name="l00140"></a>00140                 <span class="keywordflow">break</span>;
<a name="l00141"></a>00141         }
<a name="l00142"></a>00142 
<a name="l00143"></a>00143         <span class="keywordflow">if</span> ( !found )
<a name="l00144"></a>00144             cmd = NULL;
<a name="l00145"></a>00145     }
<a name="l00146"></a>00146 
<a name="l00147"></a>00147     <span class="keywordflow">return</span> cmd;
<a name="l00148"></a>00148 }
<a name="l00149"></a>00149 
<a name="l00156"></a><a class="code" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f">00156</a> <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* <a class="code" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f" title="Locates a Location associated with the game.">Handler::FindLocation</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name, <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; type )
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00159"></a>00159     <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* loc = NULL;
<a name="l00160"></a>00160     <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
<a name="l00161"></a>00161     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>*, li );
<a name="l00162"></a>00162     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> search = type;
<a name="l00163"></a>00163 
<a name="l00164"></a>00164     <span class="keywordflow">if</span> ( name.empty() )
<a name="l00165"></a>00165         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindLocation()-&gt; called with empty name&quot;</span> );
<a name="l00166"></a>00166 
<a name="l00167"></a>00167     <span class="keywordflow">if</span> ( <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.empty() )
<a name="l00168"></a>00168         loc = NULL;
<a name="l00169"></a>00169     <span class="keywordflow">else</span>
<a name="l00170"></a>00170     {
<a name="l00171"></a>00171         <span class="keywordflow">if</span> ( search &lt; uintmin_t || search &gt;= <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a76f1872093e830545839a2ec938b3098">MAX_HANDLER_FIND</a> )
<a name="l00172"></a>00172         {
<a name="l00173"></a>00173             <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::FindLocation()-&gt; Called with invalid type: %lu&quot;</span>, search );
<a name="l00174"></a>00174             <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindLocation()-&gt; defaulting to HANDLER_FIND_ID&quot;</span> );
<a name="l00175"></a>00175             search = <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a>;
<a name="l00176"></a>00176         }
<a name="l00177"></a>00177 
<a name="l00178"></a>00178         <span class="keywordflow">for</span> ( li = <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.begin(); li != <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.end(); li++ )
<a name="l00179"></a>00179         {
<a name="l00180"></a>00180             found = <span class="keyword">false</span>;
<a name="l00181"></a>00181             loc = *li;
<a name="l00182"></a>00182 
<a name="l00183"></a>00183             <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
<a name="l00184"></a>00184             {
<a name="l00185"></a>00185                 <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( loc-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
<a name="l00186"></a>00186                     found = <span class="keyword">true</span>;
<a name="l00187"></a>00187                 <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( loc-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
<a name="l00188"></a>00188                     found = <span class="keyword">true</span>;
<a name="l00189"></a>00189             }
<a name="l00190"></a>00190             <span class="keywordflow">else</span>
<a name="l00191"></a>00191             {
<a name="l00192"></a>00192                 <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; loc-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>().find( name ) == 0 )
<a name="l00193"></a>00193                     found = <span class="keyword">true</span>;
<a name="l00194"></a>00194                 <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; loc-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>().find( name ) == 0 )
<a name="l00195"></a>00195                     found = <span class="keyword">true</span>;
<a name="l00196"></a>00196             }
<a name="l00197"></a>00197 
<a name="l00198"></a>00198             <span class="keywordflow">if</span> ( found )
<a name="l00199"></a>00199                 <span class="keywordflow">break</span>;
<a name="l00200"></a>00200         }
<a name="l00201"></a>00201 
<a name="l00202"></a>00202         <span class="keywordflow">if</span> ( !found )
<a name="l00203"></a>00203             loc = NULL;
<a name="l00204"></a>00204     }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206     <span class="keywordflow">return</span> loc;
<a name="l00207"></a>00207 }
<a name="l00208"></a>00208 
<a name="l00216"></a><a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888">00216</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">Handler::LoginHandler</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00217"></a>00217 {
<a name="l00218"></a>00218     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00219"></a>00219 
<a name="l00220"></a>00220     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00221"></a>00221     {
<a name="l00222"></a>00222         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginHandler()-&gt; called with NULL client&quot;</span> );
<a name="l00223"></a>00223         <span class="keywordflow">return</span>;
<a name="l00224"></a>00224     }
<a name="l00225"></a>00225 
<a name="l00226"></a>00226     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> &amp;&amp; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00227"></a>00227     {
<a name="l00228"></a>00228         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginHandler()-&gt; called with NULL account&quot;</span> );
<a name="l00229"></a>00229         <span class="keywordflow">return</span>;
<a name="l00230"></a>00230     }
<a name="l00231"></a>00231 
<a name="l00232"></a>00232     <span class="comment">//cout &lt;&lt; &quot;state=[&quot; &lt;&lt; client-&gt;gState() &lt;&lt; &quot;} cmd={&quot; &lt;&lt; cmd &lt;&lt; &quot;} args={&quot; &lt;&lt; args &lt;&lt;&quot;}&quot; &lt;&lt; endl;</span>
<a name="l00233"></a>00233     <span class="keywordflow">switch</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() )
<a name="l00234"></a>00234     {
<a name="l00235"></a>00235         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a>:                <a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191" title="Send initial greeting and request for account name.">LoginScreen</a>( client, cmd, args );               <span class="keywordflow">break</span>;
<a name="l00236"></a>00236         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad1df19251e972b85012bd03f5a12f47b">SOC_STATE_GET_OLD_PASSWORD</a>:            <a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6" title="Compare a received password against an existing account.">GetOldPassword</a>( client, cmd, args );            <span class="keywordflow">break</span>;
<a name="l00237"></a>00237         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a60ba81eec35892e83b8430190320529f">SOC_STATE_GET_NEW_ACCOUNT</a>:             <a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4" title="Select a new account name.">GetNewAccount</a>( client, cmd, args );             <span class="keywordflow">break</span>;
<a name="l00238"></a>00238         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a812001ad08d1204b69ffbaa7eaaba1c7">SOC_STATE_GET_NEW_PASSWORD</a>:            <a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2" title="Create a new account.">GetNewPassword</a>( client, cmd, args );            <span class="keywordflow">break</span>;
<a name="l00239"></a>00239         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a>:              <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">AttachAccount</a>( client, cmd, args );             <span class="keywordflow">break</span>;
<a name="l00240"></a>00240         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a>:                <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">AttachAccount</a>( client, cmd, args );             <span class="keywordflow">break</span>;
<a name="l00241"></a>00241         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a>:                <a class="code" href="namespaceHandler.xhtml#a73ed6064f2698dbffb5f4c247a02b661" title="Send initial account interface menu.">AccountMenuMain</a>( client, cmd, args );           <span class="keywordflow">break</span>;
<a name="l00242"></a>00242         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a>:       <a class="code" href="namespaceHandler.xhtml#ad04998a7a6ece2486bc441052a57c2d7" title="Main Character creation menu.">CharacterCreateMenuMain</a>( client, cmd, args );   <span class="keywordflow">break</span>;
<a name="l00243"></a>00243         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0ce2c68c74dd615e11036b1c7109de8a">SOC_STATE_CHARACTER_CREATE_NAME</a>:       <a class="code" href="namespaceHandler.xhtml#ab5889a65de2794129b375ec39ae923ae" title="Select a new Character name.">CharacterCreateName</a>( client, cmd, args );       <span class="keywordflow">break</span>;
<a name="l00244"></a>00244         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a2bc7da7824985417f2ea284bac10981a">SOC_STATE_CHARACTER_CREATE_SEX</a>:        <a class="code" href="namespaceHandler.xhtml#ae5086bcf5857eb572beedd09158c3065" title="Select a new Character sex.">CharacterCreateSex</a>( client, cmd, args );        <span class="keywordflow">break</span>;
<a name="l00245"></a>00245         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a3ba35f86a8c8b1e10a6bd24db6f990fb">SOC_STATE_CHARACTER_CREATE_FINISH</a>:     <a class="code" href="namespaceHandler.xhtml#a2e4ebf6ed049eb872aa4948d54c4932c" title="Attempt to write a new character to disk after creation was completed.">AttachCharacter</a>( client, cmd, args );           <span class="keywordflow">break</span>;
<a name="l00246"></a>00246         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a4253f1f671b85b03cf8d7394ec3edf33">SOC_STATE_CHARACTER_DELETE_MENU</a>:       <a class="code" href="namespaceHandler.xhtml#afc470ec6e82b7a9a1560588a368734f9" title="Main Character deletion menu.">CharacterDeleteMenuMain</a>( client, cmd, args );   <span class="keywordflow">break</span>;
<a name="l00247"></a>00247         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a235dd6ae36a9da520e4edd2bcca0a15a">SOC_STATE_CHARACTER_DELETE_CONFIRM</a>:    <a class="code" href="namespaceHandler.xhtml#a97a198bfc72285b2aca4f36978db715e" title="Main Character deletion confirmation.">CharacterDeleteConfirm</a>( client, cmd, args );    <span class="keywordflow">break</span>;
<a name="l00248"></a>00248         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ae26279296a5e34c7f6c2ea6c0a8e8c2b">SOC_STATE_CHARACTER_LOAD_MENU</a>:         <a class="code" href="namespaceHandler.xhtml#a02b1b954749641ab646f6548a5360d3b" title="Main Character load menu.">CharacterLoadMenuMain</a>( client, cmd, args );     <span class="keywordflow">break</span>;
<a name="l00249"></a>00249         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7afa2695463879d6efdd681ec274ba2a1a">SOC_STATE_LOAD_CHARACTER</a>:              <a class="code" href="namespaceHandler.xhtml#ae70e4e50054c729c14493eafefe01b5c" title="Load a character from the account to enter into the game with.">LoadCharacter</a>( client, cmd, args );             <span class="keywordflow">break</span>;
<a name="l00250"></a>00250         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a593a3ddc02ef1c56b6e4000fa5580e6d">SOC_STATE_ENTER_GAME</a>:                  <a class="code" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb" title="Places the character loaded against the account into the game world.">EnterGame</a>( client, cmd, args );                 <span class="keywordflow">break</span>;
<a name="l00251"></a>00251         <span class="keywordflow">default</span>:                                                                                    <span class="keywordflow">break</span>;
<a name="l00252"></a>00252     }
<a name="l00253"></a>00253 
<a name="l00254"></a>00254     <span class="keywordflow">return</span>;
<a name="l00255"></a>00255 }
<a name="l00256"></a>00256 
<a name="l00257"></a>00257 <span class="comment">/* Query */</span>
<a name="l00265"></a><a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88">00265</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88" title="Check to see if the current account is already being created.">Handler::CheckCreating</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name )
<a name="l00266"></a>00266 {
<a name="l00267"></a>00267     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00268"></a>00268     <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flag );
<a name="l00269"></a>00269     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>*, si );
<a name="l00270"></a>00270     <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* socket_client = NULL;
<a name="l00271"></a>00271 
<a name="l00272"></a>00272     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00273"></a>00273     {
<a name="l00274"></a>00274         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with NULL client&quot;</span> );
<a name="l00275"></a>00275         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00276"></a>00276     }
<a name="l00277"></a>00277 
<a name="l00278"></a>00278     <span class="keywordflow">if</span> ( name.empty() )
<a name="l00279"></a>00279     {
<a name="l00280"></a>00280         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with empty name&quot;</span> );
<a name="l00281"></a>00281         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00282"></a>00282     }
<a name="l00283"></a>00283 
<a name="l00284"></a>00284     <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> )
<a name="l00285"></a>00285     {
<a name="l00286"></a>00286         socket_client = *si;
<a name="l00287"></a>00287         <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ac53fd9755bbb78e3dd0b77d4f81fb959">m_next_socket_client</a> = ++si;
<a name="l00288"></a>00288 
<a name="l00289"></a>00289         <span class="keywordflow">if</span> ( socket_client == client )
<a name="l00290"></a>00290             <span class="keywordflow">continue</span>;
<a name="l00291"></a>00291 
<a name="l00292"></a>00292         <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> )
<a name="l00293"></a>00293             <span class="keywordflow">continue</span>;
<a name="l00294"></a>00294 
<a name="l00295"></a>00295         <span class="keywordflow">if</span> ( name == socket_client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) )
<a name="l00296"></a>00296         {
<a name="l00297"></a>00297             <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flag, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; player from site %s attempted to login as %s (in creation)&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( name ) );
<a name="l00298"></a>00298             <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00299"></a>00299         }
<a name="l00300"></a>00300     }
<a name="l00301"></a>00301 
<a name="l00302"></a>00302     <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00303"></a>00303 }
<a name="l00304"></a>00304 
<a name="l00311"></a><a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e">00311</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">Handler::CheckPlaying</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name )
<a name="l00312"></a>00312 {
<a name="l00313"></a>00313     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00314"></a>00314     <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flag );
<a name="l00315"></a>00315     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>*, ci );
<a name="l00316"></a>00316     <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
<a name="l00317"></a>00317 
<a name="l00318"></a>00318     <span class="keywordflow">if</span> ( name.empty() )
<a name="l00319"></a>00319     {
<a name="l00320"></a>00320         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckPlaying()-&gt; called with empty name&quot;</span> );
<a name="l00321"></a>00321         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00322"></a>00322     }
<a name="l00323"></a>00323 
<a name="l00324"></a>00324     <span class="keywordflow">for</span> ( ci = <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.begin(); ci != <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.end(); ci++ )
<a name="l00325"></a>00325     {
<a name="l00326"></a>00326         chr = *ci;
<a name="l00327"></a>00327 
<a name="l00328"></a>00328         <span class="keywordflow">if</span> ( chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() == name )
<a name="l00329"></a>00329             <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00330"></a>00330     }
<a name="l00331"></a>00331 
<a name="l00332"></a>00332     <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00333"></a>00333 }
<a name="l00334"></a>00334 
<a name="l00343"></a><a class="code" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927">00343</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name, <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; type )
<a name="l00344"></a>00344 {
<a name="l00345"></a>00345     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00346"></a>00346     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( forward_list, <span class="keywordtype">string</span>, fi );
<a name="l00347"></a>00347     forward_list&lt;string&gt; search;
<a name="l00348"></a>00348     <span class="keywordtype">string</span> comp;
<a name="l00349"></a>00349     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> searcht = type;
<a name="l00350"></a>00350 
<a name="l00351"></a>00351     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00352"></a>00352     {
<a name="l00353"></a>00353         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with NULL client&quot;</span> );
<a name="l00354"></a>00354         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00355"></a>00355     }
<a name="l00356"></a>00356 
<a name="l00357"></a>00357     <span class="keywordflow">if</span> ( name.empty() )
<a name="l00358"></a>00358     {
<a name="l00359"></a>00359         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with empty name&quot;</span> );
<a name="l00360"></a>00360         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00361"></a>00361     }
<a name="l00362"></a>00362 
<a name="l00363"></a>00363     <span class="keywordflow">if</span> ( searcht &lt; uintmin_t || searcht &gt;= <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a7ed5feb77c107fca67e72bebebbffc94">MAX_SVR_CFG_PROHIBITED_NAMES</a> )
<a name="l00364"></a>00364     {
<a name="l00365"></a>00365         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::CheckProhibited()-&gt; Called with invalid type: %lu&quot;</span>, searcht );
<a name="l00366"></a>00366         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckProhibited()-&gt; defaulting to SVR_CFG_PROHIBITED_NAMES_ACCOUNT&quot;</span> );
<a name="l00367"></a>00367         searcht = <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7ace193a596bade4a7d0d31de31b2c563b">SVR_CFG_PROHIBITED_NAMES_ACCOUNT</a>;
<a name="l00368"></a>00368     }
<a name="l00369"></a>00369 
<a name="l00370"></a>00370     <span class="comment">// Search for prohibited names</span>
<a name="l00371"></a>00371     search = <a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#a69c39210f0791ea8af97ee05c38efabc" title="Returns an a copy of the prohibited names list using type from SVR_CFG_PROHIBITED_NAMES.">gProhibitedNames</a>( searcht );
<a name="l00372"></a>00372     <span class="keywordflow">for</span> ( fi = search.begin(); fi != search.end(); fi++ )
<a name="l00373"></a>00373     {
<a name="l00374"></a>00374         comp = *fi;
<a name="l00375"></a>00375         <span class="keywordflow">if</span> ( comp == name )
<a name="l00376"></a>00376             <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00377"></a>00377     }
<a name="l00378"></a>00378 
<a name="l00379"></a>00379     <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00380"></a>00380 }
<a name="l00381"></a>00381 
<a name="l00382"></a>00382 <span class="comment">/* Manipulate */</span>
<a name="l00390"></a><a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0">00390</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">Handler::AttachAccount</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00391"></a>00391 {
<a name="l00392"></a>00392     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00393"></a>00393     <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>* account = NULL;
<a name="l00394"></a>00394     <span class="keywordtype">bool</span> exists = <span class="keyword">false</span>;
<a name="l00395"></a>00395 
<a name="l00396"></a>00396     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00397"></a>00397     {
<a name="l00398"></a>00398         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachAccount()-&gt; called with NULL client&quot;</span> );
<a name="l00399"></a>00399         <span class="keywordflow">return</span>;
<a name="l00400"></a>00400     }
<a name="l00401"></a>00401 
<a name="l00402"></a>00402     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() == <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a> )
<a name="l00403"></a>00403         exists = <span class="keyword">false</span>;
<a name="l00404"></a>00404     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() == <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> )
<a name="l00405"></a>00405         exists = <span class="keyword">true</span>;
<a name="l00406"></a>00406     <span class="keywordflow">else</span>
<a name="l00407"></a>00407     {
<a name="l00408"></a>00408         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::AttachAccount()-&gt; called with invalid client state: %lu&quot;</span>, client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() );
<a name="l00409"></a>00409         <span class="keywordflow">return</span>;
<a name="l00410"></a>00410     }
<a name="l00411"></a>00411 
<a name="l00412"></a>00412     <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">false</span> );
<a name="l00413"></a>00413 
<a name="l00414"></a>00414     account = <span class="keyword">new</span> <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>();
<a name="l00415"></a>00415     <span class="keywordflow">if</span> ( !account-&gt;<a class="code" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf" title="Create a new account.">New</a>( client, exists ) )
<a name="l00416"></a>00416     {
<a name="l00417"></a>00417         account-&gt;<a class="code" href="classAccount.xhtml#aa82e62e930fb3a8ac58a4592f323db75" title="Unload an account from memory that was previously loaded via Account::New().">Delete</a>();
<a name="l00418"></a>00418 
<a name="l00419"></a>00419         <span class="keywordflow">if</span> ( exists )
<a name="l00420"></a>00420             <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">FindCommand</a>( <span class="stringliteral">&quot;quit&quot;</span> )-&gt;<a class="code" href="classCommand.xhtml#a6cef42c7b0a50d8aa3b4424aef29b0bd" title="Execute a Plugin object&#39;s primary function.">Run</a>( client );
<a name="l00421"></a>00421         <span class="keywordflow">else</span>
<a name="l00422"></a>00422         {
<a name="l00423"></a>00423             client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00424"></a>00424             client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00425"></a>00425             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );
<a name="l00426"></a>00426             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a4c33c190efd41cbd350a341e0942fe20" title="String sent if an error occurs when first creating a new account.">CFG_STR_ACT_NEW_ERROR</a> );
<a name="l00427"></a>00427             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00428"></a>00428         }
<a name="l00429"></a>00429 
<a name="l00430"></a>00430         <span class="keywordflow">return</span>;
<a name="l00431"></a>00431     }
<a name="l00432"></a>00432 
<a name="l00433"></a>00433     <span class="comment">// All went well, off to the account menu</span>
<a name="l00434"></a>00434     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l00435"></a>00435     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00436"></a>00436 
<a name="l00437"></a>00437     <span class="keywordflow">return</span>;
<a name="l00438"></a>00438 }
<a name="l00439"></a>00439 
<a name="l00447"></a><a class="code" href="namespaceHandler.xhtml#a2e4ebf6ed049eb872aa4948d54c4932c">00447</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a2e4ebf6ed049eb872aa4948d54c4932c" title="Attempt to write a new character to disk after creation was completed.">Handler::AttachCharacter</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00448"></a>00448 {
<a name="l00449"></a>00449     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00450"></a>00450 
<a name="l00451"></a>00451     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00452"></a>00452     {
<a name="l00453"></a>00453         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachCharacter()-&gt; called with NULL client&quot;</span> );
<a name="l00454"></a>00454         <span class="keywordflow">return</span>;
<a name="l00455"></a>00455     }
<a name="l00456"></a>00456 
<a name="l00457"></a>00457     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00458"></a>00458     {
<a name="l00459"></a>00459         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachCharacter()-&gt; called with NULL account&quot;</span> );
<a name="l00460"></a>00460         <span class="keywordflow">return</span>;
<a name="l00461"></a>00461     }
<a name="l00462"></a>00462 
<a name="l00463"></a>00463     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )
<a name="l00464"></a>00464     {
<a name="l00465"></a>00465         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachCharacter()-&gt; called with NULL character&quot;</span> );
<a name="l00466"></a>00466         <span class="keywordflow">return</span>;
<a name="l00467"></a>00467     }
<a name="l00468"></a>00468 
<a name="l00469"></a>00469     <span class="comment">// Save the new character then the delete the in-memory copy and reset the active account character</span>
<a name="l00470"></a>00470     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#abce4ced500d49ec0ed48bd3049c0bb4e" title="Adds a character name to the list of associated characters.">aCharacter</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() );
<a name="l00471"></a>00471     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff" title="Serialize the account data.">Serialize</a>();
<a name="l00472"></a>00472     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#acbf271cc1d8bf64bd5bd4c286f508f67" title="Serialize the character data.">Serialize</a>();
<a name="l00473"></a>00473     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a4f7ff295f5de0fa4f8fece0acb7aaa53" title="Unload a character from memory that was previously loaded via Character::New().">Delete</a>();
<a name="l00474"></a>00474     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a9d26a3cae2d36c829a42cab3d5c9fe05" title="This will set the m_character pointer to NULL, invalidating any references. This exists outside of sC...">ClearCharacter</a>();
<a name="l00475"></a>00475 
<a name="l00476"></a>00476     <span class="comment">// All went well, off to the account menu</span>
<a name="l00477"></a>00477     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l00478"></a>00478     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00479"></a>00479 
<a name="l00480"></a>00480     <span class="keywordflow">return</span>;
<a name="l00481"></a>00481 }
<a name="l00482"></a>00482 
<a name="l00489"></a><a class="code" href="namespaceHandler.xhtml#ae660d7a3f4c95db9639d74e965e82df6">00489</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#ae660d7a3f4c95db9639d74e965e82df6" title="Reconnects an existing in-game Character to a new SocketClient.">Handler::Reconnect</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* character )
<a name="l00490"></a>00490 {
<a name="l00491"></a>00491     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00492"></a>00492     <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flag );
<a name="l00493"></a>00493     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( forward_list, <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>*, ei );
<a name="l00494"></a>00494     <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( forward_list, <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>*, ei_next );
<a name="l00495"></a>00495     <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>* <span class="keyword">event</span> = NULL;
<a name="l00496"></a>00496 
<a name="l00497"></a>00497     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00498"></a>00498     {
<a name="l00499"></a>00499         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::Reconnect()-&gt; called with NULL client&quot;</span> );
<a name="l00500"></a>00500         <span class="keywordflow">return</span>;
<a name="l00501"></a>00501     }
<a name="l00502"></a>00502 
<a name="l00503"></a>00503     <span class="keywordflow">if</span> ( character == NULL )
<a name="l00504"></a>00504     {
<a name="l00505"></a>00505         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::Reconnect()-&gt; called with NULL character&quot;</span> );
<a name="l00506"></a>00506         <span class="keywordflow">return</span>;
<a name="l00507"></a>00507     }
<a name="l00508"></a>00508 
<a name="l00509"></a>00509     <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flag, <span class="stringliteral">&quot;%s@%s kicking off old link.&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( character-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ) );
<a name="l00510"></a>00510 
<a name="l00511"></a>00511     <span class="comment">// De-associate from the existing login session, if one exists</span>
<a name="l00512"></a>00512     <span class="keywordflow">if</span> ( character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>() )
<a name="l00513"></a>00513     {
<a name="l00514"></a>00514         character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( NULL );
<a name="l00515"></a>00515         character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9" title="Returns the associated SocketClient.">gClient</a>()-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9d096c75b5e31056089c1e20afad749e">SOC_STATE_DISC_LINKDEAD</a> );
<a name="l00516"></a>00516         character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9" title="Returns the associated SocketClient.">gClient</a>()-&gt;<a class="code" href="classSocketClient.xhtml#ad8ab017dd47d5e8b20ad30f72773a759" title="Flags a client as quitting to break out of nested loops.">Quit</a>();
<a name="l00517"></a>00517         character-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( NULL );
<a name="l00518"></a>00518     }
<a name="l00519"></a>00519 
<a name="l00520"></a>00520     <span class="comment">// Now re-associate to the new one</span>
<a name="l00521"></a>00521     character-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );
<a name="l00522"></a>00522     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( character );
<a name="l00523"></a>00523 
<a name="l00524"></a>00524     <span class="comment">// Cleanup any pending disconnection events from the old Character</span>
<a name="l00525"></a>00525     <span class="keywordflow">for</span> ( ei = <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.begin(); ei != <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.end(); ei = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ad09b3760d6f761c65ae1a84f7b8e1c3c">m_next_event</a> )
<a name="l00526"></a>00526     {
<a name="l00527"></a>00527         <span class="keyword">event</span> = *ei;
<a name="l00528"></a>00528         <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ad09b3760d6f761c65ae1a84f7b8e1c3c">m_next_event</a> = ++ei;
<a name="l00529"></a>00529 
<a name="l00530"></a>00530         <span class="keywordflow">if</span> ( event-&gt;gCharacter() == character &amp;&amp; <span class="keyword">event</span>-&gt;gCommand() == <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( <span class="stringliteral">&quot;quit&quot;</span> ) )
<a name="l00531"></a>00531             event-&gt;Delete();
<a name="l00532"></a>00532     }
<a name="l00533"></a>00533 
<a name="l00534"></a>00534     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> );
<a name="l00535"></a>00535     client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a9252912464aa57109d65b9882dead401" title="String sent upon resuming a linkdead character.">CFG_STR_CHR_RECONNECTED</a> );
<a name="l00536"></a>00536 
<a name="l00537"></a>00537     <span class="keywordflow">return</span>;
<a name="l00538"></a>00538 }
<a name="l00539"></a>00539 
<a name="l00540"></a>00540 <span class="comment">/* Internal */</span>
<a name="l00548"></a><a class="code" href="namespaceHandler.xhtml#a73ed6064f2698dbffb5f4c247a02b661">00548</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a73ed6064f2698dbffb5f4c247a02b661" title="Send initial account interface menu.">Handler::AccountMenuMain</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00549"></a>00549 {
<a name="l00550"></a>00550     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00551"></a>00551     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00552"></a>00552 
<a name="l00553"></a>00553     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00554"></a>00554     {
<a name="l00555"></a>00555         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::MenuScreen()-&gt; called with NULL client&quot;</span> );
<a name="l00556"></a>00556         <span class="keywordflow">return</span>;
<a name="l00557"></a>00557     }
<a name="l00558"></a>00558 
<a name="l00559"></a>00559     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00560"></a>00560     {
<a name="l00561"></a>00561         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::MenuScreen()-&gt; called with NULL account&quot;</span> );
<a name="l00562"></a>00562         <span class="keywordflow">return</span>;
<a name="l00563"></a>00563     }
<a name="l00564"></a>00564 
<a name="l00565"></a>00565     <span class="comment">//Initial entry</span>
<a name="l00566"></a>00566     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00567"></a>00567     {
<a name="l00568"></a>00568         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
<a name="l00569"></a>00569         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
<a name="l00570"></a>00570         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
<a name="l00571"></a>00571         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Load an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754a32e2a0f99ad782295ee8dca29e42">ACT_MENU_MAIN_CHARACTER_LOAD</a> ) );
<a name="l00572"></a>00572         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Create a new character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201beaa36c938e86e6e01a12cc0da8e3e1311e">ACT_MENU_MAIN_CHARACTER_CREATE</a> ) );
<a name="l00573"></a>00573         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Delete an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea078a8c5e5b8734507c325d4df2a6e969">ACT_MENU_MAIN_CHARACTER_DELETE</a> ) );
<a name="l00574"></a>00574         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Quit&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea48e5d6fc0c721f034a7dbd3de9e6f960">ACT_MENU_MAIN_QUIT</a> ) );
<a name="l00575"></a>00575         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00576"></a>00576         <span class="keywordflow">return</span>;
<a name="l00577"></a>00577     }
<a name="l00578"></a>00578 
<a name="l00579"></a>00579     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l00580"></a>00580     stringstream( cmd ) &gt;&gt; val;
<a name="l00581"></a>00581 
<a name="l00582"></a>00582     <span class="keywordflow">switch</span>( val )
<a name="l00583"></a>00583     {
<a name="l00584"></a>00584         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754a32e2a0f99ad782295ee8dca29e42">ACT_MENU_MAIN_CHARACTER_LOAD</a>:
<a name="l00585"></a>00585             <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().empty() )
<a name="l00586"></a>00586             {
<a name="l00587"></a>00587                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ae26279296a5e34c7f6c2ea6c0a8e8c2b">SOC_STATE_CHARACTER_LOAD_MENU</a> );
<a name="l00588"></a>00588                 <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00589"></a>00589             }
<a name="l00590"></a>00590             <span class="keywordflow">else</span>
<a name="l00591"></a>00591             {
<a name="l00592"></a>00592                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a907d5e507702d28e05c3dafdb3435e16" title="String sent if the account has no characters to delete.">CFG_STR_ACT_CHR_NONE</a> );
<a name="l00593"></a>00593                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00594"></a>00594             }
<a name="l00595"></a>00595         <span class="keywordflow">break</span>;
<a name="l00596"></a>00596 
<a name="l00597"></a>00597         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201beaa36c938e86e6e01a12cc0da8e3e1311e">ACT_MENU_MAIN_CHARACTER_CREATE</a>:
<a name="l00598"></a>00598             <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().size() &lt; <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> )
<a name="l00599"></a>00599             {
<a name="l00600"></a>00600                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
<a name="l00601"></a>00601                 <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00602"></a>00602             }
<a name="l00603"></a>00603             <span class="keywordflow">else</span>
<a name="l00604"></a>00604             {
<a name="l00605"></a>00605                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#af10b8baa26f45cbe37dacb6ccda5c138" title="String sent if the account character limit has been reached.">CFG_STR_ACT_CHR_LIMIT</a>, <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> ) );
<a name="l00606"></a>00606                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00607"></a>00607             }
<a name="l00608"></a>00608         <span class="keywordflow">break</span>;
<a name="l00609"></a>00609 
<a name="l00610"></a>00610         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea078a8c5e5b8734507c325d4df2a6e969">ACT_MENU_MAIN_CHARACTER_DELETE</a>:
<a name="l00611"></a>00611             <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().empty() )
<a name="l00612"></a>00612             {
<a name="l00613"></a>00613                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a4253f1f671b85b03cf8d7394ec3edf33">SOC_STATE_CHARACTER_DELETE_MENU</a> );
<a name="l00614"></a>00614                 <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00615"></a>00615             }
<a name="l00616"></a>00616             <span class="keywordflow">else</span>
<a name="l00617"></a>00617             {
<a name="l00618"></a>00618                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a907d5e507702d28e05c3dafdb3435e16" title="String sent if the account has no characters to delete.">CFG_STR_ACT_CHR_NONE</a> );
<a name="l00619"></a>00619                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00620"></a>00620             }
<a name="l00621"></a>00621         <span class="keywordflow">break</span>;
<a name="l00622"></a>00622 
<a name="l00623"></a>00623         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea48e5d6fc0c721f034a7dbd3de9e6f960">ACT_MENU_MAIN_QUIT</a>:
<a name="l00624"></a>00624             client-&gt;<a class="code" href="classSocketClient.xhtml#ad8ab017dd47d5e8b20ad30f72773a759" title="Flags a client as quitting to break out of nested loops.">Quit</a>();
<a name="l00625"></a>00625         <span class="keywordflow">break</span>;
<a name="l00626"></a>00626 
<a name="l00627"></a>00627         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754b81d889ca855ffcd87b628aaa88b0">ACT_MENU_MAIN_INVALID</a>:
<a name="l00628"></a>00628         <span class="keywordflow">default</span>:
<a name="l00629"></a>00629             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l00630"></a>00630             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00631"></a>00631         <span class="keywordflow">break</span>;
<a name="l00632"></a>00632     }
<a name="l00633"></a>00633 
<a name="l00634"></a>00634     <span class="keywordflow">return</span>;
<a name="l00635"></a>00635 }
<a name="l00636"></a>00636 
<a name="l00644"></a><a class="code" href="namespaceHandler.xhtml#ad04998a7a6ece2486bc441052a57c2d7">00644</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#ad04998a7a6ece2486bc441052a57c2d7" title="Main Character creation menu.">Handler::CharacterCreateMenuMain</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00645"></a>00645 {
<a name="l00646"></a>00646     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00647"></a>00647     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>, val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00648"></a>00648     stringstream menu1, menu2;
<a name="l00649"></a>00649     <span class="keywordtype">bool</span> done = <span class="keyword">true</span>;
<a name="l00650"></a>00650 
<a name="l00651"></a>00651     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00652"></a>00652     {
<a name="l00653"></a>00653         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateMenu()-&gt; called with NULL client&quot;</span> );
<a name="l00654"></a>00654         <span class="keywordflow">return</span>;
<a name="l00655"></a>00655     }
<a name="l00656"></a>00656 
<a name="l00657"></a>00657     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00658"></a>00658     {
<a name="l00659"></a>00659         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateMenu()-&gt; called with NULL account&quot;</span> );
<a name="l00660"></a>00660         <span class="keywordflow">return</span>;
<a name="l00661"></a>00661     }
<a name="l00662"></a>00662 
<a name="l00663"></a>00663     <span class="comment">//Initial entry</span>
<a name="l00664"></a>00664     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00665"></a>00665     {
<a name="l00666"></a>00666         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
<a name="l00667"></a>00667         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
<a name="l00668"></a>00668         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Create a new character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
<a name="l00669"></a>00669 
<a name="l00670"></a>00670         <span class="comment">// If we&#39;re mid-creation, update the menu items to show current selections</span>
<a name="l00671"></a>00671         <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() != NULL )
<a name="l00672"></a>00672         {
<a name="l00673"></a>00673             <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad3d3db7ed1d44cf53fb7ae4b991a1c18" title="Gets the creation states of this character from CHR_CREATION.">gCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2fa60dd40a9d310bba8b71b3d222b3fb19e">CHR_CREATION_NAME</a> ) )
<a name="l00674"></a>00674                 menu1 &lt;&lt; <span class="stringliteral">&quot;(is: &quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;
<a name="l00675"></a>00675             <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad3d3db7ed1d44cf53fb7ae4b991a1c18" title="Gets the creation states of this character from CHR_CREATION.">gCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2faea2fb06a425bf49ffaf7a903a94f716c">CHR_CREATION_SEX</a> ) )
<a name="l00676"></a>00676                 <span class="keywordflow">switch</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a3687af665ff3b9fe94176ecde8a7beca" title="Returns the sex of this character from CHR_SEX.">gSex</a>() )
<a name="l00677"></a>00677                 {
<a name="l00678"></a>00678                     <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa31f8167957e67d5ac64a9a8427193c70">CHR_SEX_NEUTRAL</a>: menu2 &lt;&lt; <span class="stringliteral">&quot;(is: neutral)&quot;</span>; <span class="keywordflow">break</span>;
<a name="l00679"></a>00679                     <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa3590fbec25a4afeb0080c29992209839">CHR_SEX_FEMALE</a>:  menu2 &lt;&lt; <span class="stringliteral">&quot;(is: female)&quot;</span>;  <span class="keywordflow">break</span>;
<a name="l00680"></a>00680                     <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fafbb9b9df511dcc3d7ac57a231162b06b">CHR_SEX_MALE</a>:    menu2 &lt;&lt; <span class="stringliteral">&quot;(is: male)&quot;</span>;    <span class="keywordflow">break</span>;
<a name="l00681"></a>00681                 }
<a name="l00682"></a>00682             <span class="comment">// Ensure creation was completed</span>
<a name="l00683"></a>00683             <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2faf58cf9eab72ac90c69b2030b99d6c8c1">MAX_CHR_CREATION</a>; i++ )
<a name="l00684"></a>00684                 <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad3d3db7ed1d44cf53fb7ae4b991a1c18" title="Gets the creation states of this character from CHR_CREATION.">gCreation</a>( i ) )
<a name="l00685"></a>00685                 {
<a name="l00686"></a>00686                     done = <span class="keyword">false</span>;
<a name="l00687"></a>00687                     <span class="keywordflow">break</span>;
<a name="l00688"></a>00688                 }
<a name="l00689"></a>00689         }
<a name="l00690"></a>00690         <span class="keywordflow">else</span>
<a name="l00691"></a>00691             done = <span class="keyword">false</span>;
<a name="l00692"></a>00692 
<a name="l00693"></a>00693         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Set name %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca6252a0047a36b83e3a0158de8ca089d1">ACT_MENU_CHARACTER_CREATE_NAME</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( menu1.str() ) ) );
<a name="l00694"></a>00694         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Set sex %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca5357bc539d713a944c85a30517199902">ACT_MENU_CHARACTER_CREATE_SEX</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( menu2.str() ) ) );
<a name="l00695"></a>00695         <span class="keywordflow">if</span> ( done )
<a name="l00696"></a>00696             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Finish Creation&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcab56da7bdbf749b2a0ca432b1935efe5e">ACT_MENU_CHARACTER_CREATE_FINISH</a> ) );
<a name="l00697"></a>00697         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Back&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca917eb8927a034d85ab875216abb49c3f">ACT_MENU_CHARACTER_CREATE_BACK</a> ) );
<a name="l00698"></a>00698         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00699"></a>00699         <span class="keywordflow">return</span>;
<a name="l00700"></a>00700     }
<a name="l00701"></a>00701 
<a name="l00702"></a>00702     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l00703"></a>00703     stringstream( cmd ) &gt;&gt; val;
<a name="l00704"></a>00704 
<a name="l00705"></a>00705     <span class="keywordflow">switch</span>( val )
<a name="l00706"></a>00706     {
<a name="l00707"></a>00707         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca6252a0047a36b83e3a0158de8ca089d1">ACT_MENU_CHARACTER_CREATE_NAME</a>:
<a name="l00708"></a>00708             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0ce2c68c74dd615e11036b1c7109de8a">SOC_STATE_CHARACTER_CREATE_NAME</a> );
<a name="l00709"></a>00709             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00710"></a>00710         <span class="keywordflow">break</span>;
<a name="l00711"></a>00711 
<a name="l00712"></a>00712         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca5357bc539d713a944c85a30517199902">ACT_MENU_CHARACTER_CREATE_SEX</a>:
<a name="l00713"></a>00713             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a2bc7da7824985417f2ea284bac10981a">SOC_STATE_CHARACTER_CREATE_SEX</a> );
<a name="l00714"></a>00714             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00715"></a>00715         <span class="keywordflow">break</span>;
<a name="l00716"></a>00716 
<a name="l00717"></a>00717         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcab56da7bdbf749b2a0ca432b1935efe5e">ACT_MENU_CHARACTER_CREATE_FINISH</a>:
<a name="l00718"></a>00718             <span class="keywordflow">if</span> ( done )
<a name="l00719"></a>00719             {
<a name="l00720"></a>00720                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a3ba35f86a8c8b1e10a6bd24db6f990fb">SOC_STATE_CHARACTER_CREATE_FINISH</a> );
<a name="l00721"></a>00721                 <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00722"></a>00722             }
<a name="l00723"></a>00723             <span class="keywordflow">else</span>
<a name="l00724"></a>00724             {
<a name="l00725"></a>00725                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l00726"></a>00726                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00727"></a>00727             }
<a name="l00728"></a>00728         <span class="keywordflow">break</span>;
<a name="l00729"></a>00729 
<a name="l00730"></a>00730         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca917eb8927a034d85ab875216abb49c3f">ACT_MENU_CHARACTER_CREATE_BACK</a>:
<a name="l00731"></a>00731             <span class="comment">// Clear out any partially created characters</span>
<a name="l00732"></a>00732             <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() != NULL )
<a name="l00733"></a>00733             {
<a name="l00734"></a>00734                 client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a4f7ff295f5de0fa4f8fece0acb7aaa53" title="Unload a character from memory that was previously loaded via Character::New().">Delete</a>();
<a name="l00735"></a>00735                 client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a9d26a3cae2d36c829a42cab3d5c9fe05" title="This will set the m_character pointer to NULL, invalidating any references. This exists outside of sC...">ClearCharacter</a>();
<a name="l00736"></a>00736             }
<a name="l00737"></a>00737             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l00738"></a>00738             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00739"></a>00739         <span class="keywordflow">break</span>;
<a name="l00740"></a>00740 
<a name="l00741"></a>00741         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcaf2b0e2301eaa9639f7b43d86cd050e0c">ACT_MENU_CHARACTER_CREATE_INVALID</a>:
<a name="l00742"></a>00742         <span class="keywordflow">default</span>:
<a name="l00743"></a>00743             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l00744"></a>00744             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00745"></a>00745         <span class="keywordflow">break</span>;
<a name="l00746"></a>00746     }
<a name="l00747"></a>00747 
<a name="l00748"></a>00748     <span class="keywordflow">return</span>;
<a name="l00749"></a>00749 }
<a name="l00750"></a>00750 
<a name="l00758"></a><a class="code" href="namespaceHandler.xhtml#ab5889a65de2794129b375ec39ae923ae">00758</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#ab5889a65de2794129b375ec39ae923ae" title="Select a new Character name.">Handler::CharacterCreateName</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00759"></a>00759 {
<a name="l00760"></a>00760     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00761"></a>00761     <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
<a name="l00762"></a>00762     vector&lt;string&gt; clist;
<a name="l00763"></a>00763     vector&lt;string&gt;::iterator ci;
<a name="l00764"></a>00764     stringstream cid;
<a name="l00765"></a>00765 
<a name="l00766"></a>00766     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00767"></a>00767     {
<a name="l00768"></a>00768         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateName()-&gt; called with NULL client&quot;</span> );
<a name="l00769"></a>00769         <span class="keywordflow">return</span>;
<a name="l00770"></a>00770     }
<a name="l00771"></a>00771 
<a name="l00772"></a>00772     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00773"></a>00773     {
<a name="l00774"></a>00774         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateName()-&gt; called with NULL account&quot;</span> );
<a name="l00775"></a>00775         <span class="keywordflow">return</span>;
<a name="l00776"></a>00776     }
<a name="l00777"></a>00777 
<a name="l00778"></a>00778     <span class="comment">//Initial entry</span>
<a name="l00779"></a>00779     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00780"></a>00780     {
<a name="l00781"></a>00781         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ae3b715a473d93fd41ba803b7afe6ecfc" title="String sent to request the user enters their character name.">CFG_STR_CHR_NAME_GET</a> );
<a name="l00782"></a>00782         <span class="keywordflow">return</span>;
<a name="l00783"></a>00783     }
<a name="l00784"></a>00784 
<a name="l00785"></a>00785     <span class="comment">// Only allow alphanumerics for the character name itself</span>
<a name="l00786"></a>00786     <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a36780f0aa565047ca0db53bda2aff5fc" title="Checks to ensure an input is entirely alphanumeric.">Utils::iAlNum</a>( cmd ) )
<a name="l00787"></a>00787     {
<a name="l00788"></a>00788         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ab5c626cadbd3bb41c02ed643fb5f1d7a" title="String sent when an invalid character name is received.">CFG_STR_CHR_NAME_INVALID</a> );
<a name="l00789"></a>00789         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a0b57af6edbf0a82f5cfa3a37a334481b" title="String additionally sent if a character name is invalid due to non-alphanumeric characters.">CFG_STR_CHR_NAME_ALNUM</a> );
<a name="l00790"></a>00790         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00791"></a>00791 
<a name="l00792"></a>00792         <span class="keywordflow">return</span>;
<a name="l00793"></a>00793     }
<a name="l00794"></a>00794 
<a name="l00795"></a>00795     <span class="comment">//Prevent prohibited names based on Server runtime configuration</span>
<a name="l00796"></a>00796     <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( client, cmd, <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a0b97df46a200cf2a2446c483fad0c6c6">SVR_CFG_PROHIBITED_NAMES_CHARACTER</a> ) )
<a name="l00797"></a>00797     {
<a name="l00798"></a>00798         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ab5c626cadbd3bb41c02ed643fb5f1d7a" title="String sent when an invalid character name is received.">CFG_STR_CHR_NAME_INVALID</a> );
<a name="l00799"></a>00799         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#afb76a729d67483462b07902009a25b00" title="String additionally sent when a character name matches the prohibited names list.">CFG_STR_CHR_NAME_PROHIBITED</a> );
<a name="l00800"></a>00800         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00801"></a>00801 
<a name="l00802"></a>00802         <span class="keywordflow">return</span>;
<a name="l00803"></a>00803     }
<a name="l00804"></a>00804 
<a name="l00805"></a>00805     <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#a1bd78ab35ca3b3905154491d213bacee" title="The minimum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#a3137447c34477fc0afc6ad3865a58c13" title="The maximum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MAX_LEN</a> )
<a name="l00806"></a>00806     {
<a name="l00807"></a>00807         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ab5c626cadbd3bb41c02ed643fb5f1d7a" title="String sent when an invalid character name is received.">CFG_STR_CHR_NAME_INVALID</a> );
<a name="l00808"></a>00808         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a03612dee735429e3bdf021e5ab1dad68" title="String additionally sent when a character name is invalid due to length.">CFG_STR_CHR_NAME_LENGTH</a>, <a class="code" href="config_8h.xhtml#a1bd78ab35ca3b3905154491d213bacee" title="The minimum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#a3137447c34477fc0afc6ad3865a58c13" title="The maximum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MAX_LEN</a> ) );
<a name="l00809"></a>00809         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00810"></a>00810 
<a name="l00811"></a>00811         <span class="keywordflow">return</span>;
<a name="l00812"></a>00812     }
<a name="l00813"></a>00813 
<a name="l00814"></a>00814     <span class="comment">// Does this account already have a character with this name?</span>
<a name="l00815"></a>00815     clist = client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>();
<a name="l00816"></a>00816     <span class="keywordflow">for</span> ( ci = clist.begin(); ci != clist.end(); ci++ )
<a name="l00817"></a>00817     {
<a name="l00818"></a>00818         <span class="keywordflow">if</span> ( cmd == *ci )
<a name="l00819"></a>00819         {
<a name="l00820"></a>00820             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a5e1e29742895d29da95e515a1d6ba306" title="String sent if an account tries to create a duplicate character name.">CFG_STR_CHR_NAME_EXISTS</a> );
<a name="l00821"></a>00821             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00822"></a>00822             <span class="keywordflow">return</span>;
<a name="l00823"></a>00823         }
<a name="l00824"></a>00824     }
<a name="l00825"></a>00825 
<a name="l00826"></a>00826     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )
<a name="l00827"></a>00827     {
<a name="l00828"></a>00828         chr = <span class="keyword">new</span> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>();
<a name="l00829"></a>00829         chr-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );
<a name="l00830"></a>00830 
<a name="l00831"></a>00831         <span class="keywordflow">if</span> ( !chr-&gt;<a class="code" href="classCharacter.xhtml#a829a28ec5f8573f3f53684ac4dcb75bb" title="Create a new character.">New</a>( cmd, <span class="keyword">false</span> ) )
<a name="l00832"></a>00832         {
<a name="l00833"></a>00833             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a373345c51838ac6812f368496b1e4ee0" title="String sent if an error occurs when first creating a new character.">CFG_STR_CHR_NEW_ERROR</a> );
<a name="l00834"></a>00834             chr-&gt;<a class="code" href="classCharacter.xhtml#a4f7ff295f5de0fa4f8fece0acb7aaa53" title="Unload a character from memory that was previously loaded via Character::New().">Delete</a>();
<a name="l00835"></a>00835             <span class="keywordflow">return</span>;
<a name="l00836"></a>00836         }
<a name="l00837"></a>00837 
<a name="l00838"></a>00838         client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( chr );
<a name="l00839"></a>00839     }
<a name="l00840"></a>00840     <span class="keywordflow">else</span>
<a name="l00841"></a>00841         chr = client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>();
<a name="l00842"></a>00842 
<a name="l00843"></a>00843     chr-&gt;<a class="code" href="classThing.xhtml#a69568f79edcdf1b0225f1b764a7ceb41" title="Sets the name of this Thing.">sName</a>( cmd );
<a name="l00844"></a>00844     <span class="comment">// Id for characters owned by accounts is account_name.character_name</span>
<a name="l00845"></a>00845     cid &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; chr-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>();
<a name="l00846"></a>00846     chr-&gt;<a class="code" href="classThing.xhtml#a946fbf68bcd90ea5b26f4cce0b37132b" title="Sets the id of this Thing.">sId</a>( cid.str() );
<a name="l00847"></a>00847 
<a name="l00848"></a>00848     <span class="comment">//All went well, generate the next input prompt</span>
<a name="l00849"></a>00849     chr-&gt;<a class="code" href="classCharacter.xhtml#a324f4ec56476961fd22781a1d4e381ed" title="Sets the creation states of this character from CHR_CREATION.">sCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2fa60dd40a9d310bba8b71b3d222b3fb19e">CHR_CREATION_NAME</a>, <span class="keyword">true</span> );
<a name="l00850"></a>00850     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
<a name="l00851"></a>00851     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00852"></a>00852 
<a name="l00853"></a>00853     <span class="keywordflow">return</span>;
<a name="l00854"></a>00854 }
<a name="l00855"></a>00855 
<a name="l00863"></a><a class="code" href="namespaceHandler.xhtml#ae5086bcf5857eb572beedd09158c3065">00863</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#ae5086bcf5857eb572beedd09158c3065" title="Select a new Character sex.">Handler::CharacterCreateSex</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00864"></a>00864 {
<a name="l00865"></a>00865     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00866"></a>00866     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00867"></a>00867 
<a name="l00868"></a>00868     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00869"></a>00869     {
<a name="l00870"></a>00870         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateSex()-&gt; called with NULL client&quot;</span> );
<a name="l00871"></a>00871         <span class="keywordflow">return</span>;
<a name="l00872"></a>00872     }
<a name="l00873"></a>00873 
<a name="l00874"></a>00874     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00875"></a>00875     {
<a name="l00876"></a>00876         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateSex()-&gt; called with NULL account&quot;</span> );
<a name="l00877"></a>00877         <span class="keywordflow">return</span>;
<a name="l00878"></a>00878     }
<a name="l00879"></a>00879 
<a name="l00880"></a>00880     <span class="comment">//Initial entry</span>
<a name="l00881"></a>00881     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00882"></a>00882     {
<a name="l00883"></a>00883         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
<a name="l00884"></a>00884         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Neutral&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa31f8167957e67d5ac64a9a8427193c70">CHR_SEX_NEUTRAL</a> ) );
<a name="l00885"></a>00885         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Female&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa3590fbec25a4afeb0080c29992209839">CHR_SEX_FEMALE</a> ) );
<a name="l00886"></a>00886         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Male&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fafbb9b9df511dcc3d7ac57a231162b06b">CHR_SEX_MALE</a> ) );
<a name="l00887"></a>00887         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00888"></a>00888 
<a name="l00889"></a>00889         <span class="keywordflow">return</span>;
<a name="l00890"></a>00890     }
<a name="l00891"></a>00891 
<a name="l00892"></a>00892     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l00893"></a>00893     stringstream( cmd ) &gt;&gt; val;
<a name="l00894"></a>00894 
<a name="l00895"></a>00895     <span class="keywordflow">if</span> ( val == <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fab22496f58898f1330966ed2adf3a0673">CHR_SEX_NONE</a> )
<a name="l00896"></a>00896     {
<a name="l00897"></a>00897         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l00898"></a>00898         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00899"></a>00899 
<a name="l00900"></a>00900         <span class="keywordflow">return</span>;
<a name="l00901"></a>00901     }
<a name="l00902"></a>00902 
<a name="l00903"></a>00903     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#add25d4f2e5c883884b6852f695e96851" title="Sets the sex of this character from CHR_SEX.">sSex</a>( val );
<a name="l00904"></a>00904 
<a name="l00905"></a>00905     <span class="comment">//All went well, generate the next input prompt</span>
<a name="l00906"></a>00906     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a324f4ec56476961fd22781a1d4e381ed" title="Sets the creation states of this character from CHR_CREATION.">sCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2faea2fb06a425bf49ffaf7a903a94f716c">CHR_CREATION_SEX</a>, <span class="keyword">true</span> );
<a name="l00907"></a>00907     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
<a name="l00908"></a>00908     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00909"></a>00909 
<a name="l00910"></a>00910     <span class="keywordflow">return</span>;
<a name="l00911"></a>00911 }
<a name="l00912"></a>00912 
<a name="l00920"></a><a class="code" href="namespaceHandler.xhtml#a97a198bfc72285b2aca4f36978db715e">00920</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a97a198bfc72285b2aca4f36978db715e" title="Main Character deletion confirmation.">Handler::CharacterDeleteConfirm</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00921"></a>00921 {
<a name="l00922"></a>00922     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00923"></a>00923 
<a name="l00924"></a>00924     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00925"></a>00925     {
<a name="l00926"></a>00926         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteConfirm()-&gt; called with NULL client&quot;</span> );
<a name="l00927"></a>00927         <span class="keywordflow">return</span>;
<a name="l00928"></a>00928     }
<a name="l00929"></a>00929 
<a name="l00930"></a>00930     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00931"></a>00931     {
<a name="l00932"></a>00932         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteConfirm()-&gt; called with NULL account&quot;</span> );
<a name="l00933"></a>00933         <span class="keywordflow">return</span>;
<a name="l00934"></a>00934     }
<a name="l00935"></a>00935 
<a name="l00936"></a>00936     <span class="comment">//Initial entry</span>
<a name="l00937"></a>00937     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00938"></a>00938     {
<a name="l00939"></a>00939         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#ac9fe0e7d763818abae21dcf3be8871b4" title="String sent to confirm the deletion of a character.">CFG_STR_CHR_DELETE_CONFIRM</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a> ) ) ) );
<a name="l00940"></a>00940         <span class="keywordflow">return</span>;
<a name="l00941"></a>00941     }
<a name="l00942"></a>00942 
<a name="l00943"></a>00943     <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( cmd ) == <span class="stringliteral">&quot;yes&quot;</span> &amp;&amp; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a52adabbe14150c629254c1a54aa03b17" title="Deletes a character name from the list of associated characters.">dCharacter</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a> ) ) )
<a name="l00944"></a>00944             client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff" title="Serialize the account data.">Serialize</a>();
<a name="l00945"></a>00945 
<a name="l00946"></a>00946     client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l00947"></a>00947 
<a name="l00948"></a>00948     <span class="comment">//Generate the next input prompt</span>
<a name="l00949"></a>00949     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l00950"></a>00950     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l00951"></a>00951 
<a name="l00952"></a>00952     <span class="keywordflow">return</span>;
<a name="l00953"></a>00953 }
<a name="l00954"></a>00954 
<a name="l00962"></a><a class="code" href="namespaceHandler.xhtml#afc470ec6e82b7a9a1560588a368734f9">00962</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#afc470ec6e82b7a9a1560588a368734f9" title="Main Character deletion menu.">Handler::CharacterDeleteMenuMain</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l00963"></a>00963 {
<a name="l00964"></a>00964     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00965"></a>00965     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>, val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00966"></a>00966     stringstream name;
<a name="l00967"></a>00967 
<a name="l00968"></a>00968     <span class="keywordflow">if</span> ( client == NULL )
<a name="l00969"></a>00969     {
<a name="l00970"></a>00970         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteMenuMain()-&gt; called with NULL client&quot;</span> );
<a name="l00971"></a>00971         <span class="keywordflow">return</span>;
<a name="l00972"></a>00972     }
<a name="l00973"></a>00973 
<a name="l00974"></a>00974     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l00975"></a>00975     {
<a name="l00976"></a>00976         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteMenuMain()-&gt; called with NULL account&quot;</span> );
<a name="l00977"></a>00977         <span class="keywordflow">return</span>;
<a name="l00978"></a>00978     }
<a name="l00979"></a>00979 
<a name="l00980"></a>00980     <span class="comment">//Initial entry</span>
<a name="l00981"></a>00981     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l00982"></a>00982     {
<a name="l00983"></a>00983         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
<a name="l00984"></a>00984         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
<a name="l00985"></a>00985         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Delete an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
<a name="l00986"></a>00986         <span class="keywordflow">for</span> ( i = 0; i &lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().size(); i++ )
<a name="l00987"></a>00987         {
<a name="l00988"></a>00988             name &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i];
<a name="l00989"></a>00989 
<a name="l00990"></a>00990             <span class="keywordflow">if</span> ( !<a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">CheckPlaying</a>( name.str() ) )
<a name="l00991"></a>00991                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, i+1, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i] ) ) );
<a name="l00992"></a>00992         }
<a name="l00993"></a>00993         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Back&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406af6b220c6eba0e7e51eab8ff16f6e735b">ACT_MENU_CHARACTER_DELETE_BACK</a> ) );
<a name="l00994"></a>00994         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l00995"></a>00995         <span class="keywordflow">return</span>;
<a name="l00996"></a>00996     }
<a name="l00997"></a>00997 
<a name="l00998"></a>00998     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l00999"></a>00999     stringstream( cmd ) &gt;&gt; val;
<a name="l01000"></a>01000 
<a name="l01001"></a>01001     <span class="comment">// Handle 1 through CFG_ACT_CHARACTER_MAX dynamically</span>
<a name="l01002"></a>01002     <span class="keywordflow">if</span> ( val &gt;= 1 &amp;&amp; val &lt;= <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> )
<a name="l01003"></a>01003     {
<a name="l01004"></a>01004         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a>, client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[val-1] );
<a name="l01005"></a>01005         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a235dd6ae36a9da520e4edd2bcca0a15a">SOC_STATE_CHARACTER_DELETE_CONFIRM</a> );
<a name="l01006"></a>01006         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01007"></a>01007 
<a name="l01008"></a>01008         <span class="keywordflow">return</span>;
<a name="l01009"></a>01009     }
<a name="l01010"></a>01010 
<a name="l01011"></a>01011     <span class="keywordflow">switch</span>( val )
<a name="l01012"></a>01012     {
<a name="l01013"></a>01013         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406af6b220c6eba0e7e51eab8ff16f6e735b">ACT_MENU_CHARACTER_DELETE_BACK</a>:
<a name="l01014"></a>01014             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l01015"></a>01015             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01016"></a>01016         <span class="keywordflow">break</span>;
<a name="l01017"></a>01017 
<a name="l01018"></a>01018         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406afdc50f2f7f9ba2774cd77c44d48ed67a">ACT_MENU_CHARACTER_DELETE_INVALID</a>:
<a name="l01019"></a>01019         <span class="keywordflow">default</span>:
<a name="l01020"></a>01020             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l01021"></a>01021             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l01022"></a>01022         <span class="keywordflow">break</span>;
<a name="l01023"></a>01023     }
<a name="l01024"></a>01024 
<a name="l01025"></a>01025     <span class="keywordflow">return</span>;
<a name="l01026"></a>01026 }
<a name="l01027"></a>01027 
<a name="l01035"></a><a class="code" href="namespaceHandler.xhtml#a02b1b954749641ab646f6548a5360d3b">01035</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a02b1b954749641ab646f6548a5360d3b" title="Main Character load menu.">Handler::CharacterLoadMenuMain</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01036"></a>01036 {
<a name="l01037"></a>01037     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01038"></a>01038     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>, val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l01039"></a>01039     stringstream name;
<a name="l01040"></a>01040 
<a name="l01041"></a>01041     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01042"></a>01042     {
<a name="l01043"></a>01043         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterLoadMenuMain()-&gt; called with NULL client&quot;</span> );
<a name="l01044"></a>01044         <span class="keywordflow">return</span>;
<a name="l01045"></a>01045     }
<a name="l01046"></a>01046 
<a name="l01047"></a>01047     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l01048"></a>01048     {
<a name="l01049"></a>01049         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterLoadMenuMain()-&gt; called with NULL account&quot;</span> );
<a name="l01050"></a>01050         <span class="keywordflow">return</span>;
<a name="l01051"></a>01051     }
<a name="l01052"></a>01052 
<a name="l01053"></a>01053     <span class="comment">//Initial entry</span>
<a name="l01054"></a>01054     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l01055"></a>01055     {
<a name="l01056"></a>01056         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
<a name="l01057"></a>01057         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
<a name="l01058"></a>01058         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Load an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
<a name="l01059"></a>01059         <span class="keywordflow">for</span> ( i = 0; i &lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().size(); i++ )
<a name="l01060"></a>01060         {
<a name="l01061"></a>01061             name &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i];
<a name="l01062"></a>01062 
<a name="l01063"></a>01063             <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">CheckPlaying</a>( name.str() ) )
<a name="l01064"></a>01064                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) %s (Playing)&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, i+1, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i] ) ) );
<a name="l01065"></a>01065             <span class="keywordflow">else</span>
<a name="l01066"></a>01066                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, i+1, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i] ) ) );
<a name="l01067"></a>01067         }
<a name="l01068"></a>01068         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Back&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406af6b220c6eba0e7e51eab8ff16f6e735b">ACT_MENU_CHARACTER_DELETE_BACK</a> ) );
<a name="l01069"></a>01069         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l01070"></a>01070         <span class="keywordflow">return</span>;
<a name="l01071"></a>01071     }
<a name="l01072"></a>01072 
<a name="l01073"></a>01073     <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
<a name="l01074"></a>01074     stringstream( cmd ) &gt;&gt; val;
<a name="l01075"></a>01075 
<a name="l01076"></a>01076     <span class="comment">// Handle 1 through CFG_ACT_CHARACTER_MAX dynamically</span>
<a name="l01077"></a>01077     <span class="keywordflow">if</span> ( val &gt;= 1 &amp;&amp; val &lt;= <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> )
<a name="l01078"></a>01078     {
<a name="l01079"></a>01079         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a>, client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[val-1] );
<a name="l01080"></a>01080         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7afa2695463879d6efdd681ec274ba2a1a">SOC_STATE_LOAD_CHARACTER</a> );
<a name="l01081"></a>01081         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01082"></a>01082 
<a name="l01083"></a>01083         <span class="keywordflow">return</span>;
<a name="l01084"></a>01084     }
<a name="l01085"></a>01085 
<a name="l01086"></a>01086     <span class="keywordflow">switch</span>( val )
<a name="l01087"></a>01087     {
<a name="l01088"></a>01088         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#afcdd1d60dc3dfc7d964e68839e8e56a0a7b029112377ad70168cb643b701d35c2">ACT_MENU_CHARACTER_LOAD_BACK</a>:
<a name="l01089"></a>01089             client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l01090"></a>01090             <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01091"></a>01091         <span class="keywordflow">break</span>;
<a name="l01092"></a>01092 
<a name="l01093"></a>01093         <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#afcdd1d60dc3dfc7d964e68839e8e56a0a50dab0699eb2eb69f23fdb790949c203">ACT_MENU_CHARACTER_LOAD_INVALID</a>:
<a name="l01094"></a>01094         <span class="keywordflow">default</span>:
<a name="l01095"></a>01095             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l01096"></a>01096             client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
<a name="l01097"></a>01097         <span class="keywordflow">break</span>;
<a name="l01098"></a>01098     }
<a name="l01099"></a>01099 
<a name="l01100"></a>01100     <span class="keywordflow">return</span>;
<a name="l01101"></a>01101 }
<a name="l01102"></a>01102 
<a name="l01110"></a><a class="code" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb">01110</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb" title="Places the character loaded against the account into the game world.">Handler::EnterGame</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01111"></a>01111 {
<a name="l01112"></a>01112     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01113"></a>01113     <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* loc = NULL;
<a name="l01114"></a>01114 
<a name="l01115"></a>01115     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01116"></a>01116     {
<a name="l01117"></a>01117         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; called with NULL client&quot;</span> );
<a name="l01118"></a>01118         <span class="keywordflow">return</span>;
<a name="l01119"></a>01119     }
<a name="l01120"></a>01120 
<a name="l01121"></a>01121     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l01122"></a>01122     {
<a name="l01123"></a>01123         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; called with NULL account&quot;</span> );
<a name="l01124"></a>01124         <span class="keywordflow">return</span>;
<a name="l01125"></a>01125     }
<a name="l01126"></a>01126 
<a name="l01127"></a>01127     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )
<a name="l01128"></a>01128     {
<a name="l01129"></a>01129         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; called with NULL character&quot;</span> );
<a name="l01130"></a>01130         <span class="keywordflow">return</span>;
<a name="l01131"></a>01131     }
<a name="l01132"></a>01132 
<a name="l01133"></a>01133     <span class="keywordflow">if</span> ( ( loc = <a class="code" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f" title="Locates a Location associated with the game.">FindLocation</a>( <a class="code" href="config_8h.xhtml#a15d54727a6d76209f45b8ab72df3c5a1" title="The initial location to place characters in upon first entering the game.">CFG_LOC_ID_START</a>, <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> ) ) == NULL )
<a name="l01134"></a>01134     {
<a name="l01135"></a>01135         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; unable to locate CFG_LOC_ID_START&quot;</span> );
<a name="l01136"></a>01136         <span class="keywordflow">return</span>;
<a name="l01137"></a>01137     }
<a name="l01138"></a>01138 
<a name="l01139"></a>01139     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classThing.xhtml#a46dfe09e636299cd0bf1bc9c37aaebf4" title="Moves a Thing from within one Location to another Location.">Move</a>( loc ) )
<a name="l01140"></a>01140     {
<a name="l01141"></a>01141         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> );
<a name="l01142"></a>01142         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a39cce74e55709225a468520e72d0066a" title="String sent when a Character first enters the game world.">CFG_STR_GAME_ENTER</a> );
<a name="l01143"></a>01143     }
<a name="l01144"></a>01144     <span class="keywordflow">else</span>
<a name="l01145"></a>01145     {
<a name="l01146"></a>01146         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
<a name="l01147"></a>01147         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#af92052aa78c14fdfc2b580f1f03d624c" title="String sent when a server fault prevents a Character from entering the game world.">CFG_STR_GAME_ENTER_ERROR</a> );
<a name="l01148"></a>01148     }
<a name="l01149"></a>01149 
<a name="l01150"></a>01150     <span class="keywordflow">return</span>;
<a name="l01151"></a>01151 }
<a name="l01152"></a>01152 
<a name="l01160"></a><a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4">01160</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4" title="Select a new account name.">Handler::GetNewAccount</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01161"></a>01161 {
<a name="l01162"></a>01162     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01163"></a>01163 
<a name="l01164"></a>01164     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01165"></a>01165     {
<a name="l01166"></a>01166         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetNewAccount()-&gt; called with NULL client&quot;</span> );
<a name="l01167"></a>01167         <span class="keywordflow">return</span>;
<a name="l01168"></a>01168     }
<a name="l01169"></a>01169 
<a name="l01170"></a>01170     <span class="comment">//Initial entry or an invalid selection</span>
<a name="l01171"></a>01171     <span class="keywordflow">if</span> ( cmd.empty() &amp;&amp; !client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
<a name="l01172"></a>01172     {
<a name="l01173"></a>01173         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a180ca46bce137e0d17c8840effb7fbbe" title="String sent to request the user confirms their new account name.">CFG_STR_ACT_NAME_CONFIRM</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) );
<a name="l01174"></a>01174         <span class="keywordflow">return</span>;
<a name="l01175"></a>01175     }
<a name="l01176"></a>01176 
<a name="l01177"></a>01177     <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( cmd, <span class="stringliteral">&quot;no&quot;</span>, <span class="keyword">true</span> ) )
<a name="l01178"></a>01178     {
<a name="l01179"></a>01179         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l01180"></a>01180         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );
<a name="l01181"></a>01181     }
<a name="l01182"></a>01182     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( cmd, <span class="stringliteral">&quot;yes&quot;</span>, <span class="keyword">true</span> ) )
<a name="l01183"></a>01183         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a812001ad08d1204b69ffbaa7eaaba1c7">SOC_STATE_GET_NEW_PASSWORD</a> );
<a name="l01184"></a>01184     <span class="keywordflow">else</span>
<a name="l01185"></a>01185         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
<a name="l01186"></a>01186 
<a name="l01187"></a>01187     <span class="comment">//Generate the next input prompt</span>
<a name="l01188"></a>01188     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01189"></a>01189 
<a name="l01190"></a>01190     <span class="keywordflow">return</span>;
<a name="l01191"></a>01191 }
<a name="l01192"></a>01192 
<a name="l01200"></a><a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2">01200</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2" title="Create a new account.">Handler::GetNewPassword</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01201"></a>01201 {
<a name="l01202"></a>01202     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01203"></a>01203 
<a name="l01204"></a>01204     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01205"></a>01205     {
<a name="l01206"></a>01206         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetNewPassword()-&gt; called with NULL client&quot;</span> );
<a name="l01207"></a>01207         <span class="keywordflow">return</span>;
<a name="l01208"></a>01208     }
<a name="l01209"></a>01209 
<a name="l01210"></a>01210     <span class="comment">//Initial entry</span>
<a name="l01211"></a>01211     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l01212"></a>01212     {
<a name="l01213"></a>01213         <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">true</span> );
<a name="l01214"></a>01214         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a1d11ba4800f063ecd9329569236f95e7" title="String sent when a new account will be created.">CFG_STR_ACT_NEW</a> );
<a name="l01215"></a>01215         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l01216"></a>01216 
<a name="l01217"></a>01217         <span class="keywordflow">return</span>;
<a name="l01218"></a>01218     }
<a name="l01219"></a>01219 
<a name="l01220"></a>01220     <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#aa99a9bd0582d67d7098143471509b5a7" title="The minimum allowable length for an account password.">CFG_ACT_PASSWORD_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#a5347d13812efe93d42355d726e565ea6" title="The maximum allowable length for an account password.">CFG_ACT_PASSWORD_MAX_LEN</a> )
<a name="l01221"></a>01221     {
<a name="l01222"></a>01222         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l01223"></a>01223         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a8ca9b1580c268c16dbe8feddb330c025" title="String sent when an invalid account password is received.">CFG_STR_ACT_PASSWORD_INVALID</a> );
<a name="l01224"></a>01224         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a475d489333cb51b56a3f5cd5d76a738c" title="String additionally sent when an account password is invalid due to length.">CFG_STR_ACT_PASSWORD_LENGTH</a>, <a class="code" href="config_8h.xhtml#aa99a9bd0582d67d7098143471509b5a7" title="The minimum allowable length for an account password.">CFG_ACT_PASSWORD_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#a5347d13812efe93d42355d726e565ea6" title="The maximum allowable length for an account password.">CFG_ACT_PASSWORD_MAX_LEN</a> ) );
<a name="l01225"></a>01225         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l01226"></a>01226 
<a name="l01227"></a>01227         <span class="keywordflow">return</span>;
<a name="l01228"></a>01228     }
<a name="l01229"></a>01229 
<a name="l01230"></a>01230     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ).empty() )
<a name="l01231"></a>01231     {
<a name="l01232"></a>01232         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, crypt( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#adafa6fa32d5b637ea62db12aa35db6e0" title="Returns a salt value for use with crypt.">Utils::Salt</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) ) );
<a name="l01233"></a>01233         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a51eaea4b5ef702d560ee8d1037757650" title="String sent to request the user confirms their new account password.">CFG_STR_ACT_PASSWORD_CONFIRM</a> );
<a name="l01234"></a>01234 
<a name="l01235"></a>01235         <span class="keywordflow">return</span>;
<a name="l01236"></a>01236     }
<a name="l01237"></a>01237 
<a name="l01238"></a>01238     <span class="keywordflow">if</span> ( <a class="code" href="macros_8h.xhtml#ab8dd2a96f2d83fd315a460c2b0e7401c" title="Compare two the value of (check) to (old) based on (salt).">CKPASSWORD</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ), cmd, client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ) ) )
<a name="l01239"></a>01239         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a> );
<a name="l01240"></a>01240     <span class="keywordflow">else</span>
<a name="l01241"></a>01241     {
<a name="l01242"></a>01242         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
<a name="l01243"></a>01243         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a850c90516fb31c985fc8cbcc2ab52946" title="String sent when a new password confirmation fails.">CFG_STR_ACT_PASSWORD_MISMATCH</a> );
<a name="l01244"></a>01244         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l01245"></a>01245 
<a name="l01246"></a>01246         <span class="keywordflow">return</span>;
<a name="l01247"></a>01247     }
<a name="l01248"></a>01248 
<a name="l01249"></a>01249     <span class="comment">//Generate the next input prompt</span>
<a name="l01250"></a>01250     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01251"></a>01251 
<a name="l01252"></a>01252     <span class="keywordflow">return</span>;
<a name="l01253"></a>01253 }
<a name="l01254"></a>01254 
<a name="l01262"></a><a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6">01262</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6" title="Compare a received password against an existing account.">Handler::GetOldPassword</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01263"></a>01263 {
<a name="l01264"></a>01264     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01265"></a>01265 
<a name="l01266"></a>01266     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01267"></a>01267     {
<a name="l01268"></a>01268         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetOldPassword()-&gt; called with NULL client&quot;</span> );
<a name="l01269"></a>01269         <span class="keywordflow">return</span>;
<a name="l01270"></a>01270     }
<a name="l01271"></a>01271 
<a name="l01272"></a>01272     <span class="comment">//Initial entry</span>
<a name="l01273"></a>01273     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l01274"></a>01274     {
<a name="l01275"></a>01275         <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">true</span> );
<a name="l01276"></a>01276         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
<a name="l01277"></a>01277         <span class="keywordflow">return</span>;
<a name="l01278"></a>01278     }
<a name="l01279"></a>01279 
<a name="l01280"></a>01280     client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, crypt( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#adafa6fa32d5b637ea62db12aa35db6e0" title="Returns a salt value for use with crypt.">Utils::Salt</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) ) );
<a name="l01281"></a>01281     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> );
<a name="l01282"></a>01282 
<a name="l01283"></a>01283     <span class="comment">//Generate the next input prompt</span>
<a name="l01284"></a>01284     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01285"></a>01285 
<a name="l01286"></a>01286     <span class="keywordflow">return</span>;
<a name="l01287"></a>01287 }
<a name="l01288"></a>01288 
<a name="l01296"></a><a class="code" href="namespaceHandler.xhtml#ae70e4e50054c729c14493eafefe01b5c">01296</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#ae70e4e50054c729c14493eafefe01b5c" title="Load a character from the account to enter into the game with.">Handler::LoadCharacter</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01297"></a>01297 {
<a name="l01298"></a>01298     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01299"></a>01299     <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
<a name="l01300"></a>01300     stringstream id;
<a name="l01301"></a>01301 
<a name="l01302"></a>01302     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01303"></a>01303     {
<a name="l01304"></a>01304         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoadCharacter()-&gt; called with NULL client&quot;</span> );
<a name="l01305"></a>01305         <span class="keywordflow">return</span>;
<a name="l01306"></a>01306     }
<a name="l01307"></a>01307 
<a name="l01308"></a>01308     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
<a name="l01309"></a>01309     {
<a name="l01310"></a>01310         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoadCharacter()-&gt; called with NULL account&quot;</span> );
<a name="l01311"></a>01311         <span class="keywordflow">return</span>;
<a name="l01312"></a>01312     }
<a name="l01313"></a>01313 
<a name="l01314"></a>01314     chr = <span class="keyword">new</span> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>();
<a name="l01315"></a>01315     chr-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );
<a name="l01316"></a>01316     <span class="comment">// Id for characters owned by accounts is account_name.character_name</span>
<a name="l01317"></a>01317     <span class="keywordtype">id</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a> );
<a name="l01318"></a>01318 
<a name="l01319"></a>01319     <span class="comment">// Already in the game, so lets reconnect</span>
<a name="l01320"></a>01320     <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">CheckPlaying</a>( <span class="keywordtype">id</span>.str() ) )
<a name="l01321"></a>01321     {
<a name="l01322"></a>01322         <span class="keyword">delete</span> chr;
<a name="l01323"></a>01323 
<a name="l01324"></a>01324         client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a034ea76738957d5a74900e7d0a968b0c">SOC_STATE_RECONNECTING</a> );
<a name="l01325"></a>01325         chr = <a class="code" href="namespaceHandler.xhtml#ab2e9bf0a670cbf82be7a440065151516" title="Locates a Character within the game.">FindCharacter</a>( <span class="keywordtype">id</span>.str(), <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> );
<a name="l01326"></a>01326         <a class="code" href="namespaceHandler.xhtml#ae660d7a3f4c95db9639d74e965e82df6" title="Reconnects an existing in-game Character to a new SocketClient.">Reconnect</a>( client, chr );
<a name="l01327"></a>01327 
<a name="l01328"></a>01328         <span class="keywordflow">return</span>;
<a name="l01329"></a>01329     }
<a name="l01330"></a>01330     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !chr-&gt;<a class="code" href="classCharacter.xhtml#a829a28ec5f8573f3f53684ac4dcb75bb" title="Create a new character.">New</a>( <a class="code" href="namespaceUtils.xhtml#a3e236b07fd628bcaf2e7c5854dd2a281" title="Returns a string consisting of file.ext.">Utils::FileExt</a>( <span class="keywordtype">id</span>.str(), <a class="code" href="config_8h.xhtml#a2339c99068cee7dd8024d0097583cdee" title="File extension to use for player character files.">CFG_DAT_FILE_PLR_EXT</a> ), <span class="keyword">true</span> ) )
<a name="l01331"></a>01331     {
<a name="l01332"></a>01332         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::LoadCharacter()-&gt;Character::New()-&gt; returned false for character %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <span class="keywordtype">id</span>.str() ) );
<a name="l01333"></a>01333         <span class="keyword">delete</span> chr;
<a name="l01334"></a>01334         <span class="keywordflow">return</span>;
<a name="l01335"></a>01335     }
<a name="l01336"></a>01336 
<a name="l01337"></a>01337     client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( chr );
<a name="l01338"></a>01338     client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a593a3ddc02ef1c56b6e4000fa5580e6d">SOC_STATE_ENTER_GAME</a> );
<a name="l01339"></a>01339 
<a name="l01340"></a>01340     <span class="comment">//Generate the next input prompt</span>
<a name="l01341"></a>01341     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01342"></a>01342 
<a name="l01343"></a>01343     <span class="keywordflow">return</span>;
<a name="l01344"></a>01344 }
<a name="l01345"></a>01345 
<a name="l01353"></a><a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191">01353</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191" title="Send initial greeting and request for account name.">Handler::LoginScreen</a>( <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* client, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cmd, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; args )
<a name="l01354"></a>01354 {
<a name="l01355"></a>01355     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l01356"></a>01356 
<a name="l01357"></a>01357     <span class="keywordflow">if</span> ( client == NULL )
<a name="l01358"></a>01358     {
<a name="l01359"></a>01359         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginScreen()-&gt; called with NULL client&quot;</span> );
<a name="l01360"></a>01360         <span class="keywordflow">return</span>;
<a name="l01361"></a>01361     }
<a name="l01362"></a>01362 
<a name="l01363"></a>01363     <span class="comment">// Initial connection with no input yet received or previous name was invalid</span>
<a name="l01364"></a>01364     <span class="keywordflow">if</span> ( cmd.empty() )
<a name="l01365"></a>01365     {
<a name="l01366"></a>01366         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#af0eb185d6833661ec6d553871aba031e" title="String sent to request the user enters their account name.">CFG_STR_ACT_NAME_GET</a> );
<a name="l01367"></a>01367         <span class="keywordflow">return</span>;
<a name="l01368"></a>01368     }
<a name="l01369"></a>01369 
<a name="l01370"></a>01370     <span class="comment">// Only allow alphanumerics for the account name itself</span>
<a name="l01371"></a>01371     <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a36780f0aa565047ca0db53bda2aff5fc" title="Checks to ensure an input is entirely alphanumeric.">Utils::iAlNum</a>( cmd ) )
<a name="l01372"></a>01372     {
<a name="l01373"></a>01373         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l01374"></a>01374         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7790e568748a47be0bd52ead4a73375b" title="String additionally sent if an account name is invalid due to non-alphanumeric characters.">CFG_STR_ACT_NAME_ALNUM</a> );
<a name="l01375"></a>01375         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01376"></a>01376 
<a name="l01377"></a>01377         <span class="keywordflow">return</span>;
<a name="l01378"></a>01378     }
<a name="l01379"></a>01379 
<a name="l01380"></a>01380     <span class="comment">//Prevent prohibited names based on Server runtime configuration</span>
<a name="l01381"></a>01381     <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( client, cmd, <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7ace193a596bade4a7d0d31de31b2c563b">SVR_CFG_PROHIBITED_NAMES_ACCOUNT</a> ) )
<a name="l01382"></a>01382     {
<a name="l01383"></a>01383         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l01384"></a>01384         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aae9cb78e2deef0ffe39bdf49496fcec6" title="String additionally sent when an account name matches the prohibited names list.">CFG_STR_ACT_NAME_PROHIBITED</a> );
<a name="l01385"></a>01385         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01386"></a>01386 
<a name="l01387"></a>01387         <span class="keywordflow">return</span>;
<a name="l01388"></a>01388     }
<a name="l01389"></a>01389 
<a name="l01390"></a>01390     <span class="comment">//Prevent two new accounts being created with the same name</span>
<a name="l01391"></a>01391     <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88" title="Check to see if the current account is already being created.">Handler::CheckCreating</a>( client, cmd ) )
<a name="l01392"></a>01392     {
<a name="l01393"></a>01393         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l01394"></a>01394         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aae9cb78e2deef0ffe39bdf49496fcec6" title="String additionally sent when an account name matches the prohibited names list.">CFG_STR_ACT_NAME_PROHIBITED</a> );
<a name="l01395"></a>01395         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01396"></a>01396 
<a name="l01397"></a>01397         <span class="keywordflow">return</span>;
<a name="l01398"></a>01398     }
<a name="l01399"></a>01399 
<a name="l01400"></a>01400     <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#a4383bb3891f4ea262e0979ee17a161f6" title="The minimum allowable length for an account name.">CFG_ACT_NAME_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#ab3eaf7083d24131807f6d079fce51264" title="The maximum allowable length for an account name.">CFG_ACT_NAME_MAX_LEN</a> )
<a name="l01401"></a>01401     {
<a name="l01402"></a>01402         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l01403"></a>01403         client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#ad62726ae21a312dfa9d1512113283fee" title="String additionally sent when an account name is invalid due to length.">CFG_STR_ACT_NAME_LENGTH</a>, <a class="code" href="config_8h.xhtml#a4383bb3891f4ea262e0979ee17a161f6" title="The minimum allowable length for an account name.">CFG_ACT_NAME_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#ab3eaf7083d24131807f6d079fce51264" title="The maximum allowable length for an account name.">CFG_ACT_NAME_MAX_LEN</a> ) );
<a name="l01404"></a>01404         <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01405"></a>01405 
<a name="l01406"></a>01406         <span class="keywordflow">return</span>;
<a name="l01407"></a>01407     }
<a name="l01408"></a>01408 
<a name="l01409"></a>01409     <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
<a name="l01410"></a>01410     {
<a name="l01411"></a>01411         client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, cmd );
<a name="l01412"></a>01412 
<a name="l01413"></a>01413         <span class="keywordflow">switch</span> (  <a class="code" href="namespaceUtils.xhtml#ac41c505e3efccab8549238e6843b0d2e" title="Determines if a directory exists on disk.">Utils::DirExists</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, cmd ) ) )
<a name="l01414"></a>01414         {
<a name="l01415"></a>01415             <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88ae9b6a246539fb57fb810ac271b05d050">UTILS_RET_FALSE</a>:
<a name="l01416"></a>01416                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a60ba81eec35892e83b8430190320529f">SOC_STATE_GET_NEW_ACCOUNT</a> );
<a name="l01417"></a>01417             <span class="keywordflow">break</span>;
<a name="l01418"></a>01418 
<a name="l01419"></a>01419             <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88ae2722723183013676ca1f0f065fc0b24">UTILS_RET_TRUE</a>:
<a name="l01420"></a>01420                 client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad1df19251e972b85012bd03f5a12f47b">SOC_STATE_GET_OLD_PASSWORD</a> );
<a name="l01421"></a>01421             <span class="keywordflow">break</span>;
<a name="l01422"></a>01422 
<a name="l01423"></a>01423             <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88aa6afb4eb3fbede68c19c12bf3543045f">UTILS_RET_ERROR</a>:
<a name="l01424"></a>01424             <span class="keywordflow">default</span>:
<a name="l01425"></a>01425                 client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
<a name="l01426"></a>01426                 <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::LoginScreen()-&gt;Utils::DirExists()-&gt; returned UTILS_RET_ERROR for name: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ) );
<a name="l01427"></a>01427             <span class="keywordflow">break</span>;
<a name="l01428"></a>01428         }
<a name="l01429"></a>01429     }
<a name="l01430"></a>01430 
<a name="l01431"></a>01431     <span class="comment">//Generate the next input prompt</span>
<a name="l01432"></a>01432     <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
<a name="l01433"></a>01433 
<a name="l01434"></a>01434     <span class="keywordflow">return</span>;
<a name="l01435"></a>01435 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Wed May 1 2013 09:59:13 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
