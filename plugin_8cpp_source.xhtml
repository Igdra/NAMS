<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: plugin.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">plugin.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="plugin_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/***************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * NAMS - Not Another MUD Server                                           *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                         *</span>
<a name="l00005"></a>00005 <span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span>
<a name="l00006"></a>00006 <span class="comment"> * it under the terms of the GNU General Public License as published by    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span>
<a name="l00008"></a>00008 <span class="comment"> * (at your option) any later version.                                     *</span>
<a name="l00009"></a>00009 <span class="comment"> *                                                                         *</span>
<a name="l00010"></a>00010 <span class="comment"> * This program is distributed in the hope that it will be useful,         *</span>
<a name="l00011"></a>00011 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span>
<a name="l00012"></a>00012 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU General Public License for more details.                            *</span>
<a name="l00014"></a>00014 <span class="comment"> *                                                                         *</span>
<a name="l00015"></a>00015 <span class="comment"> * You should have received a copy of the GNU General Public License       *</span>
<a name="l00016"></a>00016 <span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span>
<a name="l00017"></a>00017 <span class="comment"> ***************************************************************************/</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="includes_8h.xhtml" title="All non-system includes that need to be within each .cpp file.">h/includes.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="class_8h.xhtml" title="All class declarations.">h/class.h</a>&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="plugin_8h.xhtml" title="The Plugin class.">h/plugin.h</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="comment">/* Core */</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="comment">/* Query */</span>
<a name="l00042"></a><a class="code" href="classPlugin.xhtml#a669870333a99490518fdd59054deaade">00042</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classPlugin.xhtml#a669870333a99490518fdd59054deaade" title="Return a bool value to tie into other object types.">Plugin::gBool</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; pos )<span class="keyword"> const</span>
<a name="l00043"></a>00043 <span class="keyword"></span>{
<a name="l00044"></a>00044     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00045"></a>00045 
<a name="l00046"></a>00046     <span class="keywordflow">if</span> ( pos &lt; uintmin_t || pos &gt;= <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a> )
<a name="l00047"></a>00047     {
<a name="l00048"></a>00048         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::gBool()-&gt; called with invalid pos: %lu&quot;</span>, pos );
<a name="l00049"></a>00049         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00050"></a>00050     }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052     <span class="keywordflow">return</span> <a class="code" href="classPlugin.xhtml#a7cdd8e10107ce364f5c3f50e45493878">m_bool</a>[pos];
<a name="l00053"></a>00053 }
<a name="l00054"></a>00054 
<a name="l00059"></a><a class="code" href="classPlugin.xhtml#abab79e7ca874fe2f6e4f5e02a40b8878">00059</a> <span class="keywordtype">void</span>* <a class="code" href="classPlugin.xhtml#abab79e7ca874fe2f6e4f5e02a40b8878" title="Return a pointer to the object that initialized this Plugin.">Plugin::gCaller</a>()<span class="keyword"> const</span>
<a name="l00060"></a>00060 <span class="keyword"></span>{
<a name="l00061"></a>00061     <span class="keywordflow">return</span> <a class="code" href="classPlugin.xhtml#ae688b96325fbf7a90cce90eda4687bbd">m_caller</a>;
<a name="l00062"></a>00062 }
<a name="l00063"></a>00063 
<a name="l00068"></a><a class="code" href="classPlugin.xhtml#af031147ea2e2d7e7f73f7edb9a5921ae">00068</a> <span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="classPlugin.xhtml#af031147ea2e2d7e7f73f7edb9a5921ae" title="Return the name of the object.">Plugin::gName</a>()<span class="keyword"> const</span>
<a name="l00069"></a>00069 <span class="keyword"></span>{
<a name="l00070"></a>00070     <span class="keywordflow">return</span> <a class="code" href="classPlugin.xhtml#ac59709f3ed595d8e26cb40131afe5541">m_name</a>;
<a name="l00071"></a>00071 }
<a name="l00072"></a>00072 
<a name="l00078"></a><a class="code" href="classPlugin.xhtml#a254c795a324dab944aa3a3f127414a87">00078</a> <span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="classPlugin.xhtml#a254c795a324dab944aa3a3f127414a87" title="Return a string value to tie into other object types.">Plugin::gString</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; pos )<span class="keyword"> const</span>
<a name="l00079"></a>00079 <span class="keyword"></span>{
<a name="l00080"></a>00080     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00081"></a>00081 
<a name="l00082"></a>00082     <span class="keywordflow">if</span> ( pos &lt; uintmin_t || pos &gt;= <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a> )
<a name="l00083"></a>00083     {
<a name="l00084"></a>00084         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::gString()-&gt; called with invalid pos: %lu&quot;</span>, pos );
<a name="l00085"></a>00085         <span class="keywordflow">return</span> string();
<a name="l00086"></a>00086     }
<a name="l00087"></a>00087 
<a name="l00088"></a>00088     <span class="keywordflow">return</span> <a class="code" href="classPlugin.xhtml#ad0402ff90752f7c96d5d30e9d68b0026">m_string</a>[pos];
<a name="l00089"></a>00089 }
<a name="l00090"></a>00090 
<a name="l00096"></a><a class="code" href="classPlugin.xhtml#aaabc3015bb64b744ac26c14318b9cb43">00096</a> <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> <a class="code" href="classPlugin.xhtml#aaabc3015bb64b744ac26c14318b9cb43" title="Return a uint_t value to tie into other object types.">Plugin::gUint</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; pos )<span class="keyword"> const</span>
<a name="l00097"></a>00097 <span class="keyword"></span>{
<a name="l00098"></a>00098     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00099"></a>00099 
<a name="l00100"></a>00100     <span class="keywordflow">if</span> ( pos &lt; uintmin_t || pos &gt;= <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a> )
<a name="l00101"></a>00101     {
<a name="l00102"></a>00102         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::gUint()-&gt; called with invalid pos: %lu&quot;</span>, pos );
<a name="l00103"></a>00103         <span class="keywordflow">return</span> <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00104"></a>00104     }
<a name="l00105"></a>00105 
<a name="l00106"></a>00106     <span class="keywordflow">return</span> <a class="code" href="classPlugin.xhtml#a8aa271a6826da6bdfa2a70638cb7539e">m_uint</a>[pos];
<a name="l00107"></a>00107 }
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 <span class="comment">/* Manipulate */</span>
<a name="l00117"></a><a class="code" href="classPlugin.xhtml#ad677e15fe0ce01a5306fbc74683dae85">00117</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classPlugin.xhtml#ad677e15fe0ce01a5306fbc74683dae85" title="Sets a bool value to tie into other object types.">Plugin::sBool</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; pos, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; val )
<a name="l00118"></a>00118 {
<a name="l00119"></a>00119     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00120"></a>00120 
<a name="l00121"></a>00121     <span class="keywordflow">if</span> ( pos &lt; uintmin_t || pos &gt;= <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a> )
<a name="l00122"></a>00122     {
<a name="l00123"></a>00123         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::sBool()-&gt; called with invalid pos: %lu&quot;</span>, pos );
<a name="l00124"></a>00124         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00125"></a>00125     }
<a name="l00126"></a>00126 
<a name="l00127"></a>00127     <a class="code" href="classPlugin.xhtml#a7cdd8e10107ce364f5c3f50e45493878">m_bool</a>[pos] = val;
<a name="l00128"></a>00128 
<a name="l00129"></a>00129     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00130"></a>00130 }
<a name="l00131"></a>00131 
<a name="l00138"></a><a class="code" href="classPlugin.xhtml#af51cf34cdaa8ce00ec838b26b465f859">00138</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classPlugin.xhtml#af51cf34cdaa8ce00ec838b26b465f859" title="Sets a pointer to the object that initialized this Plugin.">Plugin::sCaller</a>( <span class="keywordtype">void</span>* caller )
<a name="l00139"></a>00139 {
<a name="l00140"></a>00140     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00141"></a>00141 
<a name="l00142"></a>00142     <span class="keywordflow">if</span> ( !caller )
<a name="l00143"></a>00143     {
<a name="l00144"></a>00144         <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Plugin::sCaller()-&gt; called with NULL caller&quot;</span> );
<a name="l00145"></a>00145         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00146"></a>00146     }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148     <a class="code" href="classPlugin.xhtml#ae688b96325fbf7a90cce90eda4687bbd">m_caller</a> = caller;
<a name="l00149"></a>00149 
<a name="l00150"></a>00150     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00151"></a>00151 }
<a name="l00152"></a>00152 
<a name="l00160"></a><a class="code" href="classPlugin.xhtml#a663e073408a8eed98fad1d76142c3353">00160</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classPlugin.xhtml#a663e073408a8eed98fad1d76142c3353" title="Sets a string value to tie into other object types.">Plugin::sString</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; pos, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; val )
<a name="l00161"></a>00161 {
<a name="l00162"></a>00162     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00163"></a>00163 
<a name="l00164"></a>00164     <span class="keywordflow">if</span> ( pos &lt; uintmin_t || pos &gt;= <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a> )
<a name="l00165"></a>00165     {
<a name="l00166"></a>00166         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::sString()-&gt; called with invalid pos: %lu&quot;</span>, pos );
<a name="l00167"></a>00167         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00168"></a>00168     }
<a name="l00169"></a>00169 
<a name="l00170"></a>00170     <a class="code" href="classPlugin.xhtml#ad0402ff90752f7c96d5d30e9d68b0026">m_string</a>[pos] = val;
<a name="l00171"></a>00171 
<a name="l00172"></a>00172     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00173"></a>00173 }
<a name="l00174"></a>00174 
<a name="l00182"></a><a class="code" href="classPlugin.xhtml#ad40c46018ad9822b1c910b3f3b26d14c">00182</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classPlugin.xhtml#ad40c46018ad9822b1c910b3f3b26d14c" title="Sets a uint_t value to tie into other object types.">Plugin::sUint</a>( <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; pos, <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; val )
<a name="l00183"></a>00183 {
<a name="l00184"></a>00184     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00185"></a>00185 
<a name="l00186"></a>00186     <span class="keywordflow">if</span> ( pos &lt; uintmin_t || pos &gt;= <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a> )
<a name="l00187"></a>00187     {
<a name="l00188"></a>00188         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::sUint()-&gt; called with invalid pos: %lu&quot;</span>, pos );
<a name="l00189"></a>00189         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00190"></a>00190     }
<a name="l00191"></a>00191 
<a name="l00192"></a>00192     <span class="keywordflow">if</span> ( val &lt; uintmin_t || val &gt;= <a class="code" href="limits_8h.xhtml#a036884201058b0d86aae031fdbcfa16f" title="The maximum value of any uint_t variable.">uintmax_t</a> )
<a name="l00193"></a>00193     {
<a name="l00194"></a>00194         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Plugin::sUint()-&gt; called with invalid val: %lu&quot;</span>, val );
<a name="l00195"></a>00195         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00196"></a>00196     }
<a name="l00197"></a>00197 
<a name="l00198"></a>00198     <a class="code" href="classPlugin.xhtml#a8aa271a6826da6bdfa2a70638cb7539e">m_uint</a>[pos] = val;
<a name="l00199"></a>00199 
<a name="l00200"></a>00200     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00201"></a>00201 }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203 <span class="comment">/* Internal */</span>
<a name="l00209"></a><a class="code" href="classPlugin.xhtml#a3bf3ac47f4c7ad4a24629e487115a986">00209</a> <a class="code" href="classPlugin.xhtml#a3bf3ac47f4c7ad4a24629e487115a986" title="Constructor for the Plugin class.">Plugin::Plugin</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name, <span class="keyword">const</span> <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a>&amp; type )
<a name="l00210"></a>00210 {
<a name="l00211"></a>00211     <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = 0;
<a name="l00212"></a>00212 
<a name="l00213"></a>00213     <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a>; i++ )
<a name="l00214"></a>00214         <a class="code" href="classPlugin.xhtml#a7cdd8e10107ce364f5c3f50e45493878">m_bool</a>[i] = <span class="keyword">false</span>;
<a name="l00215"></a>00215     <a class="code" href="classPlugin.xhtml#ae688b96325fbf7a90cce90eda4687bbd">m_caller</a> = NULL;
<a name="l00216"></a>00216     <a class="code" href="classPlugin.xhtml#ac59709f3ed595d8e26cb40131afe5541">m_name</a> = name;
<a name="l00217"></a>00217     <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a>; i++ )
<a name="l00218"></a>00218         <a class="code" href="classPlugin.xhtml#ad0402ff90752f7c96d5d30e9d68b0026">m_string</a>[i].clear();
<a name="l00219"></a>00219     <a class="code" href="classPlugin.xhtml#a4fecbf827fa745b458c416340d609e34">m_type</a> = type;
<a name="l00220"></a>00220     <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="config_8h.xhtml#a52790e6995c0615283bfe5bfbe0b8660" title="The maximum number of elements for each data type array in a plugin.">CFG_PLG_MAX_ARR</a>; i++ )
<a name="l00221"></a>00221         <a class="code" href="classPlugin.xhtml#a8aa271a6826da6bdfa2a70638cb7539e">m_uint</a>[i] = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
<a name="l00222"></a>00222 
<a name="l00223"></a>00223     <span class="keywordflow">return</span>;
<a name="l00224"></a>00224 }
<a name="l00225"></a>00225 
<a name="l00229"></a><a class="code" href="classPlugin.xhtml#aee4cc1864a2afa84a9ad935153f3fe39">00229</a> <a class="code" href="classPlugin.xhtml#aee4cc1864a2afa84a9ad935153f3fe39" title="Destructor for the Plugin class.">Plugin::~Plugin</a>()
<a name="l00230"></a>00230 {
<a name="l00231"></a>00231     <span class="keywordflow">return</span>;
<a name="l00232"></a>00232 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Mar 17 2013 18:30:03 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
