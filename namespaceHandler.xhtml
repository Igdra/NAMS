<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: Handler Namespace Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Handler Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="namespaceHandler.xhtml" title="The Handler namespace contains process control functions.">Handler</a> namespace contains process control functions.  
</p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Core</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCharacter.xhtml">Character</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#ab2e9bf0a670cbf82be7a440065151516">FindCharacter</a> (const string &amp;name, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Locates a <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> within the game.  <a href="#ab2e9bf0a670cbf82be7a440065151516"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCommand.xhtml">Command</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d">FindCommand</a> (const string &amp;name)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Locates a <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> associated with the game.  <a href="#a02ba68c0c416219816c97189ea8bae4d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classLocation.xhtml">Location</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f">FindLocation</a> (const string &amp;name, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Locates a <a class="el" href="classLocation.xhtml" title="A physical location within the game world.">Location</a> associated with the game.  <a href="#a57dc60ce5522b41f1ab98b83de76779f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888">LoginHandler</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd=&quot;&quot;, const string &amp;args=&quot;&quot;)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Dispatches the appropriate menu based on client state.  <a href="#a139febc000c9d767a620708148e0c888"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Query</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88">CheckCreating</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;name)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check to see if the current account is already being created.  <a href="#a120400154c1559acfc874fe8a0bfbf88"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e">CheckPlaying</a> (const string &amp;name)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> is currently logged into the game and playing.  <a href="#aab2a2273860d63543809b878c7e40b6e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927">CheckProhibited</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;name, const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a name is on the server's prohibited list.  <a href="#a934fb4c3d6add91bc9e6e347b3270927"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Manipulate</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0">AttachAccount</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new account object, or load an existing one, with a name and password.  <a href="#a33a19d69ead678af81fbe96907eceaf0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a2e4ebf6ed049eb872aa4948d54c4932c">AttachCharacter</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to write a new character to disk after creation was completed.  <a href="#a2e4ebf6ed049eb872aa4948d54c4932c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#ae660d7a3f4c95db9639d74e965e82df6">Reconnect</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, <a class="el" href="classCharacter.xhtml">Character</a> *character)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Reconnects an existing in-game <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> to a new <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>.  <a href="#ae660d7a3f4c95db9639d74e965e82df6"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Internal</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a73ed6064f2698dbffb5f4c247a02b661">AccountMenuMain</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Send initial account interface menu.  <a href="#a73ed6064f2698dbffb5f4c247a02b661"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#ad04998a7a6ece2486bc441052a57c2d7">CharacterCreateMenuMain</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Main <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> creation menu.  <a href="#ad04998a7a6ece2486bc441052a57c2d7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#ab5889a65de2794129b375ec39ae923ae">CharacterCreateName</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a new <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> name.  <a href="#ab5889a65de2794129b375ec39ae923ae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#ae5086bcf5857eb572beedd09158c3065">CharacterCreateSex</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a new <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> sex.  <a href="#ae5086bcf5857eb572beedd09158c3065"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a97a198bfc72285b2aca4f36978db715e">CharacterDeleteConfirm</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Main <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> deletion confirmation.  <a href="#a97a198bfc72285b2aca4f36978db715e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#afc470ec6e82b7a9a1560588a368734f9">CharacterDeleteMenuMain</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Main <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> deletion menu.  <a href="#afc470ec6e82b7a9a1560588a368734f9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a02b1b954749641ab646f6548a5360d3b">CharacterLoadMenuMain</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Main <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> load menu.  <a href="#a02b1b954749641ab646f6548a5360d3b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb">EnterGame</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Places the character loaded against the account into the game world.  <a href="#a571519b889d3750c63b9dc3418449bcb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4">GetNewAccount</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a new account name.  <a href="#a00bc24564bfd267e0329643c569da1e4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2">GetNewPassword</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new account.  <a href="#a744adadcf407cdb3a9c33365afd5a7c2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6">GetOldPassword</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare a received password against an existing account.  <a href="#adfe13cc9748392348f3941656a1323b6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#ae70e4e50054c729c14493eafefe01b5c">LoadCharacter</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Load a character from the account to enter into the game with.  <a href="#ae70e4e50054c729c14493eafefe01b5c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191">LoginScreen</a> (<a class="el" href="classSocketClient.xhtml">SocketClient</a> *client, const string &amp;cmd, const string &amp;args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Send initial greeting and request for account name.  <a href="#a44b41bf69fdc6e615a029bea34910191"></a><br/></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a73ed6064f2698dbffb5f4c247a02b661"></a><!-- doxytag: member="Handler::AccountMenuMain" ref="a73ed6064f2698dbffb5f4c247a02b661" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a73ed6064f2698dbffb5f4c247a02b661">Handler::AccountMenuMain</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00533">533</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::MenuScreen()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::MenuScreen()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Load an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754a32e2a0f99ad782295ee8dca29e42">ACT_MENU_MAIN_CHARACTER_LOAD</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Create a new character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201beaa36c938e86e6e01a12cc0da8e3e1311e">ACT_MENU_MAIN_CHARACTER_CREATE</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Delete an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea078a8c5e5b8734507c325d4df2a6e969">ACT_MENU_MAIN_CHARACTER_DELETE</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Quit&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea48e5d6fc0c721f034a7dbd3de9e6f960">ACT_MENU_MAIN_QUIT</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
    stringstream( cmd ) &gt;&gt; val;

    <span class="keywordflow">switch</span>( val )
    {
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754a32e2a0f99ad782295ee8dca29e42">ACT_MENU_MAIN_CHARACTER_LOAD</a>:
            <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().empty() )
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ae26279296a5e34c7f6c2ea6c0a8e8c2b">SOC_STATE_CHARACTER_LOAD_MENU</a> );
                <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
            }
            <span class="keywordflow">else</span>
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a907d5e507702d28e05c3dafdb3435e16" title="String sent if the account has no characters to delete.">CFG_STR_ACT_CHR_NONE</a> );
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
            }
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201beaa36c938e86e6e01a12cc0da8e3e1311e">ACT_MENU_MAIN_CHARACTER_CREATE</a>:
            <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().size() &lt; <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> )
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
                <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
            }
            <span class="keywordflow">else</span>
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#af10b8baa26f45cbe37dacb6ccda5c138" title="String sent if the account character limit has been reached.">CFG_STR_ACT_CHR_LIMIT</a>, <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> ) );
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
            }
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea078a8c5e5b8734507c325d4df2a6e969">ACT_MENU_MAIN_CHARACTER_DELETE</a>:
            <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().empty() )
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a4253f1f671b85b03cf8d7394ec3edf33">SOC_STATE_CHARACTER_DELETE_MENU</a> );
                <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
            }
            <span class="keywordflow">else</span>
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a907d5e507702d28e05c3dafdb3435e16" title="String sent if the account has no characters to delete.">CFG_STR_ACT_CHR_NONE</a> );
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
            }
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea48e5d6fc0c721f034a7dbd3de9e6f960">ACT_MENU_MAIN_QUIT</a>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#ad8ab017dd47d5e8b20ad30f72773a759" title="Flags a client as quitting to break out of nested loops.">Quit</a>();
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a35686847c6414ade8cf4bb4a950201bea754b81d889ca855ffcd87b628aaa88b0">ACT_MENU_MAIN_INVALID</a>:
        <span class="keywordflow">default</span>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">break</span>;
    }

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a73ed6064f2698dbffb5f4c247a02b661_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a73ed6064f2698dbffb5f4c247a02b661_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a33a19d69ead678af81fbe96907eceaf0"></a><!-- doxytag: member="Handler::AttachAccount" ref="a33a19d69ead678af81fbe96907eceaf0" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0">Handler::AttachAccount</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00391">391</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>* account = NULL;
    <span class="keywordtype">bool</span> exists = <span class="keyword">false</span>;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachAccount()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() == <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a> )
        exists = <span class="keyword">false</span>;
    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() == <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> )
        exists = <span class="keyword">true</span>;
    <span class="keywordflow">else</span>
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::AttachAccount()-&gt; called with invalid client state: %lu&quot;</span>, client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() );
        <span class="keywordflow">return</span>;
    }

    <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">false</span> );

    account = <span class="keyword">new</span> <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>();
    <span class="keywordflow">if</span> ( !account-&gt;<a class="code" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf" title="Create a new account.">New</a>( client, exists ) )
    {
        account-&gt;<a class="code" href="classAccount.xhtml#aa82e62e930fb3a8ac58a4592f323db75" title="Unload an account from memory that was previously loaded via Account::New().">Delete</a>();

        <span class="keywordflow">if</span> ( exists )
            <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">FindCommand</a>( <span class="stringliteral">&quot;quit&quot;</span> )-&gt;<a class="code" href="classCommand.xhtml#a6448d432978113719bfdfa3783da5106" title="Execute a Plugin object&#39;s primary function.">Run</a>( client );
        <span class="keywordflow">else</span>
        {
            client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, <span class="stringliteral">&quot;&quot;</span> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a4c33c190efd41cbd350a341e0942fe20" title="String sent if an error occurs when first creating a new account.">CFG_STR_ACT_NEW_ERROR</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
        }

        <span class="keywordflow">return</span>;
    }

    <span class="comment">// All went well, off to the account menu</span>
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a33a19d69ead678af81fbe96907eceaf0_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a33a19d69ead678af81fbe96907eceaf0_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a2e4ebf6ed049eb872aa4948d54c4932c"></a><!-- doxytag: member="Handler::AttachCharacter" ref="a2e4ebf6ed049eb872aa4948d54c4932c" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a2e4ebf6ed049eb872aa4948d54c4932c">Handler::AttachCharacter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00448">448</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachCharacter()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachCharacter()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::AttachCharacter()-&gt; called with NULL character&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Save the new character then the delete the in-memory copy and reset the active account character</span>
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#abce4ced500d49ec0ed48bd3049c0bb4e" title="Adds a character name to the list of associated characters.">aCharacter</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() );
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff" title="Serialize the account data.">Serialize</a>();
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#acbf271cc1d8bf64bd5bd4c286f508f67" title="Serialize the character data.">Serialize</a>();
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a4f7ff295f5de0fa4f8fece0acb7aaa53" title="Unload a character from memory that was previously loaded via Character::New().">Delete</a>();
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a9d26a3cae2d36c829a42cab3d5c9fe05" title="This will set the m_character pointer to NULL, invalidating any references. This exists outside of sC...">ClearCharacter</a>();

    <span class="comment">// All went well, off to the account menu</span>
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a2e4ebf6ed049eb872aa4948d54c4932c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a2e4ebf6ed049eb872aa4948d54c4932c_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad04998a7a6ece2486bc441052a57c2d7"></a><!-- doxytag: member="Handler::CharacterCreateMenuMain" ref="ad04998a7a6ece2486bc441052a57c2d7" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#ad04998a7a6ece2486bc441052a57c2d7">Handler::CharacterCreateMenuMain</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00629">629</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>, val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
    stringstream menu1, menu2;
    <span class="keywordtype">bool</span> done = <span class="keyword">true</span>;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateMenu()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateMenu()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Create a new character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );

        <span class="comment">// If we&#39;re mid-creation, update the menu items to show current selections</span>
        <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() != NULL )
        {
            <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad3d3db7ed1d44cf53fb7ae4b991a1c18" title="Gets the creation states of this character from CHR_CREATION.">gCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2fa60dd40a9d310bba8b71b3d222b3fb19e">CHR_CREATION_NAME</a> ) )
                menu1 &lt;&lt; <span class="stringliteral">&quot;(is: &quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;
            <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad3d3db7ed1d44cf53fb7ae4b991a1c18" title="Gets the creation states of this character from CHR_CREATION.">gCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2faea2fb06a425bf49ffaf7a903a94f716c">CHR_CREATION_SEX</a> ) )
                <span class="keywordflow">switch</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a3687af665ff3b9fe94176ecde8a7beca" title="Returns the sex of this character from CHR_SEX.">gSex</a>() )
                {
                    <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa31f8167957e67d5ac64a9a8427193c70">CHR_SEX_NEUTRAL</a>: menu2 &lt;&lt; <span class="stringliteral">&quot;(is: neutral)&quot;</span>; <span class="keywordflow">break</span>;
                    <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa3590fbec25a4afeb0080c29992209839">CHR_SEX_FEMALE</a>:  menu2 &lt;&lt; <span class="stringliteral">&quot;(is: female)&quot;</span>;  <span class="keywordflow">break</span>;
                    <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fafbb9b9df511dcc3d7ac57a231162b06b">CHR_SEX_MALE</a>:    menu2 &lt;&lt; <span class="stringliteral">&quot;(is: male)&quot;</span>;    <span class="keywordflow">break</span>;
                }
            <span class="comment">// Ensure creation was completed</span>
            <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2faf58cf9eab72ac90c69b2030b99d6c8c1">MAX_CHR_CREATION</a>; i++ )
                <span class="keywordflow">if</span> ( !client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#ad3d3db7ed1d44cf53fb7ae4b991a1c18" title="Gets the creation states of this character from CHR_CREATION.">gCreation</a>( i ) )
                {
                    done = <span class="keyword">false</span>;
                    <span class="keywordflow">break</span>;
                }
        }
        <span class="keywordflow">else</span>
            done = <span class="keyword">false</span>;

        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Set name %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca6252a0047a36b83e3a0158de8ca089d1">ACT_MENU_CHARACTER_CREATE_NAME</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( menu1.str() ) ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Set sex %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca5357bc539d713a944c85a30517199902">ACT_MENU_CHARACTER_CREATE_SEX</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( menu2.str() ) ) );
        <span class="keywordflow">if</span> ( done )
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Finish Creation&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcab56da7bdbf749b2a0ca432b1935efe5e">ACT_MENU_CHARACTER_CREATE_FINISH</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Back&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca917eb8927a034d85ab875216abb49c3f">ACT_MENU_CHARACTER_CREATE_BACK</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
    stringstream( cmd ) &gt;&gt; val;

    <span class="keywordflow">switch</span>( val )
    {
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca6252a0047a36b83e3a0158de8ca089d1">ACT_MENU_CHARACTER_CREATE_NAME</a>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0ce2c68c74dd615e11036b1c7109de8a">SOC_STATE_CHARACTER_CREATE_NAME</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca5357bc539d713a944c85a30517199902">ACT_MENU_CHARACTER_CREATE_SEX</a>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a2bc7da7824985417f2ea284bac10981a">SOC_STATE_CHARACTER_CREATE_SEX</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcab56da7bdbf749b2a0ca432b1935efe5e">ACT_MENU_CHARACTER_CREATE_FINISH</a>:
            <span class="keywordflow">if</span> ( done )
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a3ba35f86a8c8b1e10a6bd24db6f990fb">SOC_STATE_CHARACTER_CREATE_FINISH</a> );
                <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
            }
            <span class="keywordflow">else</span>
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
            }
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bca917eb8927a034d85ab875216abb49c3f">ACT_MENU_CHARACTER_CREATE_BACK</a>:
            <span class="comment">// Clear out any partially created characters</span>
            <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() != NULL )
            {
                client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a4f7ff295f5de0fa4f8fece0acb7aaa53" title="Unload a character from memory that was previously loaded via Character::New().">Delete</a>();
                client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a9d26a3cae2d36c829a42cab3d5c9fe05" title="This will set the m_character pointer to NULL, invalidating any references. This exists outside of sC...">ClearCharacter</a>();
            }
            client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ad9d0db8268c6b6b064bcb355963c04bcaf2b0e2301eaa9639f7b43d86cd050e0c">ACT_MENU_CHARACTER_CREATE_INVALID</a>:
        <span class="keywordflow">default</span>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">break</span>;
    }

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ad04998a7a6ece2486bc441052a57c2d7_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ad04998a7a6ece2486bc441052a57c2d7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab5889a65de2794129b375ec39ae923ae"></a><!-- doxytag: member="Handler::CharacterCreateName" ref="ab5889a65de2794129b375ec39ae923ae" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#ab5889a65de2794129b375ec39ae923ae">Handler::CharacterCreateName</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00743">743</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
    vector&lt;string&gt; clist;
    vector&lt;string&gt;::iterator ci;
    stringstream cid;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateName()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateName()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ae3b715a473d93fd41ba803b7afe6ecfc" title="String sent to request the user enters their character name.">CFG_STR_CHR_NAME_GET</a> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Only allow alphanumerics for the character name itself</span>
    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a36780f0aa565047ca0db53bda2aff5fc" title="Checks to ensure an input is entirely alphanumeric.">Utils::iAlNum</a>( cmd ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ab5c626cadbd3bb41c02ed643fb5f1d7a" title="String sent when an invalid character name is received.">CFG_STR_CHR_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a0b57af6edbf0a82f5cfa3a37a334481b" title="String additionally sent if a character name is invalid due to non-alphanumeric characters.">CFG_STR_CHR_NAME_ALNUM</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Prevent prohibited names based on Server runtime configuration</span>
    <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( client, cmd, <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a0b97df46a200cf2a2446c483fad0c6c6">SVR_CFG_PROHIBITED_NAMES_CHARACTER</a> ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ab5c626cadbd3bb41c02ed643fb5f1d7a" title="String sent when an invalid character name is received.">CFG_STR_CHR_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#afb76a729d67483462b07902009a25b00" title="String additionally sent when a character name matches the prohibited names list.">CFG_STR_CHR_NAME_PROHIBITED</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#a1bd78ab35ca3b3905154491d213bacee" title="The minimum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#a3137447c34477fc0afc6ad3865a58c13" title="The maximum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MAX_LEN</a> )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#ab5c626cadbd3bb41c02ed643fb5f1d7a" title="String sent when an invalid character name is received.">CFG_STR_CHR_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a03612dee735429e3bdf021e5ab1dad68" title="String additionally sent when a character name is invalid due to length.">CFG_STR_CHR_NAME_LENGTH</a>, <a class="code" href="config_8h.xhtml#a1bd78ab35ca3b3905154491d213bacee" title="The minimum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#a3137447c34477fc0afc6ad3865a58c13" title="The maximum allowable length for a thing name when the thing is associated to an account.">CFG_THG_NAME_MAX_LEN</a> ) );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Does this account already have a character with this name?</span>
    clist = client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>();
    <span class="keywordflow">for</span> ( ci = clist.begin(); ci != clist.end(); ci++ )
    {
        <span class="keywordflow">if</span> ( cmd == *ci )
        {
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a5e1e29742895d29da95e515a1d6ba306" title="String sent if an account tries to create a duplicate character name.">CFG_STR_CHR_NAME_EXISTS</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
            <span class="keywordflow">return</span>;
        }
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )
    {
        chr = <span class="keyword">new</span> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>();
        chr-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );

        <span class="keywordflow">if</span> ( !chr-&gt;<a class="code" href="classCharacter.xhtml#af7147ddb783cc1ebf56c21a27dfbed4a" title="Create a new character.">New</a>( client-&gt;<a class="code" href="classSocket.xhtml#a7d51c27fcddb7bddf1a3beb0be3c5abe" title="Returns the Server object associated to this SocketServer.">gServer</a>(), cmd, false ) )
        {
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a373345c51838ac6812f368496b1e4ee0" title="String sent if an error occurs when first creating a new character.">CFG_STR_CHR_NEW_ERROR</a> );
            chr-&gt;<a class="code" href="classCharacter.xhtml#a4f7ff295f5de0fa4f8fece0acb7aaa53" title="Unload a character from memory that was previously loaded via Character::New().">Delete</a>();
            <span class="keywordflow">return</span>;
        }

        client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( chr );
    }
    <span class="keywordflow">else</span>
        chr = client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>();

    chr-&gt;<a class="code" href="classThing.xhtml#a69568f79edcdf1b0225f1b764a7ceb41" title="Sets the name of this Thing.">sName</a>( cmd );
    <span class="comment">// Id for characters owned by accounts is account_name.character_name</span>
    cid &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; chr-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>();
    chr-&gt;<a class="code" href="classThing.xhtml#a946fbf68bcd90ea5b26f4cce0b37132b" title="Sets the id of this Thing.">sId</a>( cid.str() );

    <span class="comment">//All went well, generate the next input prompt</span>
    chr-&gt;<a class="code" href="classCharacter.xhtml#a324f4ec56476961fd22781a1d4e381ed" title="Sets the creation states of this character from CHR_CREATION.">sCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2fa60dd40a9d310bba8b71b3d222b3fb19e">CHR_CREATION_NAME</a>, <span class="keyword">true</span> );
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ab5889a65de2794129b375ec39ae923ae_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ab5889a65de2794129b375ec39ae923ae_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae5086bcf5857eb572beedd09158c3065"></a><!-- doxytag: member="Handler::CharacterCreateSex" ref="ae5086bcf5857eb572beedd09158c3065" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#ae5086bcf5857eb572beedd09158c3065">Handler::CharacterCreateSex</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00848">848</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateSex()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterCreateSex()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Neutral&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa31f8167957e67d5ac64a9a8427193c70">CHR_SEX_NEUTRAL</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Female&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fa3590fbec25a4afeb0080c29992209839">CHR_SEX_FEMALE</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Male&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fafbb9b9df511dcc3d7ac57a231162b06b">CHR_SEX_MALE</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );

        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
    stringstream( cmd ) &gt;&gt; val;

    <span class="keywordflow">if</span> ( val == <a class="code" href="enum_8h.xhtml#a5a21b8ad48605bcc6bd9d5091c46dc1fab22496f58898f1330966ed2adf3a0673">CHR_SEX_NONE</a> )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );

        <span class="keywordflow">return</span>;
    }

    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#add25d4f2e5c883884b6852f695e96851" title="Sets the sex of this character from CHR_SEX.">sSex</a>( val );

    <span class="comment">//All went well, generate the next input prompt</span>
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a324f4ec56476961fd22781a1d4e381ed" title="Sets the creation states of this character from CHR_CREATION.">sCreation</a>( <a class="code" href="enum_8h.xhtml#a9f0bc0c7c0d28ca194ebb36d4a6d1c2faea2fb06a425bf49ffaf7a903a94f716c">CHR_CREATION_SEX</a>, <span class="keyword">true</span> );
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a> );
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ae5086bcf5857eb572beedd09158c3065_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ae5086bcf5857eb572beedd09158c3065_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a97a198bfc72285b2aca4f36978db715e"></a><!-- doxytag: member="Handler::CharacterDeleteConfirm" ref="a97a198bfc72285b2aca4f36978db715e" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a97a198bfc72285b2aca4f36978db715e">Handler::CharacterDeleteConfirm</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00905">905</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteConfirm()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteConfirm()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#ac9fe0e7d763818abae21dcf3be8871b4" title="String sent to confirm the deletion of a character.">CFG_STR_CHR_DELETE_CONFIRM</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a> ) ) ) );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( cmd ) == <span class="stringliteral">&quot;yes&quot;</span> &amp;&amp; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a52adabbe14150c629254c1a54aa03b17" title="Deletes a character name from the list of associated characters.">dCharacter</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a> ) ) )
            client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a87dfcb1fd6c275ea89ec6f279e7ee8ff" title="Serialize the account data.">Serialize</a>();

    client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a>, <span class="stringliteral">&quot;&quot;</span> );

    <span class="comment">//Generate the next input prompt</span>
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a97a198bfc72285b2aca4f36978db715e_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a97a198bfc72285b2aca4f36978db715e_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="afc470ec6e82b7a9a1560588a368734f9"></a><!-- doxytag: member="Handler::CharacterDeleteMenuMain" ref="afc470ec6e82b7a9a1560588a368734f9" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#afc470ec6e82b7a9a1560588a368734f9">Handler::CharacterDeleteMenuMain</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00947">947</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>, val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
    stringstream name;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteMenuMain()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterDeleteMenuMain()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Delete an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
        <span class="keywordflow">for</span> ( i = 0; i &lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().size(); i++ )
        {
            name &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i];

            <span class="keywordflow">if</span> ( !<a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">CheckPlaying</a>( name.str() ) )
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, i+1, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i] ) ) );
        }
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Back&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406af6b220c6eba0e7e51eab8ff16f6e735b">ACT_MENU_CHARACTER_DELETE_BACK</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
    stringstream( cmd ) &gt;&gt; val;

    <span class="comment">// Handle 1 through CFG_ACT_CHARACTER_MAX dynamically</span>
    <span class="keywordflow">if</span> ( val &gt;= 1 &amp;&amp; val &lt;= <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a>, client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[val-1] );
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a235dd6ae36a9da520e4edd2bcca0a15a">SOC_STATE_CHARACTER_DELETE_CONFIRM</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">switch</span>( val )
    {
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406af6b220c6eba0e7e51eab8ff16f6e735b">ACT_MENU_CHARACTER_DELETE_BACK</a>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406afdc50f2f7f9ba2774cd77c44d48ed67a">ACT_MENU_CHARACTER_DELETE_INVALID</a>:
        <span class="keywordflow">default</span>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">break</span>;
    }

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_afc470ec6e82b7a9a1560588a368734f9_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_afc470ec6e82b7a9a1560588a368734f9_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a02b1b954749641ab646f6548a5360d3b"></a><!-- doxytag: member="Handler::CharacterLoadMenuMain" ref="a02b1b954749641ab646f6548a5360d3b" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a02b1b954749641ab646f6548a5360d3b">Handler::CharacterLoadMenuMain</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01020">1020</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>, val = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;
    stringstream name;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterLoadMenuMain()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CharacterLoadMenuMain()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#a0ec47c0fca86bced01367114a76d24a3">Telopt::opt_cursor_home</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="namespaceTelopt.xhtml#aa492f55e4cd1ee3cd8892ae1f99de139">Telopt::opt_erase_screen</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <span class="stringliteral">&quot;Account Menu &gt; Load an existing character&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a> <a class="code" href="config_8h.xhtml#a186f6fc40ada61d39547b724c1945bf2" title="String sent to prompt for a selection of menu options.">CFG_STR_SEL_OPTIONS</a> );
        <span class="keywordflow">for</span> ( i = 0; i &lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>().size(); i++ )
        {
            name &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i];

            <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">CheckPlaying</a>( name.str() ) )
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) %s (Playing)&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, i+1, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i] ) ) );
            <span class="keywordflow">else</span>
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) %s&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, i+1, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[i] ) ) );
        }
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%5d) Back&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>, <a class="code" href="enum_8h.xhtml#ab1d13bc820a2bde35115de0cdba08406af6b220c6eba0e7e51eab8ff16f6e735b">ACT_MENU_CHARACTER_DELETE_BACK</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Safer than ::stoi(), will output 0 for anything invalid</span>
    stringstream( cmd ) &gt;&gt; val;

    <span class="comment">// Handle 1 through CFG_ACT_CHARACTER_MAX dynamically</span>
    <span class="keywordflow">if</span> ( val &gt;= 1 &amp;&amp; val &lt;= <a class="code" href="config_8h.xhtml#a8c1dd07ffa42358ebfd5239a883bdceb" title="The maximum number of characters an account may have.">CFG_ACT_CHARACTER_MAX</a> )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a>, client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa68e2d900cb44fad0606e75e8b68029c" title="Returns the list of all associated characters. Tracking like this allows for a character to be unlink...">gCharacters</a>()[val-1] );
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7afa2695463879d6efdd681ec274ba2a1a">SOC_STATE_LOAD_CHARACTER</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">switch</span>( val )
    {
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#afcdd1d60dc3dfc7d964e68839e8e56a0a7b029112377ad70168cb643b701d35c2">ACT_MENU_CHARACTER_LOAD_BACK</a>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
            <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );
        <span class="keywordflow">break</span>;

        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#afcdd1d60dc3dfc7d964e68839e8e56a0a50dab0699eb2eb69f23fdb790949c203">ACT_MENU_CHARACTER_LOAD_INVALID</a>:
        <span class="keywordflow">default</span>:
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );
            client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a6abb8915100cb3ddd85753898ffbb2a6" title="String send to the client to prompt an input selection.">CFG_STR_SEL_PROMPT</a> );
        <span class="keywordflow">break</span>;
    }

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a02b1b954749641ab646f6548a5360d3b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a02b1b954749641ab646f6548a5360d3b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a120400154c1559acfc874fe8a0bfbf88"></a><!-- doxytag: member="Handler::CheckCreating" ref="a120400154c1559acfc874fe8a0bfbf88" args="(SocketClient *client, const string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88">Handler::CheckCreating</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to check against active connections. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The <a class="el" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> name to check against active connections. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the account is not playing or is playing but in a state greater than or equal to <a class="el" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a>. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the account is playing and in a state less than <a class="el" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00265">265</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flag );
    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>*, si );
    <a class="code" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>* socket_client = NULL;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( name.empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with empty name&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = client-&gt;<a class="code" href="classSocket.xhtml#a7d51c27fcddb7bddf1a3beb0be3c5abe" title="Returns the Server object associated to this SocketServer.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#a94d4152506da23d153a6070af7e72009" title="Returns the Server&#39;s globally referenced next iterator for SocketClient objects.">gSocketClientNext</a>() )
    {
        socket_client = *si;
        client-&gt;<a class="code" href="classSocket.xhtml#a7d51c27fcddb7bddf1a3beb0be3c5abe" title="Returns the Server object associated to this SocketServer.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#ab25462e8370bd6f9270c2f0734b70354" title="Sets the Server&#39;s globally referenced next iterator for SocketClient objects.">sSocketClientNext</a>( ++si );

        <span class="keywordflow">if</span> ( socket_client == client )
            <span class="keywordflow">continue</span>;

        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> )
            <span class="keywordflow">continue</span>;

        <span class="keywordflow">if</span> ( name == socket_client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) )
        {
            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flag, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; player from site %s attempted to login as %s (in creation)&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( name ) );
            <span class="keywordflow">return</span> <span class="keyword">true</span>;
        }
    }

    <span class="keywordflow">return</span> <span class="keyword">false</span>;
}
</pre></div>
<p><div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a120400154c1559acfc874fe8a0bfbf88_cgraph.svg" width="424" height="307"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a120400154c1559acfc874fe8a0bfbf88_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aab2a2273860d63543809b878c7e40b6e"></a><!-- doxytag: member="Handler::CheckPlaying" ref="aab2a2273860d63543809b878c7e40b6e" args="(const string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e">Handler::CheckPlaying</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The Character-&gt;gId() to search for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if a <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> with id name is not currently logged in and playing. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if a <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> with id name is currently logged in and playing. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00311">311</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flag );
    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>*, ci );
    <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;

    <span class="keywordflow">if</span> ( name.empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckPlaying()-&gt; called with empty name&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }
    cout &lt;&lt; name &lt;&lt; endl;
    cout &lt;&lt; <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.size() &lt;&lt; endl;
    <span class="keywordflow">for</span> ( ci = <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.begin(); ci != <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.end(); ci++ )
    {
        chr = *ci;
        cout &lt;&lt; chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() &lt;&lt; endl;
        <span class="keywordflow">if</span> ( chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() == name )
            <span class="keywordflow">return</span> <span class="keyword">true</span>;
    }

    <span class="keywordflow">return</span> <span class="keyword">false</span>;
}
</pre></div>
<p><div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceHandler_aab2a2273860d63543809b878c7e40b6e_cgraph.svg" width="307" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_aab2a2273860d63543809b878c7e40b6e_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a934fb4c3d6add91bc9e6e347b3270927"></a><!-- doxytag: member="Handler::CheckProhibited" ref="a934fb4c3d6add91bc9e6e347b3270927" args="(SocketClient *client, const string &amp;name, const uint_t &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool <a class="el" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927">Handler::CheckProhibited</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to requesting to use the name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The name to check against the prohibited list. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of prohibited names list to check, from <a class="el" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7">SVR_CFG_PROHIBITED_NAMES</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the name is not prohibited. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the name is prohibited. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00344">344</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( forward_list, <span class="keywordtype">string</span>, fi );
    forward_list&lt;string&gt; search;
    <span class="keywordtype">string</span> comp;
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> searcht = type;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( name.empty() )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckCreating()-&gt; called with empty name&quot;</span> );
        <span class="keywordflow">return</span> <span class="keyword">false</span>;
    }

    <span class="keywordflow">if</span> ( searcht &lt; uintmin_t || searcht &gt;= <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7a7ed5feb77c107fca67e72bebebbffc94">MAX_SVR_CFG_PROHIBITED_NAMES</a> )
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::CheckProhibited()-&gt; Called with invalid type: %lu&quot;</span>, searcht );
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::CheckProhibited()-&gt; defaulting to SVR_CFG_PROHIBITED_NAMES_ACCOUNT&quot;</span> );
        searcht = <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7ace193a596bade4a7d0d31de31b2c563b">SVR_CFG_PROHIBITED_NAMES_ACCOUNT</a>;
    }

    <span class="comment">// Search for prohibited names</span>
    search = client-&gt;<a class="code" href="classSocket.xhtml#a7d51c27fcddb7bddf1a3beb0be3c5abe" title="Returns the Server object associated to this SocketServer.">gServer</a>()-&gt;<a class="code" href="classServer.xhtml#a2b5b372322a87cdfeb7f6f5e4a01fa58" title="Gets the runtime configuration of the server.">gConfig</a>()-&gt;<a class="code" href="classServer_1_1Config.xhtml#a69c39210f0791ea8af97ee05c38efabc" title="Returns an a copy of the prohibited names list using type from SVR_CFG_PROHIBITED_NAMES.">gProhibitedNames</a>( searcht );
    <span class="keywordflow">for</span> ( fi = search.begin(); fi != search.end(); fi++ )
    {
        comp = *fi;
        <span class="keywordflow">if</span> ( comp == name )
            <span class="keywordflow">return</span> <span class="keyword">true</span>;
    }

    <span class="keywordflow">return</span> <span class="keyword">false</span>;
}
</pre></div>
<p><div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a934fb4c3d6add91bc9e6e347b3270927_cgraph.svg" width="483" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a934fb4c3d6add91bc9e6e347b3270927_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a571519b889d3750c63b9dc3418449bcb"></a><!-- doxytag: member="Handler::EnterGame" ref="a571519b889d3750c63b9dc3418449bcb" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb">Handler::EnterGame</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01095">1095</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* loc = NULL;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; called with NULL character&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( ( loc = <a class="code" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f" title="Locates a Location associated with the game.">FindLocation</a>( <a class="code" href="config_8h.xhtml#a15d54727a6d76209f45b8ab72df3c5a1" title="The initial location to place characters in upon first entering the game.">CFG_LOC_ID_START</a>, <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> ) ) == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::EnterGame()-&gt; unable to locate CFG_LOC_ID_START&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classThing.xhtml#a46dfe09e636299cd0bf1bc9c37aaebf4" title="Moves a Thing from within one Location to another Location.">Move</a>( loc ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a39cce74e55709225a468520e72d0066a" title="String sent when a Character first enters the game world.">CFG_STR_GAME_ENTER</a> );
    }
    <span class="keywordflow">else</span>
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#af92052aa78c14fdfc2b580f1f03d624c" title="String sent when a server fault prevents a Character from entering the game world.">CFG_STR_GAME_ENTER_ERROR</a> );
    }

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a571519b889d3750c63b9dc3418449bcb_cgraph.svg" width="100%" height="550"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a571519b889d3750c63b9dc3418449bcb_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab2e9bf0a670cbf82be7a440065151516"></a><!-- doxytag: member="Handler::FindCharacter" ref="ab2e9bf0a670cbf82be7a440065151516" args="(const string &amp;name, const uint_t &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCharacter.xhtml">Character</a> * <a class="el" href="namespaceHandler.xhtml#ab2e9bf0a670cbf82be7a440065151516">Handler::FindCharacter</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The name of the <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> to search for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The field to search against, from <a class="el" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406">HANDLER_FIND</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">Character*</td><td>A pointer to the <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> object associated with name, or NULL if one is not found. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
    <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>*, ci );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> search = type;

    <span class="keywordflow">if</span> ( name.empty() )
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindCharacter()-&gt; called with empty name&quot;</span> );

    <span class="keywordflow">if</span> ( <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.empty() )
        chr = NULL;
    <span class="keywordflow">else</span>
    {
        <span class="keywordflow">if</span> ( search &lt; uintmin_t || search &gt;= <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a76f1872093e830545839a2ec938b3098">MAX_HANDLER_FIND</a> )
        {
            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::FindCharacter()-&gt; Called with invalid type: %lu&quot;</span>, search );
            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindCharacter()-&gt; defaulting to HANDLER_FIND_ID&quot;</span> );
            search = <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a>;
        }

        <span class="keywordflow">for</span> ( ci = <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.begin(); ci != <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.end(); ci++ )
        {
            found = <span class="keyword">false</span>;
            chr = *ci;

            <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
            {
                <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
                    found = <span class="keyword">true</span>;
                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( chr-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
                    found = <span class="keyword">true</span>;
            }
            <span class="keywordflow">else</span>
            {
                <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; chr-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>().find( name ) == 0 )
                    found = <span class="keyword">true</span>;
                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; chr-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>().find( name ) == 0 )
                    found = <span class="keyword">true</span>;
            }

            <span class="keywordflow">if</span> ( found )
                <span class="keywordflow">break</span>;
        }

        <span class="keywordflow">if</span> ( !found )
            chr = NULL;
    }

    <span class="keywordflow">return</span> chr;
}
</pre></div>
<p><div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ab2e9bf0a670cbf82be7a440065151516_cgraph.svg" width="339" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ab2e9bf0a670cbf82be7a440065151516_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a02ba68c0c416219816c97189ea8bae4d"></a><!-- doxytag: member="Handler::FindCommand" ref="a02ba68c0c416219816c97189ea8bae4d" args="(const string &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCommand.xhtml">Command</a> * <a class="el" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d">Handler::FindCommand</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The name of the <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> to search for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">Command*</td><td>A pointer to the <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> object associated with name, or NULL if one is not found. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* cmd = NULL;
    <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
    pair&lt;multimap&lt;const char,Command*&gt;::iterator,multimap&lt;const char,Command*&gt;::iterator&gt; cmd_list;
    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keyword">const</span> <span class="keywordtype">char</span>,<a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>*, mi );

    <span class="keywordflow">if</span> ( name.empty() )
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindCommand()-&gt; called with empty name&quot;</span> );

    <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
        cmd_list = <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.equal_range( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name )[0] );
    <span class="keywordflow">else</span>
        cmd_list = <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.equal_range( name[0] );

    <span class="keywordflow">if</span> ( cmd_list.first == cmd_list.second )
        cmd = NULL;
    <span class="keywordflow">else</span>
    {
        <span class="keywordflow">for</span> ( mi = cmd_list.first; mi != cmd_list.second; mi++ )
        {
            found = <span class="keyword">false</span>;
            cmd = mi-&gt;second;

            <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
            {
                <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( cmd-&gt;<a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
                    found = <span class="keyword">true</span>;
            }
            <span class="keywordflow">else</span>
            {
                <span class="keywordflow">if</span> ( cmd-&gt;<a class="code" href="classCommand.xhtml#a7e591e2b82f59fd73d9b25daaa192021" title="Return the name of the associated Plugin object.">gName</a>().find( name ) == 0 )
                    found = <span class="keyword">true</span>;
            }

            <span class="keywordflow">if</span> ( found )
                <span class="keywordflow">break</span>;
        }

        <span class="keywordflow">if</span> ( !found )
            cmd = NULL;
    }

    <span class="keywordflow">return</span> cmd;
}
</pre></div>
<p><div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a02ba68c0c416219816c97189ea8bae4d_cgraph.svg" width="539" height="94"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a02ba68c0c416219816c97189ea8bae4d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a57dc60ce5522b41f1ab98b83de76779f"></a><!-- doxytag: member="Handler::FindLocation" ref="a57dc60ce5522b41f1ab98b83de76779f" args="(const string &amp;name, const uint_t &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classLocation.xhtml">Location</a> * <a class="el" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f">Handler::FindLocation</a> </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a">uint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The name of the <a class="el" href="classLocation.xhtml" title="A physical location within the game world.">Location</a> to search for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The field to search against, from <a class="el" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406">HANDLER_FIND</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">Location*</td><td>A pointer to the <a class="el" href="classLocation.xhtml" title="A physical location within the game world.">Location</a> object associated with name, or NULL if one is not found. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* loc = NULL;
    <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;
    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( list, <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>*, li );
    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> search = type;

    <span class="keywordflow">if</span> ( name.empty() )
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindLocation()-&gt; called with empty name&quot;</span> );

    <span class="keywordflow">if</span> ( <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.empty() )
        loc = NULL;
    <span class="keywordflow">else</span>
    {
        <span class="keywordflow">if</span> ( search &lt; uintmin_t || search &gt;= <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a76f1872093e830545839a2ec938b3098">MAX_HANDLER_FIND</a> )
        {
            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::FindLocation()-&gt; Called with invalid type: %lu&quot;</span>, search );
            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::FindLocation()-&gt; defaulting to HANDLER_FIND_ID&quot;</span> );
            search = <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a>;
        }

        <span class="keywordflow">for</span> ( li = <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.begin(); li != <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.end(); li++ )
        {
            found = <span class="keyword">false</span>;
            loc = *li;

            <span class="keywordflow">if</span> ( <a class="code" href="config_8h.xhtml#ae6748b5fd865172bb53927d8b5f99b6a" title="Ignore case sensitivity on input from sockets.">CFG_GAM_CMD_IGNORE_CASE</a> )
            {
                <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( loc-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
                    found = <span class="keyword">true</span>;
                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( loc-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() ).find( <a class="code" href="namespaceUtils.xhtml#a9b70f9dd0af906c806695b35488e778f" title="Returns a string converted to all lowercase letters.">Utils::Lower</a>( name ) ) == 0 )
                    found = <span class="keyword">true</span>;
            }
            <span class="keywordflow">else</span>
            {
                <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> &amp;&amp; loc-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>().find( name ) == 0 )
                    found = <span class="keyword">true</span>;
                <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( search == <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a32bd1c73177c537366983800f16a85a0">HANDLER_FIND_NAME</a> &amp;&amp; loc-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>().find( name ) == 0 )
                    found = <span class="keyword">true</span>;
            }

            <span class="keywordflow">if</span> ( found )
                <span class="keywordflow">break</span>;
        }

        <span class="keywordflow">if</span> ( !found )
            loc = NULL;
    }

    <span class="keywordflow">return</span> loc;
}
</pre></div>
<p><div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a57dc60ce5522b41f1ab98b83de76779f_cgraph.svg" width="331" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a57dc60ce5522b41f1ab98b83de76779f_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a00bc24564bfd267e0329643c569da1e4"></a><!-- doxytag: member="Handler::GetNewAccount" ref="a00bc24564bfd267e0329643c569da1e4" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4">Handler::GetNewAccount</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01145">1145</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetNewAccount()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry or an invalid selection</span>
    <span class="keywordflow">if</span> ( cmd.empty() &amp;&amp; !client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a180ca46bce137e0d17c8840effb7fbbe" title="String sent to request the user confirms their new account name.">CFG_STR_ACT_NAME_CONFIRM</a>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( cmd, <span class="stringliteral">&quot;no&quot;</span>, <span class="keyword">true</span> ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, <span class="stringliteral">&quot;&quot;</span> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a> );
    }
    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#acf9ee675ffc2d73b7b2a2a71aa68e36a" title="Returns if string s1 is a prefix of string s2.">Utils::StrPrefix</a>( cmd, <span class="stringliteral">&quot;yes&quot;</span>, <span class="keyword">true</span> ) )
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a812001ad08d1204b69ffbaa7eaaba1c7">SOC_STATE_GET_NEW_PASSWORD</a> );
    <span class="keywordflow">else</span>
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a548ff2384716d34d7c21e6c33ac390ea" title="String send to the client after an invalid selection is made during an input request.">CFG_STR_SEL_INVALID</a> );

    <span class="comment">//Generate the next input prompt</span>
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a00bc24564bfd267e0329643c569da1e4_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-33" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-33-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-33-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-33-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a00bc24564bfd267e0329643c569da1e4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a744adadcf407cdb3a9c33365afd5a7c2"></a><!-- doxytag: member="Handler::GetNewPassword" ref="a744adadcf407cdb3a9c33365afd5a7c2" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2">Handler::GetNewPassword</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01185">1185</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetNewPassword()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">true</span> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a1d11ba4800f063ecd9329569236f95e7" title="String sent when a new account will be created.">CFG_STR_ACT_NEW</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#aa99a9bd0582d67d7098143471509b5a7" title="The minimum allowable length for an account password.">CFG_ACT_PASSWORD_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#a5347d13812efe93d42355d726e565ea6" title="The maximum allowable length for an account password.">CFG_ACT_PASSWORD_MAX_LEN</a> )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a8ca9b1580c268c16dbe8feddb330c025" title="String sent when an invalid account password is received.">CFG_STR_ACT_PASSWORD_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#a475d489333cb51b56a3f5cd5d76a738c" title="String additionally sent when an account password is invalid due to length.">CFG_STR_ACT_PASSWORD_LENGTH</a>, <a class="code" href="config_8h.xhtml#aa99a9bd0582d67d7098143471509b5a7" title="The minimum allowable length for an account password.">CFG_ACT_PASSWORD_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#a5347d13812efe93d42355d726e565ea6" title="The maximum allowable length for an account password.">CFG_ACT_PASSWORD_MAX_LEN</a> ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ).empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, crypt( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#adafa6fa32d5b637ea62db12aa35db6e0" title="Returns a salt value for use with crypt.">Utils::Salt</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) ) );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a51eaea4b5ef702d560ee8d1037757650" title="String sent to request the user confirms their new account password.">CFG_STR_ACT_PASSWORD_CONFIRM</a> );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( <a class="code" href="macros_8h.xhtml#ab8dd2a96f2d83fd315a460c2b0e7401c" title="Compare two the value of (check) to (old) based on (salt).">CKPASSWORD</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ), cmd, client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a> ) ) )
        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a> );
    <span class="keywordflow">else</span>
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, <span class="stringliteral">&quot;&quot;</span> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a850c90516fb31c985fc8cbcc2ab52946" title="String sent when a new password confirmation fails.">CFG_STR_ACT_PASSWORD_MISMATCH</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );

        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Generate the next input prompt</span>
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-34" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-34-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-34-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-34-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a744adadcf407cdb3a9c33365afd5a7c2_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-35" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-35-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-35-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-35-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a744adadcf407cdb3a9c33365afd5a7c2_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="adfe13cc9748392348f3941656a1323b6"></a><!-- doxytag: member="Handler::GetOldPassword" ref="adfe13cc9748392348f3941656a1323b6" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6">Handler::GetOldPassword</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01247">1247</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::GetOldPassword()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Initial entry</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        <a class="code" href="namespaceTelopt.xhtml#a71c731d78947d4c909f93df74950b64c" title="Negotiate requested options.">Telopt::Negotiate</a>( client, <a class="code" href="enum_8h.xhtml#a8133e93c6dc811b9b216c65d6836dbe4a1585c85241b55cc28b79eebd4c8c1594">SOC_TELOPT_ECHO</a>, <span class="keyword">true</span> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aaf7cf70d53d7952bec27ee3a3662feae" title="String sent to request the user inputs their password.">CFG_STR_ACT_PASSWORD_GET</a> );
        <span class="keywordflow">return</span>;
    }

    client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, crypt( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="namespaceUtils.xhtml#adafa6fa32d5b637ea62db12aa35db6e0" title="Returns a salt value for use with crypt.">Utils::Salt</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ) ) ) ) );
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a> );

    <span class="comment">//Generate the next input prompt</span>
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-36" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-36-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-36-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-36-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_adfe13cc9748392348f3941656a1323b6_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-37" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-37-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-37-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-37-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_adfe13cc9748392348f3941656a1323b6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae70e4e50054c729c14493eafefe01b5c"></a><!-- doxytag: member="Handler::LoadCharacter" ref="ae70e4e50054c729c14493eafefe01b5c" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#ae70e4e50054c729c14493eafefe01b5c">Handler::LoadCharacter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01281">1281</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>* chr = NULL;
    stringstream id;

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoadCharacter()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoadCharacter()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    chr = <span class="keyword">new</span> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>();
    chr-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );
    <span class="comment">// Id for characters owned by accounts is account_name.character_name</span>
    <span class="keywordtype">id</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#aa5598c7fb0b2099dfee5d15696a5ef24" title="Returns the name of the account.">gName</a>() &lt;&lt; <span class="stringliteral">&quot;.&quot;</span> &lt;&lt; client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa308cffe1aa77261b903e800618977368">SOC_LOGIN_CHARACTER</a> );

    <span class="comment">// Already in the game, so lets reconnect</span>
    <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#aab2a2273860d63543809b878c7e40b6e" title="Checks to see if a Character is currently logged into the game and playing.">CheckPlaying</a>( <span class="keywordtype">id</span>.str() ) )
    {
        <span class="keyword">delete</span> chr;

        client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a034ea76738957d5a74900e7d0a968b0c">SOC_STATE_RECONNECTING</a> );
        chr = <a class="code" href="namespaceHandler.xhtml#ab2e9bf0a670cbf82be7a440065151516" title="Locates a Character within the game.">FindCharacter</a>( <span class="keywordtype">id</span>.str(), <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> );
        <a class="code" href="namespaceHandler.xhtml#ae660d7a3f4c95db9639d74e965e82df6" title="Reconnects an existing in-game Character to a new SocketClient.">Reconnect</a>( client, chr );

        <span class="keywordflow">return</span>;
    }
    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !chr-&gt;<a class="code" href="classCharacter.xhtml#af7147ddb783cc1ebf56c21a27dfbed4a" title="Create a new character.">New</a>( client-&gt;<a class="code" href="classSocket.xhtml#a7d51c27fcddb7bddf1a3beb0be3c5abe" title="Returns the Server object associated to this SocketServer.">gServer</a>(), <a class="code" href="namespaceUtils.xhtml#a3e236b07fd628bcaf2e7c5854dd2a281" title="Returns a string consisting of file.ext.">Utils::FileExt</a>( <span class="keywordtype">id</span>.str(), <a class="code" href="config_8h.xhtml#a2339c99068cee7dd8024d0097583cdee" title="File extension to use for player character files.">CFG_DAT_FILE_PLR_EXT</a> ), true ) )
    {
        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::LoadCharacter()-&gt;Character::New()-&gt; returned false for character %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <span class="keywordtype">id</span>.str() ) );
        <span class="keyword">delete</span> chr;
        <span class="keywordflow">return</span>;
    }

    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( chr );
    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a593a3ddc02ef1c56b6e4000fa5580e6d">SOC_STATE_ENTER_GAME</a> );

    <span class="comment">//Generate the next input prompt</span>
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-38" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-38-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-38-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-38-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ae70e4e50054c729c14493eafefe01b5c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-39" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-39-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-39-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-39-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ae70e4e50054c729c14493eafefe01b5c_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a139febc000c9d767a620708148e0c888"></a><!-- doxytag: member="Handler::LoginHandler" ref="a139febc000c9d767a620708148e0c888" args="(SocketClient *client, const string &amp;cmd=&quot;&quot;, const string &amp;args=&quot;&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888">Handler::LoginHandler</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a menu request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00216">216</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginHandler()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a> &amp;&amp; client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginHandler()-&gt; called with NULL account&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">//cout &lt;&lt; &quot;state=[&quot; &lt;&lt; client-&gt;gState() &lt;&lt; &quot;} cmd={&quot; &lt;&lt; cmd &lt;&lt; &quot;} args={&quot; &lt;&lt; args &lt;&lt;&quot;}&quot; &lt;&lt; endl;</span>
    <span class="keywordflow">switch</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() )
    {
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7aa97346118bd6336de5373254e8cbd15f">SOC_STATE_LOGIN_SCREEN</a>:                <a class="code" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191" title="Send initial greeting and request for account name.">LoginScreen</a>( client, cmd, args );               <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad1df19251e972b85012bd03f5a12f47b">SOC_STATE_GET_OLD_PASSWORD</a>:            <a class="code" href="namespaceHandler.xhtml#adfe13cc9748392348f3941656a1323b6" title="Compare a received password against an existing account.">GetOldPassword</a>( client, cmd, args );            <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a60ba81eec35892e83b8430190320529f">SOC_STATE_GET_NEW_ACCOUNT</a>:             <a class="code" href="namespaceHandler.xhtml#a00bc24564bfd267e0329643c569da1e4" title="Select a new account name.">GetNewAccount</a>( client, cmd, args );             <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a812001ad08d1204b69ffbaa7eaaba1c7">SOC_STATE_GET_NEW_PASSWORD</a>:            <a class="code" href="namespaceHandler.xhtml#a744adadcf407cdb3a9c33365afd5a7c2" title="Create a new account.">GetNewPassword</a>( client, cmd, args );            <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a02c4888f05c73c2a802b8420ffa44c68">SOC_STATE_CREATE_ACCOUNT</a>:              <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">AttachAccount</a>( client, cmd, args );             <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0578d117dea969aded3b50085da44adf">SOC_STATE_LOAD_ACCOUNT</a>:                <a class="code" href="namespaceHandler.xhtml#a33a19d69ead678af81fbe96907eceaf0" title="Create a new account object, or load an existing one, with a name and password.">AttachAccount</a>( client, cmd, args );             <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a90fc5e4c3d955995d4a087794c0121f9">SOC_STATE_ACCOUNT_MENU</a>:                <a class="code" href="namespaceHandler.xhtml#a73ed6064f2698dbffb5f4c247a02b661" title="Send initial account interface menu.">AccountMenuMain</a>( client, cmd, args );           <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9b6b29ebd6bf250f8bb45b59e3466a68">SOC_STATE_CHARACTER_CREATE_MENU</a>:       <a class="code" href="namespaceHandler.xhtml#ad04998a7a6ece2486bc441052a57c2d7" title="Main Character creation menu.">CharacterCreateMenuMain</a>( client, cmd, args );   <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a0ce2c68c74dd615e11036b1c7109de8a">SOC_STATE_CHARACTER_CREATE_NAME</a>:       <a class="code" href="namespaceHandler.xhtml#ab5889a65de2794129b375ec39ae923ae" title="Select a new Character name.">CharacterCreateName</a>( client, cmd, args );       <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a2bc7da7824985417f2ea284bac10981a">SOC_STATE_CHARACTER_CREATE_SEX</a>:        <a class="code" href="namespaceHandler.xhtml#ae5086bcf5857eb572beedd09158c3065" title="Select a new Character sex.">CharacterCreateSex</a>( client, cmd, args );        <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a3ba35f86a8c8b1e10a6bd24db6f990fb">SOC_STATE_CHARACTER_CREATE_FINISH</a>:     <a class="code" href="namespaceHandler.xhtml#a2e4ebf6ed049eb872aa4948d54c4932c" title="Attempt to write a new character to disk after creation was completed.">AttachCharacter</a>( client, cmd, args );           <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a4253f1f671b85b03cf8d7394ec3edf33">SOC_STATE_CHARACTER_DELETE_MENU</a>:       <a class="code" href="namespaceHandler.xhtml#afc470ec6e82b7a9a1560588a368734f9" title="Main Character deletion menu.">CharacterDeleteMenuMain</a>( client, cmd, args );   <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a235dd6ae36a9da520e4edd2bcca0a15a">SOC_STATE_CHARACTER_DELETE_CONFIRM</a>:    <a class="code" href="namespaceHandler.xhtml#a97a198bfc72285b2aca4f36978db715e" title="Main Character deletion confirmation.">CharacterDeleteConfirm</a>( client, cmd, args );    <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ae26279296a5e34c7f6c2ea6c0a8e8c2b">SOC_STATE_CHARACTER_LOAD_MENU</a>:         <a class="code" href="namespaceHandler.xhtml#a02b1b954749641ab646f6548a5360d3b" title="Main Character load menu.">CharacterLoadMenuMain</a>( client, cmd, args );     <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7afa2695463879d6efdd681ec274ba2a1a">SOC_STATE_LOAD_CHARACTER</a>:              <a class="code" href="namespaceHandler.xhtml#ae70e4e50054c729c14493eafefe01b5c" title="Load a character from the account to enter into the game with.">LoadCharacter</a>( client, cmd, args );             <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a593a3ddc02ef1c56b6e4000fa5580e6d">SOC_STATE_ENTER_GAME</a>:                  <a class="code" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb" title="Places the character loaded against the account into the game world.">EnterGame</a>( client, cmd, args );                 <span class="keywordflow">break</span>;
        <span class="keywordflow">default</span>:                                                                                    <span class="keywordflow">break</span>;
    }

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-40" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-40-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-40-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-40-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a139febc000c9d767a620708148e0c888_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-41" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-41-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-41-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-41-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a139febc000c9d767a620708148e0c888_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a44b41bf69fdc6e615a029bea34910191"></a><!-- doxytag: member="Handler::LoginScreen" ref="a44b41bf69fdc6e615a029bea34910191" args="(SocketClient *client, const string &amp;cmd, const string &amp;args)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#a44b41bf69fdc6e615a029bea34910191">Handler::LoginScreen</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> to process a login request for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmd</td><td>The command sent by the <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Any arguments to the command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l01338">1338</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::LoginScreen()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Initial connection with no input yet received or previous name was invalid</span>
    <span class="keywordflow">if</span> ( cmd.empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#af0eb185d6833661ec6d553871aba031e" title="String sent to request the user enters their account name.">CFG_STR_ACT_NAME_GET</a> );
        <span class="keywordflow">return</span>;
    }

    <span class="comment">// Only allow alphanumerics for the account name itself</span>
    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a36780f0aa565047ca0db53bda2aff5fc" title="Checks to ensure an input is entirely alphanumeric.">Utils::iAlNum</a>( cmd ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7790e568748a47be0bd52ead4a73375b" title="String additionally sent if an account name is invalid due to non-alphanumeric characters.">CFG_STR_ACT_NAME_ALNUM</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Prevent prohibited names based on Server runtime configuration</span>
    <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a934fb4c3d6add91bc9e6e347b3270927" title="Checks to see if a name is on the server&#39;s prohibited list.">Handler::CheckProhibited</a>( client, cmd, <a class="code" href="enum_8h.xhtml#a78dd6653d08a6753832f7620341c0fb7ace193a596bade4a7d0d31de31b2c563b">SVR_CFG_PROHIBITED_NAMES_ACCOUNT</a> ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aae9cb78e2deef0ffe39bdf49496fcec6" title="String additionally sent when an account name matches the prohibited names list.">CFG_STR_ACT_NAME_PROHIBITED</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="comment">//Prevent two new accounts being created with the same name</span>
    <span class="keywordflow">if</span> ( <a class="code" href="namespaceHandler.xhtml#a120400154c1559acfc874fe8a0bfbf88" title="Check to see if the current account is already being created.">Handler::CheckCreating</a>( client, cmd ) )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#aae9cb78e2deef0ffe39bdf49496fcec6" title="String additionally sent when an account name matches the prohibited names list.">CFG_STR_ACT_NAME_PROHIBITED</a> );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( cmd.length() &lt; <a class="code" href="config_8h.xhtml#a4383bb3891f4ea262e0979ee17a161f6" title="The minimum allowable length for an account name.">CFG_ACT_NAME_MIN_LEN</a> || cmd.length() &gt; <a class="code" href="config_8h.xhtml#ab3eaf7083d24131807f6d079fce51264" title="The maximum allowable length for an account name.">CFG_ACT_NAME_MAX_LEN</a> )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <a class="code" href="config_8h.xhtml#ad62726ae21a312dfa9d1512113283fee" title="String additionally sent when an account name is invalid due to length.">CFG_STR_ACT_NAME_LENGTH</a>, <a class="code" href="config_8h.xhtml#a4383bb3891f4ea262e0979ee17a161f6" title="The minimum allowable length for an account name.">CFG_ACT_NAME_MIN_LEN</a>, <a class="code" href="config_8h.xhtml#ab3eaf7083d24131807f6d079fce51264" title="The maximum allowable length for an account name.">CFG_ACT_NAME_MAX_LEN</a> ) );
        <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( client-&gt;<a class="code" href="classSocketClient.xhtml#acdff38db903da34b2a9fcc3e12d6a796" title="Returns the value of a SOC_LOGIN key.">gLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a> ).empty() )
    {
        client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, cmd );

        <span class="keywordflow">switch</span> (  <a class="code" href="namespaceUtils.xhtml#ac41c505e3efccab8549238e6843b0d2e" title="Determines if a directory exists on disk.">Utils::DirExists</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a5820804ddbdd36a88754b698a1a28220" title="Directory for accounts to be loaded from.">CFG_DAT_DIR_ACCOUNT</a>, cmd ) ) )
        {
            <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88ae9b6a246539fb57fb810ac271b05d050">UTILS_RET_FALSE</a>:
                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a60ba81eec35892e83b8430190320529f">SOC_STATE_GET_NEW_ACCOUNT</a> );
            <span class="keywordflow">break</span>;

            <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88ae2722723183013676ca1f0f065fc0b24">UTILS_RET_TRUE</a>:
                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7ad1df19251e972b85012bd03f5a12f47b">SOC_STATE_GET_OLD_PASSWORD</a> );
            <span class="keywordflow">break</span>;

            <span class="keywordflow">case</span> <a class="code" href="enum_8h.xhtml#a3e334343716a0199504bec5002e4be88aa6afb4eb3fbede68c19c12bf3543045f">UTILS_RET_ERROR</a>:
            <span class="keywordflow">default</span>:
                client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a7ec3d26e13cf58774ae45b8dd78d9ff3" title="String sent when an invalid account name is received.">CFG_STR_ACT_NAME_INVALID</a> );
                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Handler::LoginScreen()-&gt;Utils::DirExists()-&gt; returned UTILS_RET_ERROR for name: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( cmd ) );
            <span class="keywordflow">break</span>;
        }
    }

    <span class="comment">//Generate the next input prompt</span>
    <a class="code" href="namespaceHandler.xhtml#a139febc000c9d767a620708148e0c888" title="Dispatches the appropriate menu based on client state.">LoginHandler</a>( client );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-42" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-42-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-42-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-42-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a44b41bf69fdc6e615a029bea34910191_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-43" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-43-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-43-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-43-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_a44b41bf69fdc6e615a029bea34910191_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae660d7a3f4c95db9639d74e965e82df6"></a><!-- doxytag: member="Handler::Reconnect" ref="ae660d7a3f4c95db9639d74e965e82df6" args="(SocketClient *client, Character *character)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void <a class="el" href="namespaceHandler.xhtml#ae660d7a3f4c95db9639d74e965e82df6">Handler::Reconnect</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classSocketClient.xhtml">SocketClient</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classCharacter.xhtml">Character</a> *&#160;</td>
          <td class="paramname"><em>character</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">client</td><td>The <a class="el" href="classSocketClient.xhtml" title="Client / remote host specific functions that extend the Socket class.">SocketClient</a> who is attempting to login to the character. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">character</td><td>The <a class="el" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> that is already playing in the game. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt><b>Return values:</b></dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="handler_8cpp_source.xhtml#l00490">490</a> of file <a class="el" href="handler_8cpp_source.xhtml">handler.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
    <a class="code" href="macros_8h.xhtml#a81c6b3420739f786f624d7ea14b0bde1" title="Define a bitset variable (name) with UTILS_TYPE_SOCKET already enabled.">UFLAGS_S</a>( flag );

    <span class="keywordflow">if</span> ( client == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::Reconnect()-&gt; called with NULL client&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <span class="keywordflow">if</span> ( character == NULL )
    {
        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Handler::Reconnect()-&gt; called with NULL character&quot;</span> );
        <span class="keywordflow">return</span>;
    }

    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flag, <span class="stringliteral">&quot;%s@%s kicking off old link.&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( character-&gt;<a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( client-&gt;<a class="code" href="classSocket.xhtml#adc72a37934a4f2d10f6ae8fc94bb4ca7" title="Returns the hostname associated to the Socket.">gHostname</a>() ) );

    <span class="comment">// De-associate from the existing login session</span>
    character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( NULL );
    character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9" title="Returns the associated SocketClient.">gClient</a>()-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9d096c75b5e31056089c1e20afad749e">SOC_STATE_DISC_LINKDEAD</a> );
    character-&gt;<a class="code" href="classCharacter.xhtml#a9dce3d7ce7ac17f02397d198e47707ef" title="Returns the Account associated with this Character, if any.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1314e9f054a5354c77c20f48e1c6d7f9" title="Returns the associated SocketClient.">gClient</a>()-&gt;<a class="code" href="classSocketClient.xhtml#ad8ab017dd47d5e8b20ad30f72773a759" title="Flags a client as quitting to break out of nested loops.">Quit</a>();
    character-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( NULL );

    <span class="comment">// Now re-associate to the new one</span>
    character-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );
    client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( character );

    client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> );
    client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a9252912464aa57109d65b9882dead401" title="String sent upon resuming a linkdead character.">CFG_STR_CHR_RECONNECTED</a> );

    <span class="keywordflow">return</span>;
}
</pre></div>
<p><div id="dynsection-44" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-44-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-44-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-44-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ae660d7a3f4c95db9639d74e965e82df6_cgraph.svg" width="100%" height="501"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-45" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-45-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-45-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-45-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceHandler_ae660d7a3f4c95db9639d74e965e82df6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Apr 28 2013 21:23:23 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
