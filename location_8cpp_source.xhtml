<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: location.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">location.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="location_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/***************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * NAMS - Not Another MUD Server                                           *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2012 Matthew Goff (matt@goff.cc) &lt;http://www.ackmud.net/&gt; *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                         *</span>
<a name="l00005"></a>00005 <span class="comment"> * This program is free software: you can redistribute it and/or modify    *</span>
<a name="l00006"></a>00006 <span class="comment"> * it under the terms of the GNU General Public License as published by    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the Free Software Foundation, either version 3 of the License, or       *</span>
<a name="l00008"></a>00008 <span class="comment"> * (at your option) any later version.                                     *</span>
<a name="l00009"></a>00009 <span class="comment"> *                                                                         *</span>
<a name="l00010"></a>00010 <span class="comment"> * This program is distributed in the hope that it will be useful,         *</span>
<a name="l00011"></a>00011 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of          *</span>
<a name="l00012"></a>00012 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU General Public License for more details.                            *</span>
<a name="l00014"></a>00014 <span class="comment"> *                                                                         *</span>
<a name="l00015"></a>00015 <span class="comment"> * You should have received a copy of the GNU General Public License       *</span>
<a name="l00016"></a>00016 <span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.   *</span>
<a name="l00017"></a>00017 <span class="comment"> ***************************************************************************/</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="includes_8h.xhtml" title="All non-system includes that need to be within each .cpp file.">h/includes.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="location_8h.xhtml" title="The Location class.">h/location.h</a>&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="list_8h.xhtml" title="All globally referenced list / map / vector types.">h/list.h</a>&quot;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="comment">/* Core */</span>
<a name="l00034"></a><a class="code" href="classLocation.xhtml#a2640eee7c5e9b2b08f84a401f7beab53">00034</a> <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="classLocation.xhtml#a2640eee7c5e9b2b08f84a401f7beab53" title="Unload a location from memory that was previously loaded via Location::New().">Location::Delete</a>()
<a name="l00035"></a>00035 {
<a name="l00036"></a>00036     <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.erase( find( <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.begin(), <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.end(), this ) );
<a name="l00037"></a>00037     <span class="keyword">delete</span> <span class="keyword">this</span>;
<a name="l00038"></a>00038 
<a name="l00039"></a>00039     <span class="keywordflow">return</span>;
<a name="l00040"></a>00040 }
<a name="l00041"></a>00041 
<a name="l00048"></a><a class="code" href="classLocation.xhtml#a6396aba5eab9bcbabb000c3f6478e1a2">00048</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classLocation.xhtml#a6396aba5eab9bcbabb000c3f6478e1a2" title="Create a new location.">Location::New</a>( <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; file )
<a name="l00049"></a>00049 {
<a name="l00050"></a>00050     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00051"></a>00051 
<a name="l00052"></a>00052     <a class="code" href="classLocation.xhtml#aef7bb3607c4c22375a1fae5518962ff6">m_file</a> = file;
<a name="l00053"></a>00053 
<a name="l00054"></a>00054     <span class="keywordflow">if</span> ( !<a class="code" href="classLocation.xhtml#af65d15c0c107b1fdea7711d632ac909d" title="Unserialize the location data.">Unserialize</a>() )
<a name="l00055"></a>00055     {
<a name="l00056"></a>00056         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Location::New()-&gt;Location::Unserialize()-&gt; returned false for file %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );
<a name="l00057"></a>00057         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00058"></a>00058     }
<a name="l00059"></a>00059 
<a name="l00060"></a>00060     <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.push_back( <span class="keyword">this</span> );
<a name="l00061"></a>00061 
<a name="l00062"></a>00062     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00063"></a>00063 }
<a name="l00064"></a>00064 
<a name="l00070"></a><a class="code" href="classLocation.xhtml#a4f364ffc1f0910ac60bcb2e7cf9e7e20">00070</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classLocation.xhtml#a4f364ffc1f0910ac60bcb2e7cf9e7e20" title="Serialize the location data.">Location::Serialize</a>()<span class="keyword"> const</span>
<a name="l00071"></a>00071 <span class="keyword"></span>{
<a name="l00072"></a>00072     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00073"></a>00073     ofstream ofs;
<a name="l00074"></a>00074     <span class="keywordtype">string</span> value;
<a name="l00075"></a>00075     stringstream line;
<a name="l00076"></a>00076     <span class="keywordtype">string</span> file( <a class="code" href="namespaceUtils.xhtml#a3e236b07fd628bcaf2e7c5854dd2a281" title="Returns a string consisting of file.ext.">Utils::FileExt</a>( <a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>(), <a class="code" href="config_8h.xhtml#a56fdb354a0a0aa4879db1e77a32d824b" title="File extension to use for location files.">CFG_DAT_FILE_LOC_EXT</a> ) );
<a name="l00077"></a>00077 
<a name="l00078"></a>00078     <a class="code" href="namespaceUtils.xhtml#a67fd451200ee8a3cc646aeba5cb9513b" title="Begins a write to a temporary file that is intended to replace a live file.">Utils::FileOpen</a>( ofs, file );
<a name="l00079"></a>00079 
<a name="l00080"></a>00080     <span class="keywordflow">if</span> ( !ofs.good() )
<a name="l00081"></a>00081     {
<a name="l00082"></a>00082         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Location::Serialize()-&gt; failed to open location file: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );
<a name="l00083"></a>00083         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00084"></a>00084     }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="comment">// First to ensure id is loaded for logging later</span>
<a name="l00087"></a>00087     <a class="code" href="macros_8h.xhtml#ae82f16e6bd484cc5cb600fb899b8c24d" title="Write (name) and (value) to (stream) in key:value format.">KEY</a>( ofs, <span class="stringliteral">&quot;id&quot;</span>, <a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() );
<a name="l00088"></a>00088     <a class="code" href="macros_8h.xhtml#ae82f16e6bd484cc5cb600fb899b8c24d" title="Write (name) and (value) to (stream) in key:value format.">KEY</a>( ofs, <span class="stringliteral">&quot;name&quot;</span>, <a class="code" href="classThing.xhtml#a3c3c40c996ff562baa335f2ded022578" title="Returns the name associated with this Thing.">gName</a>() );
<a name="l00089"></a>00089     <a class="code" href="macros_8h.xhtml#ae82f16e6bd484cc5cb600fb899b8c24d" title="Write (name) and (value) to (stream) in key:value format.">KEY</a>( ofs, <span class="stringliteral">&quot;zone&quot;</span>, <a class="code" href="classLocation.xhtml#a78f355da90860faba8b9884ac96c56b8">m_zone</a> );
<a name="l00090"></a>00090 
<a name="l00091"></a>00091     <a class="code" href="namespaceUtils.xhtml#a7008f8effca71806721305d1834bde1e" title="Completes a read from a file.">Utils::FileClose</a>( ofs, <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a>, <a class="code" href="classLocation.xhtml#a78f355da90860faba8b9884ac96c56b8">m_zone</a> ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );
<a name="l00092"></a>00092 
<a name="l00093"></a>00093     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00094"></a>00094 }
<a name="l00095"></a>00095 
<a name="l00101"></a><a class="code" href="classLocation.xhtml#af65d15c0c107b1fdea7711d632ac909d">00101</a> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classLocation.xhtml#af65d15c0c107b1fdea7711d632ac909d" title="Unserialize the location data.">Location::Unserialize</a>()
<a name="l00102"></a>00102 {
<a name="l00103"></a>00103     <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );
<a name="l00104"></a>00104     <a class="code" href="macros_8h.xhtml#a6e32552c1b3df78e64aa5205ddf6dae9" title="Define a bitset variable (name) with UTILS_TYPE_INFO already enabled.">UFLAGS_I</a>( finfo );
<a name="l00105"></a>00105     ifstream ifs;
<a name="l00106"></a>00106     <span class="keywordtype">string</span> key, value, line;
<a name="l00107"></a>00107     <span class="keywordtype">bool</span> found = <span class="keyword">false</span>, maxb = <span class="keyword">false</span>;
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     <a class="code" href="namespaceUtils.xhtml#a67fd451200ee8a3cc646aeba5cb9513b" title="Begins a write to a temporary file that is intended to replace a live file.">Utils::FileOpen</a>( ifs, <a class="code" href="classLocation.xhtml#aef7bb3607c4c22375a1fae5518962ff6">m_file</a> );
<a name="l00110"></a>00110 
<a name="l00111"></a>00111     <span class="keywordflow">if</span> ( !ifs.good() )
<a name="l00112"></a>00112     {
<a name="l00113"></a>00113         <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Location::Unserialize()-&gt; failed to open location file: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classLocation.xhtml#aef7bb3607c4c22375a1fae5518962ff6">m_file</a> ) );
<a name="l00114"></a>00114         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00115"></a>00115     }
<a name="l00116"></a>00116 
<a name="l00117"></a>00117     <span class="keywordflow">while</span> ( getline( ifs, line ) )
<a name="l00118"></a>00118     {
<a name="l00119"></a>00119         <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b" title="Splits a string in the format of key=value. Retains any whitespace in the value.">Utils::KeyValue</a>( key, value, line) )
<a name="l00120"></a>00120         {
<a name="l00121"></a>00121             <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Location::Unserialize()-&gt; error reading line: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( line ) );
<a name="l00122"></a>00122             <span class="keywordflow">continue</span>;
<a name="l00123"></a>00123         }
<a name="l00124"></a>00124 
<a name="l00125"></a>00125         <span class="keywordflow">for</span> ( ;; )
<a name="l00126"></a>00126         {
<a name="l00127"></a>00127             found = <span class="keyword">false</span>;
<a name="l00128"></a>00128             maxb = <span class="keyword">false</span>;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130             <span class="comment">// First to ensure id is loaded for logging later</span>
<a name="l00131"></a>00131             <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;id&quot;</span> )
<a name="l00132"></a>00132             {
<a name="l00133"></a>00133                 found = <span class="keyword">true</span>;
<a name="l00134"></a>00134                 <a class="code" href="classThing.xhtml#a946fbf68bcd90ea5b26f4cce0b37132b" title="Sets the id of this Thing.">sId</a>( value );
<a name="l00135"></a>00135             }
<a name="l00136"></a>00136             <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;name&quot;</span> )
<a name="l00137"></a>00137             {
<a name="l00138"></a>00138                 found = <span class="keyword">true</span>;
<a name="l00139"></a>00139                 <a class="code" href="classThing.xhtml#a69568f79edcdf1b0225f1b764a7ceb41" title="Sets the name of this Thing.">sName</a>( value );
<a name="l00140"></a>00140             }
<a name="l00141"></a>00141             <a class="code" href="namespaceUtils.xhtml#aba8fca9daa0f767d7f5af5e2b1d6b81d" title="If the contents of keyd == valu, assigns loc = item.">Utils::KeySet</a>( <span class="keyword">true</span>, found, key, <span class="stringliteral">&quot;zone&quot;</span>, value, <a class="code" href="classLocation.xhtml#a78f355da90860faba8b9884ac96c56b8">m_zone</a> );
<a name="l00142"></a>00142 
<a name="l00143"></a>00143             <span class="keywordflow">if</span> ( !found )
<a name="l00144"></a>00144                 <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Location::Unserialize()-&gt;Utils::KeySet()-&gt; key not found: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( key ) );
<a name="l00145"></a>00145 
<a name="l00146"></a>00146             <span class="keywordflow">if</span> ( maxb )
<a name="l00147"></a>00147                 <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( finfo, <span class="stringliteral">&quot;Location::Unserialize()-&gt;Utils::KeySet()-&gt; location id %s, key %s has illegal value %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( <a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( key ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) );
<a name="l00148"></a>00148 
<a name="l00149"></a>00149             <span class="keywordflow">break</span>;
<a name="l00150"></a>00150         }
<a name="l00151"></a>00151     }
<a name="l00152"></a>00152 
<a name="l00153"></a>00153     <a class="code" href="namespaceUtils.xhtml#a7008f8effca71806721305d1834bde1e" title="Completes a read from a file.">Utils::FileClose</a>( ifs );
<a name="l00154"></a>00154 
<a name="l00155"></a>00155     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00156"></a>00156 }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 <span class="comment">/* Query */</span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="comment">/* Manipulate */</span>
<a name="l00161"></a>00161 
<a name="l00162"></a>00162 <span class="comment">/* Internal */</span>
<a name="l00166"></a><a class="code" href="classLocation.xhtml#a87790c14997fd8cdd12080c78c9794bb">00166</a> <a class="code" href="classLocation.xhtml#a87790c14997fd8cdd12080c78c9794bb" title="Constructor for the Location class.">Location::Location</a>()
<a name="l00167"></a>00167 {
<a name="l00168"></a>00168     <a class="code" href="classLocation.xhtml#aef7bb3607c4c22375a1fae5518962ff6">m_file</a>.clear();
<a name="l00169"></a>00169     <a class="code" href="classLocation.xhtml#a78f355da90860faba8b9884ac96c56b8">m_zone</a>.clear();
<a name="l00170"></a>00170 
<a name="l00171"></a>00171     <span class="keywordflow">return</span>;
<a name="l00172"></a>00172 }
<a name="l00173"></a>00173 
<a name="l00177"></a><a class="code" href="classLocation.xhtml#af5be2c6550bbd96137cbb3144ec3c529">00177</a> <a class="code" href="classLocation.xhtml#af5be2c6550bbd96137cbb3144ec3c529" title="Destructor for the Location class.">Location::~Location</a>()
<a name="l00178"></a>00178 {
<a name="l00179"></a>00179     <span class="keywordflow">return</span>;
<a name="l00180"></a>00180 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Wed May 1 2013 09:59:13 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
