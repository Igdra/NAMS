<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>NAMS - Not Another MUD Server: Server Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NAMS - Not Another MUD Server
   </div>
   <div id="projectbrief">NAMS is a C++ MUD server with the primary goals of a safe, modular design and a server core that is substantially decouppled from game logic.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a>  </div>
  <div class="headertitle">
<div class="title">Server Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a> namespace contains OS interface functions.  
</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classServer_1_1Config.xhtml">Config</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runtime settings.  <a href="classServer_1_1Config.xhtml#details">More...</a><br/></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classServer_1_1Global.xhtml">Global</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container for global variables.  <a href="classServer_1_1Global.xhtml#details">More...</a><br/></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classServer_1_1Stats.xhtml">Stats</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runtime statistics.  <a href="classServer_1_1Stats.xhtml#details">More...</a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Core</div></td></tr>
<tr class="memitem:ae1bb8d3c7c71119bae6dd4205fd6c0cc"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#ae1bb8d3c7c71119bae6dd4205fd6c0cc">Broadcast</a> (const string &amp;msg)</td></tr>
<tr class="memdesc:ae1bb8d3c7c71119bae6dd4205fd6c0cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message to all clients connected to the <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a>.  <a href="#ae1bb8d3c7c71119bae6dd4205fd6c0cc"></a><br/></td></tr>
<tr class="memitem:a45782df02e28df1c52c2a8edb90264e1"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a45782df02e28df1c52c2a8edb90264e1">BuildPlugin</a> (const string &amp;file, const bool &amp;force=false)</td></tr>
<tr class="memdesc:a45782df02e28df1c52c2a8edb90264e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compile a <a class="el" href="classPlugin.xhtml" title="Functions that are indepdently built and loaded to extend the server core via an API.">Plugin</a> file.  <a href="#a45782df02e28df1c52c2a8edb90264e1"></a><br/></td></tr>
<tr class="memitem:a21b284fbb08f1d61510945f64d0673cb"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a21b284fbb08f1d61510945f64d0673cb">LinkExits</a> ()</td></tr>
<tr class="memdesc:a21b284fbb08f1d61510945f64d0673cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Links <a class="el" href="classExit.xhtml" title="A link between two locations within the game world.">Exit</a> pointers together after all locations are loaded.  <a href="#a21b284fbb08f1d61510945f64d0673cb"></a><br/></td></tr>
<tr class="memitem:ac2e1d14caee54a38a89c2394abe6e5a5"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#ac2e1d14caee54a38a89c2394abe6e5a5">LoadCommands</a> ()</td></tr>
<tr class="memdesc:ac2e1d14caee54a38a89c2394abe6e5a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search all subfolders of <a class="el" href="config_8h.xhtml#af2e75e297c4447df28b526dff66734ce" title="Directory for commands to be loaded from.">CFG_DAT_DIR_COMMAND</a> and call <a class="el" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48" title="Load a plugin command from CFG_DAT_DIR_OBJ.">Command::New()</a> to load each file found to memory.  <a href="#ac2e1d14caee54a38a89c2394abe6e5a5"></a><br/></td></tr>
<tr class="memitem:a9b8efad79a32f2356d431788449e1f82"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a9b8efad79a32f2356d431788449e1f82">LoadLocations</a> ()</td></tr>
<tr class="memdesc:a9b8efad79a32f2356d431788449e1f82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search all subfolders of <a class="el" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a> and call <a class="el" href="classLocation.xhtml#a6396aba5eab9bcbabb000c3f6478e1a2" title="Create a new location.">Location::New()</a> to load each file found to memory.  <a href="#a9b8efad79a32f2356d431788449e1f82"></a><br/></td></tr>
<tr class="memitem:a0a8c7c124f8cc8e5e6a9c7b067be5ff5"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a0a8c7c124f8cc8e5e6a9c7b067be5ff5">LoadObjects</a> ()</td></tr>
<tr class="memdesc:a0a8c7c124f8cc8e5e6a9c7b067be5ff5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search all subfolders of <a class="el" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a> and call <a class="el" href="classObject.xhtml#abbf694ca0643b6bd1e0b5fbc8d6ade24" title="Create a new object.">Object::New()</a> to load each file found to memory.  <a href="#a0a8c7c124f8cc8e5e6a9c7b067be5ff5"></a><br/></td></tr>
<tr class="memitem:a39dbe16fdc8c5f6fbd678c6540fbcd6c"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a39dbe16fdc8c5f6fbd678c6540fbcd6c">PollSockets</a> ()</td></tr>
<tr class="memdesc:a39dbe16fdc8c5f6fbd678c6540fbcd6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Poll all <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> objects that are communicating with the associated <a class="el" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a> object.  <a href="#a39dbe16fdc8c5f6fbd678c6540fbcd6c"></a><br/></td></tr>
<tr class="memitem:a266931bde9b1955346955140986d2b00"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a266931bde9b1955346955140986d2b00">ProcessEvents</a> ()</td></tr>
<tr class="memdesc:a266931bde9b1955346955140986d2b00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process any scheduled events tied to the <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a>.  <a href="#a266931bde9b1955346955140986d2b00"></a><br/></td></tr>
<tr class="memitem:a2b4cec469bb99c2a45e49de5ba74d1ae"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a2b4cec469bb99c2a45e49de5ba74d1ae">ProcessInput</a> ()</td></tr>
<tr class="memdesc:a2b4cec469bb99c2a45e49de5ba74d1ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes input from all active <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> objects.  <a href="#a2b4cec469bb99c2a45e49de5ba74d1ae"></a><br/></td></tr>
<tr class="memitem:a16ea0639731dee10e1a253375b508a02"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a16ea0639731dee10e1a253375b508a02">RebootRecovery</a> (const bool &amp;reboot)</td></tr>
<tr class="memdesc:a16ea0639731dee10e1a253375b508a02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recovers the server state and re-connects client sockets after a reboot.  <a href="#a16ea0639731dee10e1a253375b508a02"></a><br/></td></tr>
<tr class="memitem:a4073e768d93ce18c25cb5996f4cd3729"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a4073e768d93ce18c25cb5996f4cd3729">ReloadCommand</a> (const string &amp;name)</td></tr>
<tr class="memdesc:a4073e768d93ce18c25cb5996f4cd3729"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reloads a <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> <a class="el" href="classPlugin.xhtml" title="Functions that are indepdently built and loaded to extend the server core via an API.">Plugin</a>.  <a href="#a4073e768d93ce18c25cb5996f4cd3729"></a><br/></td></tr>
<tr class="memitem:a19a1e493e1fb50a56d9c77332543d565"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a19a1e493e1fb50a56d9c77332543d565">Startup</a> (const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;desc=0)</td></tr>
<tr class="memdesc:a19a1e493e1fb50a56d9c77332543d565"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start the NAMS <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a>. Responsible for calling all critical boot-time functions such as <a class="el" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a> initialization, <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> loading, etc.  <a href="#a19a1e493e1fb50a56d9c77332543d565"></a><br/></td></tr>
<tr class="memitem:a9b7082bbc9faca6eb84180f856116762"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762">Shutdown</a> (const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;status)</td></tr>
<tr class="memdesc:a9b7082bbc9faca6eb84180f856116762"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a clean shutdown of the NAMS <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a> providing a chance to complete disk writes and free all memory to verify there are no leaks.  <a href="#a9b7082bbc9faca6eb84180f856116762"></a><br/></td></tr>
<tr class="memitem:a50b81aa91d8fdaee6f52c5c5ec987990"><td class="memItemLeft" align="right" valign="top">const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a50b81aa91d8fdaee6f52c5c5ec987990">Update</a> ()</td></tr>
<tr class="memdesc:a50b81aa91d8fdaee6f52c5c5ec987990"><td class="mdescLeft">&#160;</td><td class="mdescRight">The core update loop of NAMS. This loop spawns all other subsystem update routines and then sleeps for ( <a class="el" href="macros_8h.xhtml#a5fc45be6b0bb71dc5d4c6390d98bf3ee" title="This is the maximum value usleep will take per man (3) usleep – 1 second.">USLEEP_MAX</a> / <a class="el" href="config_8h.xhtml#abf59791d9bc371bb841717a963babfc3" title="How many cycles per second should be processed.">CFG_GAM_PULSE_RATE</a> ) each cycle.  <a href="#a50b81aa91d8fdaee6f52c5c5ec987990"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Query</div></td></tr>
<tr class="memitem:afe8c6faa17f98a6ff4b883bcfad7bccb"><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#afe8c6faa17f98a6ff4b883bcfad7bccb">gHostname</a> ()</td></tr>
<tr class="memdesc:afe8c6faa17f98a6ff4b883bcfad7bccb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the hostname of the machine that NAMS is running on.  <a href="#afe8c6faa17f98a6ff4b883bcfad7bccb"></a><br/></td></tr>
<tr class="memitem:a0cd8d593edfecdbb98403c2a2c203d64"><td class="memItemLeft" align="right" valign="top">const string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceServer.xhtml#a0cd8d593edfecdbb98403c2a2c203d64">gStatus</a> ()</td></tr>
<tr class="memdesc:a0cd8d593edfecdbb98403c2a2c203d64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Display miscellaneous data about the NAMS <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a>, such as total data transfered, objects in memory, etc.  <a href="#a0cd8d593edfecdbb98403c2a2c203d64"></a><br/></td></tr>
</table>
<h2>Function Documentation</h2>
<a class="anchor" id="ae1bb8d3c7c71119bae6dd4205fd6c0cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::Broadcast </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>The message to be sent. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> *client = NULL;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*, si );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> )</div>
<div class="line">    {</div>
<div class="line">        client = *si;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> = ++si;</div>
<div class="line"></div>
<div class="line">        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( msg );</div>
<div class="line">        client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>();</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_ae1bb8d3c7c71119bae6dd4205fd6c0cc_cgraph.svg" width="560" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_ae1bb8d3c7c71119bae6dd4205fd6c0cc_icgraph.svg" width="100%" height="393"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a45782df02e28df1c52c2a8edb90264e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Server::BuildPlugin </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>force</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">file</td><td>The file to be compiled. The file extension should end in <a class="el" href="config_8h.xhtml#a47a6c4a9a6b1e4fbcd8edeee92314a25" title="File extension for files to be compiled.">CFG_PLG_BUILD_EXT_IN</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">force</td><td>Force a rebuild even if the output file already exists. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if a fault is experienced trying to build the plugin. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the <a class="el" href="classPlugin.xhtml" title="Functions that are indepdently built and loaded to extend the server core via an API.">Plugin</a> builds successfully. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    FILE* popen_fil = NULL;</div>
<div class="line">    <span class="keywordtype">string</span> build_cmd, build_res;</div>
<div class="line">    <span class="keywordtype">char</span> buf[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>] = {<span class="charliteral">&#39;\0&#39;</span>};</div>
<div class="line"></div>
<div class="line">    <span class="comment">// No need to run if the output file already exists and a rebuild wasn&#39;t forced</span></div>
<div class="line">    <span class="keywordflow">if</span> ( <a class="code" href="namespaceUtils.xhtml#a158e1deb611937a6313e8683fe7db3fc" title="Determines if a file is readable.">Utils::iReadable</a>( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a7e0533ce20f3c090bdf24cc750916edb" title="Directory for plugins to be loaded from.">CFG_DAT_DIR_OBJ</a>, file, <a class="code" href="config_8h.xhtml#aec22aee0979a918423c5743237a25d81" title="File extension for files after they are compiled.">CFG_PLG_BUILD_EXT_OUT</a> ) ) &amp;&amp; !force )</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"></div>
<div class="line">    build_cmd = <a class="code" href="config_8h.xhtml#a7c9c9701683a057772f0aa1de56d7285" title="The compiler command to use when building plugins.">CFG_PLG_BUILD_CMD</a> <span class="stringliteral">&quot; -o &quot;</span>;</div>
<div class="line">    build_cmd.append( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#a7e0533ce20f3c090bdf24cc750916edb" title="Directory for plugins to be loaded from.">CFG_DAT_DIR_OBJ</a>, file, <a class="code" href="config_8h.xhtml#aec22aee0979a918423c5743237a25d81" title="File extension for files after they are compiled.">CFG_PLG_BUILD_EXT_OUT</a> ) );</div>
<div class="line">    build_cmd.append( <span class="stringliteral">&quot; &quot;</span> );</div>
<div class="line">    build_cmd.append( <a class="code" href="namespaceUtils.xhtml#ad21617b756ef242fbc66e63dec3e4e4d" title="Returns a string consisting of directory/file.ext.">Utils::DirPath</a>( <a class="code" href="config_8h.xhtml#af2e75e297c4447df28b526dff66734ce" title="Directory for commands to be loaded from.">CFG_DAT_DIR_COMMAND</a>, file ) );</div>
<div class="line">    build_cmd.append( <span class="stringliteral">&quot; &quot;</span> <a class="code" href="config_8h.xhtml#aaa9f269d301804d5b6963323f2a049a6" title="All build options passed during compiling a plugin.">CFG_PLG_BUILD_OPT</a> );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Pipe the build_cmd to the host for processing</span></div>
<div class="line">    <span class="keywordflow">if</span> ( ( popen_fil = popen( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( build_cmd ), <span class="stringliteral">&quot;r&quot;</span> ) ) != NULL )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">while</span>( fgets( buf, <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>, popen_fil ) != NULL )</div>
<div class="line">            build_res.append( buf );</div>
<div class="line"></div>
<div class="line">        pclose( popen_fil );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Something went wrong</span></div>
<div class="line">    <span class="keywordflow">if</span> ( !build_res.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::BuildPlugin()-&gt;returned error: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( build_res ) );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Plugin built successfully: %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a45782df02e28df1c52c2a8edb90264e1_cgraph.svg" width="320" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a45782df02e28df1c52c2a8edb90264e1_icgraph.svg" width="651" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="afe8c6faa17f98a6ff4b883bcfad7bccb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string Server::gHostname </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">string</td><td>A string is returned containing either "(unknown)" or the machine hostname. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000010">Todo:</a></b></dt><dd>Move this to Server::sHostname() and redo this func as a simple getter. Don't need to query the host server multiple times. </dd></dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00927">927</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <span class="keywordtype">string</span> output;</div>
<div class="line">    <span class="keywordtype">char</span> hostname[<a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a>] = {<span class="charliteral">&#39;\0&#39;</span>};</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ::gethostname( hostname, <a class="code" href="config_8h.xhtml#afb71aab62bfe0df8712e4fdadc30e456" title="Maximum length of all char type buffers.">CFG_STR_MAX_BUFLEN</a> - 1 ) &lt; 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::gHostname()-&gt;gethostname()-&gt;&quot;</span> );</div>
<div class="line">        output = <span class="stringliteral">&quot;(unknown)&quot;</span>;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">return</span> output;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    output = hostname;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> output;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_afe8c6faa17f98a6ff4b883bcfad7bccb_icgraph.svg" width="622" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0cd8d593edfecdbb98403c2a2c203d64"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const string Server::gStatus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">string</td><td>A string is returned containing a pre-formatted data display of all <a class="el" href="namespaceServer.xhtml" title="The Server namespace contains OS interface functions.">Server</a> information. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00950">950</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordtype">string</span> output;</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a83d6866a5b3c76f2ad436a370ecd5b5a" title="An unsigned integer value based upon system limits.">uint_t</a> i = 0, x = 0;</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Header</span></div>
<div class="line">    output += <span class="stringliteral">&quot;        Status Report for &quot;</span> <a class="code" href="config_8h.xhtml#ae0189326402738016ca074f43606978f" title="The current server version.">CFG_STR_VERSION</a> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line">    x = output.length() - 2; <span class="comment">// Knock two off for the CRLF</span></div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span>;</div>
<div class="line">    <span class="keywordflow">for</span> ( i = 0; i &lt; x; i++ )</div>
<div class="line">        output += <span class="stringliteral">&quot;-&quot;</span>;</div>
<div class="line">    output += CRLF <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Time info</span></div>
<div class="line">    output += <span class="stringliteral">&quot;The MUD was last booted at &quot;</span> + <a class="code" href="namespaceUtils.xhtml#a2b2dad8fa1999271cf613dc735f851d4" title="Returns a given time as a string.">Utils::StrTime</a>( chrono::high_resolution_clock::to_time_t( <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#aa67c259fe2ac90523a49a261721cde47">m_time_boot</a> ) ) + <span class="stringliteral">&quot;.&quot;</span> + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line">    output += <span class="stringliteral">&quot;The current system time is &quot;</span> + <a class="code" href="namespaceUtils.xhtml#a2b2dad8fa1999271cf613dc735f851d4" title="Returns a given time as a string.">Utils::StrTime</a>( chrono::high_resolution_clock::to_time_t( <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a38310cb58e1f644fa74ab8e1f5321e4e">m_time_current</a> ) ) + <span class="stringliteral">&quot;.&quot;</span> + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Memory info</span></div>
<div class="line">    output += CRLF <span class="stringliteral">&quot;Objects in Memory&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Commands&quot;</span>, <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.size() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Events&quot;</span>, <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.size() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Exits&quot;</span>, <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.size() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Locations&quot;</span>, <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.size() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Object Templates&quot;</span>, <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.size() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Unique Characters&quot;</span>, <a class="code" href="list_8cpp.xhtml#a6e5a305399253b1fdc5f2ee6b6aece2c" title="All characters that exist within the server.">character_list</a>.size() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Unique Objects&quot;</span>, <a class="code" href="list_8cpp.xhtml#a408253363e78188e2f70717ee46e7fcc" title="All objects that exist as a copy of a template within the server.">object_list</a>.size() ) + CRLF;</div>
<div class="line"></div>
<div class="line">    <span class="comment">//Runtime statistics</span></div>
<div class="line">    output += CRLF <span class="stringliteral">&quot;Runtime Statistics&quot;</span> <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Directories Opened&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> ) + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Directories Closed&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a> ) + <a class="code" href="macros_8h.xhtml#a6cb23a858b0a21bdaa644b9181dc415f" title="Output a carriage return \ line feed.">CRLF</a>;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Sockets Opened&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a1f596bc714002b643097cf93d9760ea1" title="Returns the combined number of SocketClient and SocketServer objects that have been created...">gSocketOpen</a>() ) + CRLF;</div>
<div class="line">    output += <span class="stringliteral">&quot;    &quot;</span> + <a class="code" href="utils_8h.xhtml#a1e42e9736fc6dc3c7450d100f4267a29">Utils::FormatString</a>( 0, <span class="stringliteral">&quot;%-5lu Total Sockets Closed&quot;</span>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#ab8b67dac3edf34148bfbc4059fca8b97" title="Returns the combined number of SocketClient and SocketServer objects that have been destroyed...">gSocketClose</a>() ) + CRLF;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> output;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a0cd8d593edfecdbb98403c2a2c203d64_cgraph.svg" width="384" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a21b284fbb08f1d61510945f64d0673cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::LinkExits </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00149">149</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#af138bcf3c5cc79a8d4649c54ed8cfcf4" title="Define a bitset variable (name) with UTILS_TYPE_ERROR already enabled.">UFLAGS_E</a>( flags );</div>
<div class="line">    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line">    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>*, li );</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <a class="code" href="classExit.xhtml" title="A link between two locations within the game world.">Exit</a>*, ei );</div>
<div class="line">    vector&lt;Exit*&gt; loc_exits;</div>
<div class="line">    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* destination = NULL;</div>
<div class="line">    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* location = NULL;</div>
<div class="line">    <a class="code" href="classExit.xhtml" title="A link between two locations within the game world.">Exit</a>* exit = NULL;</div>
<div class="line"></div>
<div class="line">    start = chrono::high_resolution_clock::now();</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a5358a6cea3578d0e09e2b9db56281941" title="String to output prior to linking exit pointers between locations.">CFG_STR_FILE_EXIT_READ</a> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( li = <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.begin(); li != <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.end(); li++ )</div>
<div class="line">    {</div>
<div class="line">        location = *li;</div>
<div class="line">        loc_exits = location-&gt;<a class="code" href="classLocation.xhtml#af7a9d1256754395a737da603c930ea56" title="Returns the list of Exits associated to this Location.">gExits</a>();</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">for</span> ( ei = loc_exits.begin(); ei != loc_exits.end(); ei++ )</div>
<div class="line">        {</div>
<div class="line">            exit = *ei;</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">if</span> ( ( destination = <a class="code" href="namespaceHandler.xhtml#a57dc60ce5522b41f1ab98b83de76779f" title="Locates a Location associated with the game.">Handler::FindLocation</a>( exit-&gt;<a class="code" href="classExit.xhtml#a365f2a3f411df703cb2726ce7a83e0f8" title="Returns the destination id of the Exit.">gDestId</a>(), <a class="code" href="enum_8h.xhtml#a935364c6740bf6ab6b2fa9969ab6a406a9316081309157c0cf6f4508b8d91fedd">HANDLER_FIND_ID</a> ) ) == NULL )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LinkExits()-&gt; location %s has invalid exit to %s&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( location-&gt;<a class="code" href="classThing.xhtml#aea5dad4f4241b325cdf64b232e84e602" title="Returns the id associated with this Thing.">gId</a>() ), <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( exit-&gt;<a class="code" href="classExit.xhtml#a365f2a3f411df703cb2726ce7a83e0f8" title="Returns the destination id of the Exit.">gDestId</a>() ) );</div>
<div class="line">                location-&gt;<a class="code" href="classLocation.xhtml#aca658255ecc7a1f000913f3aefd54fad" title="Removes an Exit associated with this Location.">RemoveExit</a>( exit );</div>
<div class="line">                exit-&gt;<a class="code" href="classExit.xhtml#ac490c605f6b1581429cc59290e7bd400" title="Unload an exit from memory that was previously loaded via Exit::New().">Delete</a>();</div>
<div class="line">            }</div>
<div class="line">            <span class="keywordflow">else</span></div>
<div class="line">                exit-&gt;<a class="code" href="classExit.xhtml#ae4b375ca6875ef63c9de87bd4f945323" title="Sets the target destination of this Exit.">sDestination</a>( destination );</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    finish = chrono::high_resolution_clock::now();</div>
<div class="line">    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Linked %lu exits in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Linked %lu exits in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.size(), duration );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a21b284fbb08f1d61510945f64d0673cb_cgraph.svg" width="555" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a21b284fbb08f1d61510945f64d0673cb_icgraph.svg" width="411" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ac2e1d14caee54a38a89c2394abe6e5a5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Server::LoadCommands </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if a fault is experienced trying to obtain a directory listing to process. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if 0 or more <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> objects are loaded from disk. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00198">198</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line">    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line">    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* cmd = NULL;</div>
<div class="line">    multimap&lt;bool,string&gt; files;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keywordtype">bool</span>,<span class="keywordtype">string</span>, mi );</div>
<div class="line"></div>
<div class="line">    start = chrono::high_resolution_clock::now();</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#acb9463983ccf03f1775ef48719c8ea6e" title="String to output prior to loading command plugins.">CFG_STR_FILE_COMMAND_READ</a> );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Populate the multimap with a recursive listing of the commands folder</span></div>
<div class="line">    <a class="code" href="namespaceUtils.xhtml#a995fed3bf7ff41788f5b3dbdc6a70ecb" title="Return a multimap of a specified directory tree on disk.">Utils::ListDirectory</a>( <a class="code" href="config_8h.xhtml#af2e75e297c4447df28b526dff66734ce" title="Directory for commands to be loaded from.">CFG_DAT_DIR_COMMAND</a>, <span class="keyword">true</span>, <span class="keyword">false</span>, files, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( files.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::LoadCommands()-&gt;Utils::ListDirectory()-&gt; CFG_DAT_DIR_COMMAND returned NULL&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( mi = files.begin(); mi != files.end(); mi++ )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( mi-&gt;first == <a class="code" href="enum_8h.xhtml#a9325070b1daf70dbe43f7fb9a341aaf2">UTILS_IS_FILE</a> &amp;&amp; ( mi-&gt;second.substr( mi-&gt;second.find_last_of( <span class="stringliteral">&quot;.&quot;</span> ) + 1 ) == <a class="code" href="config_8h.xhtml#a47a6c4a9a6b1e4fbcd8edeee92314a25" title="File extension for files to be compiled.">CFG_PLG_BUILD_EXT_IN</a> ) )</div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a45782df02e28df1c52c2a8edb90264e1" title="Compile a Plugin file.">BuildPlugin</a>( mi-&gt;second ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadCommand()-&gt;Server::BuildPlugin()-&gt; file %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            cmd = <span class="keyword">new</span> <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>();</div>
<div class="line">            <span class="keywordflow">if</span> ( !cmd-&gt;<a class="code" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48" title="Load a plugin command from CFG_DAT_DIR_OBJ.">New</a>( mi-&gt;second ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadCommands()-&gt;Command::New()-&gt; command %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line">                cmd-&gt;<a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Delete</a>();</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    finish = chrono::high_resolution_clock::now();</div>
<div class="line">    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu commands in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu commands in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.size(), duration );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_ac2e1d14caee54a38a89c2394abe6e5a5_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_ac2e1d14caee54a38a89c2394abe6e5a5_icgraph.svg" width="462" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a9b8efad79a32f2356d431788449e1f82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Server::LoadLocations </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if a fault is experienced trying to obtain a directory listing to process. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if 0 or more <a class="el" href="classLocation.xhtml" title="A physical location within the game world.">Location</a> objects are loaded from disk. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00252">252</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line">    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line">    <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>* loc = NULL;</div>
<div class="line">    multimap&lt;bool,string&gt; files;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keywordtype">bool</span>,<span class="keywordtype">string</span>, mi );</div>
<div class="line"></div>
<div class="line">    start = chrono::high_resolution_clock::now();</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a598a5b0092285bf2bd4bfdd628cd9d02" title="String to output prior to loading location files.">CFG_STR_FILE_LOCATION_READ</a> );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Populate the multimap with a recursive listing of the locations folder</span></div>
<div class="line">    <a class="code" href="namespaceUtils.xhtml#a995fed3bf7ff41788f5b3dbdc6a70ecb" title="Return a multimap of a specified directory tree on disk.">Utils::ListDirectory</a>( <a class="code" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a>, <span class="keyword">true</span>, <span class="keyword">true</span>, files, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( files.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::LoadLocations()-&gt;Utils::ListDirectory()-&gt; CFG_DAT_DIR_WORLD returned NULL&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( mi = files.begin(); mi != files.end(); mi++ )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( mi-&gt;first == <a class="code" href="enum_8h.xhtml#a9325070b1daf70dbe43f7fb9a341aaf2">UTILS_IS_FILE</a> &amp;&amp; ( mi-&gt;second.substr( mi-&gt;second.find_last_of( <span class="stringliteral">&quot;.&quot;</span> ) + 1 ) == <a class="code" href="config_8h.xhtml#a56fdb354a0a0aa4879db1e77a32d824b" title="File extension to use for location files.">CFG_DAT_FILE_LOC_EXT</a> ) )</div>
<div class="line">        {</div>
<div class="line">            loc = <span class="keyword">new</span> <a class="code" href="classLocation.xhtml" title="A physical location within the game world.">Location</a>();</div>
<div class="line">            <span class="keywordflow">if</span> ( !loc-&gt;<a class="code" href="classLocation.xhtml#a6396aba5eab9bcbabb000c3f6478e1a2" title="Create a new location.">New</a>( mi-&gt;second ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadLocations()-&gt;Location::New()-&gt; location %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line">                loc-&gt;<a class="code" href="classLocation.xhtml#a2640eee7c5e9b2b08f84a401f7beab53" title="Unload a location from memory that was previously loaded via Location::New().">Delete</a>();</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    finish = chrono::high_resolution_clock::now();</div>
<div class="line">    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu locations in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu locations in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.size(), duration );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a9b8efad79a32f2356d431788449e1f82_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a9b8efad79a32f2356d431788449e1f82_icgraph.svg" width="448" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0a8c7c124f8cc8e5e6a9c7b067be5ff5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Server::LoadObjects </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if a fault is experienced trying to obtain a directory listing to process. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if 0 or more <a class="el" href="classObject.xhtml" title="A physical object within the game world.">Object</a> objects are loaded from disk. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00300">300</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    chrono::high_resolution_clock::time_point start, finish;</div>
<div class="line">    <span class="keywordtype">double</span> duration = <a class="code" href="limits_8h.xhtml#ace307ffbe4c934f4565176f184b38d78" title="The minimum value of any uint_t variable.">uintmin_t</a>;</div>
<div class="line">    <a class="code" href="classObject.xhtml" title="A physical object within the game world.">Object</a>* obj = NULL;</div>
<div class="line">    multimap&lt;bool,string&gt; files;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac49d0f3d55253bd7403da9e5fcab7504" title="Define an iterator variable (name) of (type1,type2) using (container).">MITER</a>( multimap, <span class="keywordtype">bool</span>,<span class="keywordtype">string</span>, mi );</div>
<div class="line"></div>
<div class="line">    start = chrono::high_resolution_clock::now();</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#a895676d2a595ac29e7cc4e9b6be5ffa7" title="String to output prior to loading object files.">CFG_STR_FILE_OBJECT_READ</a> );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Populate the multimap with a recursive listing of the objectss folder</span></div>
<div class="line">    <a class="code" href="namespaceUtils.xhtml#a995fed3bf7ff41788f5b3dbdc6a70ecb" title="Return a multimap of a specified directory tree on disk.">Utils::ListDirectory</a>( <a class="code" href="config_8h.xhtml#aeb234d51b0a7b1a2c836059fb76c5770" title="Directory for game world files: rooms, objects, NPCs, etc.">CFG_DAT_DIR_WORLD</a>, <span class="keyword">true</span>, <span class="keyword">true</span>, files, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( files.empty() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::LoadObjects()-&gt;Utils::ListDirectory()-&gt; CFG_DAT_DIR_WORLD returned NULL&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( mi = files.begin(); mi != files.end(); mi++ )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( mi-&gt;first == <a class="code" href="enum_8h.xhtml#a9325070b1daf70dbe43f7fb9a341aaf2">UTILS_IS_FILE</a> &amp;&amp; ( mi-&gt;second.substr( mi-&gt;second.find_last_of( <span class="stringliteral">&quot;.&quot;</span> ) + 1 ) == <a class="code" href="config_8h.xhtml#ac6f3fea2937f933a91da70fd5059dd9d" title="File extension to use for object files.">CFG_DAT_FILE_OBJ_EXT</a> ) )</div>
<div class="line">        {</div>
<div class="line">            obj = <span class="keyword">new</span> <a class="code" href="classObject.xhtml" title="A physical object within the game world.">Object</a>();</div>
<div class="line">            <span class="keywordflow">if</span> ( !obj-&gt;<a class="code" href="classObject.xhtml#abbf694ca0643b6bd1e0b5fbc8d6ade24" title="Create a new object.">New</a>( mi-&gt;second ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::LoadObjects()-&gt;Object::New()-&gt; object %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( mi-&gt;second ) );</div>
<div class="line">                obj-&gt;<a class="code" href="classObject.xhtml#a3a18a6bfb53e565749e48f32f19141c6" title="Unload an object from memory that was previously loaded via Object::New() or Object::Clone().">Delete</a>();</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    finish = chrono::high_resolution_clock::now();</div>
<div class="line">    <span class="keywordflow">if</span> ( ( duration = chrono::duration_cast&lt;chrono::milliseconds&gt;( finish - start ).count() ) &gt; 1000 )</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu objects in %1.2fs.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.size(), ( duration / 1000 ) );</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;Loaded %lu objects in %1.0fms.&quot;</span>, <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.size(), duration );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a0a8c7c124f8cc8e5e6a9c7b067be5ff5_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a0a8c7c124f8cc8e5e6a9c7b067be5ff5_icgraph.svg" width="435" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a39dbe16fdc8c5f6fbd678c6540fbcd6c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Server::PollSockets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the file descriptor of the <a class="el" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a> is invalid and no further processing can take place. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the file descriptor of the <a class="el" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a> is valid and all <a class="el" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> objects were polled successfully. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00348">348</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <span class="keyword">static</span> timespec static_time;</div>
<div class="line">    fd_set exc_set;</div>
<div class="line">    fd_set in_set;</div>
<div class="line">    fd_set out_set;</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*, si );</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>* socket_client;</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> client_desc = 0, max_desc = 0, server_desc = 0;</div>
<div class="line"></div>
<div class="line">    FD_ZERO( &amp;exc_set );</div>
<div class="line">    FD_ZERO( &amp;in_set );</div>
<div class="line">    FD_ZERO( &amp;out_set );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( ( server_desc = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketServer::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, server_desc );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    FD_SET( server_desc, &amp;in_set );</div>
<div class="line">    max_desc = server_desc;</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Build three file descriptor lists to be polled</span></div>
<div class="line">    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> )</div>
<div class="line">    {</div>
<div class="line">        socket_client = *si;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> = ++si;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a92a268dc450fb7f42df61de1105a0416" title="Checks if a client is marked as quitting.">Quitting</a>() )</div>
<div class="line">        {</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>();</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        max_desc = max( server_desc, client_desc );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Populate lists of: exceptions, pending input, pending output</span></div>
<div class="line">        FD_SET( client_desc, &amp;exc_set );</div>
<div class="line">        FD_SET( client_desc, &amp;in_set );</div>
<div class="line">        FD_SET( client_desc, &amp;out_set );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Ensure the file descriptor lists can be watched for updates</span></div>
<div class="line">    <span class="keywordflow">if</span> ( ::pselect( max_desc + 1, &amp;in_set, &amp;out_set, &amp;exc_set, &amp;static_time, 0 ) &lt; 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;pselect()-&gt;&quot;</span> );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Process new connections</span></div>
<div class="line">    <span class="keywordflow">if</span> ( FD_ISSET( server_desc, &amp;in_set ) )</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a>-&gt;<a class="code" href="classSocketServer.xhtml#afdbc60c3bc840875d2214b59c6213f63" title="Accept a new connection on the listening port.">Accept</a>();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Process faulted connections</span></div>
<div class="line">    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> )</div>
<div class="line">    {</div>
<div class="line">        socket_client = *si;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> = ++si;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Found a faulted socket in the exceptions list</span></div>
<div class="line">        <span class="keywordflow">if</span> ( FD_ISSET( client_desc, &amp;exc_set ) )</div>
<div class="line">        {</div>
<div class="line">            <span class="comment">// Don&#39;t try to save characters on faulty clients, just boot them</span></div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt; disconnecting faulted descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Process input from active connections</span></div>
<div class="line">    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> )</div>
<div class="line">    {</div>
<div class="line">        socket_client = *si;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> = ++si;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            <span class="comment">// todo: save character</span></div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Found an active socket in the input list</span></div>
<div class="line">        <span class="keywordflow">if</span> ( FD_ISSET( client_desc, &amp;in_set ) )</div>
<div class="line">        {</div>
<div class="line">            <span class="comment">// Pending input; clear the idle timeout</span></div>
<div class="line">            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( 0 ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::sIdle()-&gt; descriptor %ld returned false setting idle: 0&quot;</span>, client_desc );</div>
<div class="line">                <span class="comment">// todo: save character</span></div>
<div class="line">                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            <span class="comment">// Read input, save game character and disconnect socket if unable to</span></div>
<div class="line">            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9ee09f452d900e288b2aa187561ef05d" title="Receive data from the client and append it to a receive buffer.">Recv</a>() )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::Recv()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line"></div>
<div class="line">                <span class="comment">// Detach the Character as linkdead</span></div>
<div class="line">                <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa0badca8f614127e98281995c02cb385" title="Returns the connection state of the client from SOC_STATE.">gState</a>() &gt;= <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9461d3679b682710a261f18d7876a395">SOC_STATE_PLAYING</a> )</div>
<div class="line">                {</div>
<div class="line">                    <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() != NULL )</div>
<div class="line">                    {</div>
<div class="line">                        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>() != NULL )</div>
<div class="line">                        {</div>
<div class="line">                            <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>* <span class="keyword">event</span> = <span class="keyword">new</span> <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>();</div>
<div class="line"></div>
<div class="line">                            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( <a class="code" href="enum_8h.xhtml#a183c84f479d3dfb8ea89c5fa6db3c5c7a9d096c75b5e31056089c1e20afad749e">SOC_STATE_DISC_LINKDEAD</a> );</div>
<div class="line">                            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>()-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( NULL );</div>
<div class="line">                            <span class="keyword">event</span>-&gt;New( <span class="stringliteral">&quot;quit&quot;</span>, <span class="stringliteral">&quot;quit&quot;</span>, socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a1d2b9eb6c351b9d43d16e649fa599466" title="Returns the associated Character, if any.">gCharacter</a>(), <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( <span class="stringliteral">&quot;quit&quot;</span> ), <a class="code" href="enum_8h.xhtml#aacea4a7e80c7ca11553910c740986045a15e6557b4ff5e76148a16c4adad8e407">EVENT_TYPE_CMD_CHARACTER</a>, <a class="code" href="config_8h.xhtml#a2e5cf1b99e6fb32492aeee4eeb9590d3" title="(Minutes / tick rate) before disconnecting an idle Character detached from an Account. Approx 5 minutes.">CFG_CHR_MAX_IDLE</a> );</div>
<div class="line">                            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( NULL );</div>
<div class="line">                        }</div>
<div class="line">                    }</div>
<div class="line">                }</div>
<div class="line"></div>
<div class="line">                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">else</span></div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb" title="Returns the amount of time the client has been idle.">gIdle</a>() + 1 ) )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::sIdle()-&gt; descriptor %ld returned false setting idle: %lu&quot;</span>, client_desc, socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb" title="Returns the amount of time the client has been idle.">gIdle</a>() + 1 );</div>
<div class="line">                <span class="comment">// todo: save character</span></div>
<div class="line">                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Process any pending output</span></div>
<div class="line">    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> )</div>
<div class="line">    {</div>
<div class="line">        socket_client = *si;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> = ++si;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            <span class="comment">// todo: save character</span></div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Disconnect sockets that have been idle for too long</span></div>
<div class="line">        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a9c982fdda7a3daa5b153eada40a3b6fb" title="Returns the amount of time the client has been idle.">gIdle</a>() &gt;= <a class="code" href="config_8h.xhtml#a9e1bbc3ba39f67dbf7398220cdca6441" title="(Minutes / tick rate) before disconnecting an idle socket. Approx 30 minutes.">CFG_SOC_MAX_IDLE</a> )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::gIdle()-&gt; disconnecting idle descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>( <a class="code" href="config_8h.xhtml#a8e2bae4932d5625144ae9f3bfc8c3fb0" title="String sent on disconnecting an idle socket.">CFG_STR_IDLE</a> );</div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="comment">// todo: save character</span></div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Found an active socket in the output list</span></div>
<div class="line">        <span class="keywordflow">if</span> ( FD_ISSET( client_desc, &amp;out_set ) &amp;&amp; socket_client-&gt;<a class="code" href="classSocketClient.xhtml#ad887231d8188cf23b88b6dad24b9408a" title="Tests if there is any output to be processed.">PendingOutput</a>() )</div>
<div class="line">        {</div>
<div class="line">            <span class="comment">// Send output, save game character and disconnect socket if unable to</span></div>
<div class="line">            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a6268f3d184970ec0076da657c39d2e80" title="Process data from the client&#39;s send buffer and transmit it via the socket.">Send</a>() )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::PollSockets()-&gt;SocketClient::PendingOutput()-&gt;SocketClient::Send()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line">                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">                <span class="comment">// todo: save character</span></div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a39dbe16fdc8c5f6fbd678c6540fbcd6c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a39dbe16fdc8c5f6fbd678c6540fbcd6c_icgraph.svg" width="430" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a266931bde9b1955346955140986d2b00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::ProcessEvents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00543">543</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>*, ei );</div>
<div class="line">    <a class="code" href="classEvent.xhtml" title="Actions that execute after a specified delay.">Event</a>* event;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( ei = <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.begin(); ei != <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.end(); ei = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97254b5ea5909c15b2a6f7fcfbf942b1">m_next_event</a> )</div>
<div class="line">    {</div>
<div class="line">        <span class="keyword">event</span> = *ei;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97254b5ea5909c15b2a6f7fcfbf942b1">m_next_event</a> = ++ei;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( !event-&gt;<a class="code" href="classEvent.xhtml#a65983b240559175bfabe83c640ed7147" title="Updates the Event by decrementing the remaining time.">Update</a>() )</div>
<div class="line">            event-&gt;<a class="code" href="classEvent.xhtml#ae00620af2a424d3d0041676e76b9303c" title="Execute the function stored within the Event object.">Run</a>();</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a266931bde9b1955346955140986d2b00_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a266931bde9b1955346955140986d2b00_icgraph.svg" width="448" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a2b4cec469bb99c2a45e49de5ba74d1ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::ProcessInput </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00564">564</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a05e235f398566bf49e21735cf00fc656" title="Define an iterator variable (name) of (type) using (container).">ITER</a>( vector, <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>*, si );</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>* socket_client;</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> client_desc = 0;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">for</span> ( si = <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.begin(); si != <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.end(); si = <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> )</div>
<div class="line">    {</div>
<div class="line">        socket_client = *si;</div>
<div class="line">        <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a6a7e62777998eefaa09ff69bd62bace6">m_next_socket_client</a> = ++si;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( ( client_desc = socket_client-&gt;<a class="code" href="classSocket.xhtml#a45d3aa99d71b868921543a4708471f82" title="Returns the file descriptor associated to the Socket.">gDescriptor</a>() ) &lt; 1 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ProcessInput()-&gt;SocketClient::gDescriptor()-&gt; returned invalid descriptor: %ld&quot;</span>, client_desc );</div>
<div class="line">            <span class="comment">// todo: save character</span></div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#a92fea2bf7e0f20578404ce1abb835a0b" title="Process data from the client&#39;s receive buffer and split it into commands to queue as necessary...">ProcessInput</a>() )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ProcessInput()-&gt;SocketClient::ProcessInput()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line">            <span class="comment">// todo: save character</span></div>
<div class="line">            socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">            <span class="keywordflow">continue</span>;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">if</span> ( socket_client-&gt;<a class="code" href="classSocketClient.xhtml#aa46590f5ac09115d9888fdb7c600ef1d" title="Tests if there are any commands in the queue to be processed.">PendingCommand</a>() )</div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">if</span> ( !socket_client-&gt;<a class="code" href="classSocketClient.xhtml#ad4f63c7d906310dc56a1217136047d7f" title="Interpret the command at the front of the queue.">ProcessCommand</a>() )</div>
<div class="line">            {</div>
<div class="line">                <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ProcessInput()-&gt;SocketClient::PendingCommand()-&gt;SocketClient::ProcessCommand()-&gt; descriptor %ld returned false&quot;</span>, client_desc );</div>
<div class="line">                <span class="comment">// todo: save character</span></div>
<div class="line">                socket_client-&gt;<a class="code" href="classSocketClient.xhtml#af09328648d18ae943c8866cf744e5aad" title="Unload a client&#39;s socket from memory that was previously loaded via SocketClient::New().">Delete</a>();</div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a2b4cec469bb99c2a45e49de5ba74d1ae_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a2b4cec469bb99c2a45e49de5ba74d1ae_icgraph.svg" width="438" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a16ea0639731dee10e1a253375b508a02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::RebootRecovery </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>reboot</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">reboot</td><td>True if the server was started via a reboot. Must be true for this to run. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000009">Todo:</a></b></dt><dd>Clean this up. </dd></dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00613">613</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    ifstream recovery;</div>
<div class="line">    <span class="keywordtype">string</span> key, value, line, silent;</div>
<div class="line">    <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a> *client = NULL;</div>
<div class="line">    <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a> *account = NULL;</div>
<div class="line">    <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a> *character = NULL;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( reboot )</div>
<div class="line">    {</div>
<div class="line">        recovery.open( <a class="code" href="config_8h.xhtml#a139b7703e057cd102ea853e5999f39fd" title="Directory for temporary files.">CFG_DAT_DIR_VAR</a> <span class="stringliteral">&quot;/&quot;</span> <a class="code" href="config_8h.xhtml#a44e2e94d8914eab0940c8c13d064e2f6" title="File for reboot data to be temporarily stored in.">CFG_DAT_FILE_REBOOT</a>, ifstream::in );</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">while</span> ( recovery.is_open() &amp;&amp; recovery.good() &amp;&amp; getline( recovery, line ) )</div>
<div class="line">        {</div>
<div class="line">            <span class="keywordflow">if</span> ( !<a class="code" href="namespaceUtils.xhtml#a4a4d3dfd2ddb691bc5bcff82252c058b" title="Splits a string in the format of key=value. Retains any whitespace in the value.">Utils::KeyValue</a>( key, value, line) )</div>
<div class="line">            {</div>
<div class="line">                cout &lt;&lt; <span class="stringliteral">&quot;Error reading line &quot;</span> &lt;&lt; line &lt;&lt; endl;</div>
<div class="line">                <span class="keywordflow">continue</span>;</div>
<div class="line">            }</div>
<div class="line"></div>
<div class="line">            <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;slnt&quot;</span> )</div>
<div class="line">                silent = value;</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;desc&quot;</span> )</div>
<div class="line">            {</div>
<div class="line">                client = <span class="keyword">new</span> <a class="code" href="classSocketClient.xhtml" title="SocketClient extends the Socket class to implement remote-host socket functions.">SocketClient</a>();</div>
<div class="line">                client-&gt;<a class="code" href="classSocketClient.xhtml#a8399ef20292e9f3ec83b5c4bec2e105b" title="Build a SocketClient for a new client connection and set all attributes.">New</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ), <span class="keyword">true</span> );</div>
<div class="line">            }</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;port&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocket.xhtml#a24c8132ced233add89f4fda68284e578" title="Sets the port that was opened for the socket.">sPort</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;host&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocket.xhtml#a14e5e2493abcae97043297dd170e7a39" title="Sets the hostname of the socket.">sHostname</a>( value );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;recv&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocket.xhtml#aec278bc5096a3087a7bb6a1ed06d7ddd" title="Increment the total count of bytes received by the socket.">aBytesRecvd</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;sent&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocket.xhtml#a688f0d2182f7ca098de3f76156efad0a" title="Increment the total count of bytes sent by the socket.">aBytesSent</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;idle&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocketClient.xhtml#a686aea73a8e9c9dbaac6438ec1b24293" title="Set the idle timer value of the socket.">sIdle</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;stat&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocketClient.xhtml#ab5e6737c8acd4aaa21268e10c1a050b4" title="Set the connection state value of the socket.">sState</a>( atoi( <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( value ) ) );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;acct&quot;</span> )</div>
<div class="line">                client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aa2795241d82649418f379522adb32897a">SOC_LOGIN_NAME</a>, value );</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;pasw&quot;</span> )</div>
<div class="line">            {</div>
<div class="line">                account = <span class="keyword">new</span> <a class="code" href="classAccount.xhtml" title="Security structure to maintain characters, roles, and permissions.">Account</a>();</div>
<div class="line">                client-&gt;<a class="code" href="classSocketClient.xhtml#ad6d652d220b5b6820e0d15a328ad9484" title="Set the login command or arguments to be passed between handler functions.">sLogin</a>( <a class="code" href="enum_8h.xhtml#a24c6d1cb52c9ac856a707a99c2308b2aaef7df213742c1c08fe0d427288d8f819">SOC_LOGIN_PASSWORD</a>, value );</div>
<div class="line">                account-&gt;<a class="code" href="classAccount.xhtml#adc4545f17264112e532b5a48abe94baf" title="Create a new account.">New</a>( client, <span class="keyword">true</span> );</div>
<div class="line">            }</div>
<div class="line">            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( key == <span class="stringliteral">&quot;char&quot;</span> )</div>
<div class="line">            {</div>
<div class="line">                character = <span class="keyword">new</span> <a class="code" href="classCharacter.xhtml" title="An actor within the game world.">Character</a>();</div>
<div class="line">                client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#a42914cf1147f5c5a480dbfcb9a0ff3fe" title="Sets the active Character associated with the account.">sCharacter</a>( character );</div>
<div class="line">                character-&gt;<a class="code" href="classCharacter.xhtml#a622c35f2465a934848d493cd2a596584" title="Sets the account of this character.">sAccount</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>() );</div>
<div class="line">                character-&gt;<a class="code" href="classCharacter.xhtml#a829a28ec5f8573f3f53684ac4dcb75bb" title="Create a new character.">New</a>( client-&gt;<a class="code" href="classSocketClient.xhtml#a56e10cbe469179d7d7bc18eae6ca351c" title="Returns the Account object associated to this SocketClient.">gAccount</a>()-&gt;<a class="code" href="classAccount.xhtml#acee0aed5b91b420a7dbcf37b4b5d08e8" title="Returns the id of the account.">gId</a>() + <span class="stringliteral">&quot;.&quot;</span> + value + <span class="stringliteral">&quot;.&quot;</span> + <a class="code" href="config_8h.xhtml#a2339c99068cee7dd8024d0097583cdee" title="File extension to use for player character files.">CFG_DAT_FILE_PLR_EXT</a>, true );</div>
<div class="line">                <a class="code" href="namespaceHandler.xhtml#a571519b889d3750c63b9dc3418449bcb" title="Places the character loaded against the account into the game world.">Handler::EnterGame</a>( client, <span class="stringliteral">&quot;reboot&quot;</span>, silent );</div>
<div class="line">            }</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        recovery.close();</div>
<div class="line">        ::unlink( <a class="code" href="config_8h.xhtml#a139b7703e057cd102ea853e5999f39fd" title="Directory for temporary files.">CFG_DAT_DIR_VAR</a> <span class="stringliteral">&quot;/&quot;</span> CFG_DAT_FILE_REBOOT );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a16ea0639731dee10e1a253375b508a02_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a16ea0639731dee10e1a253375b508a02_icgraph.svg" width="456" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a4073e768d93ce18c25cb5996f4cd3729"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool Server::ReloadCommand </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>The name of the <a class="el" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a> to be reloaded. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">false</td><td>Returned if the command is unable to be reloaded. </td></tr>
    <tr><td class="paramname">true</td><td>Returned if the command was successfully reloaded. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00683">683</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>* command = NULL;</div>
<div class="line">    <span class="keywordtype">string</span> file;</div>
<div class="line"></div>
<div class="line">    command = <a class="code" href="namespaceHandler.xhtml#a02ba68c0c416219816c97189ea8bae4d" title="Locates a Command associated with the game.">Handler::FindCommand</a>( name );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( command == NULL )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ReloadCommand()-&gt;Server::FindCommand()-&gt; command %s returned NULL&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( name ) );</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    file = command-&gt;<a class="code" href="classCommand.xhtml#a63b8f3fc40a0cc9e02fcaa2ea2329c40" title="Return the filename of the associated Plugin object.">gFile</a>();</div>
<div class="line">    command-&gt;<a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Delete</a>();</div>
<div class="line">    command = <span class="keyword">new</span> <a class="code" href="classCommand.xhtml" title="Functions that are built and loaded independently as Plugin objects.">Command</a>();</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !command-&gt;<a class="code" href="classCommand.xhtml#a6b8eed27f76619d07effd72372a4be48" title="Load a plugin command from CFG_DAT_DIR_OBJ.">New</a>( file ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( flags, <span class="stringliteral">&quot;Server::ReloadCommand()-&gt;Command::New()-&gt; command %s returned false&quot;</span>, <a class="code" href="macros_8h.xhtml#a5e53b0e3450b3de556a9b2326ad5cfcc" title="Output std::string to const char*.">CSTR</a>( file ) );</div>
<div class="line">        command-&gt;<a class="code" href="classCommand.xhtml#afc0d482427309deb78e094fa787d1477" title="Unload a command from memory that was previously loaded via Command::New().">Delete</a>();</div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Ensure we keep the same element order as before</span></div>
<div class="line">    sort( <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.begin(), <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.end() );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a4073e768d93ce18c25cb5996f4cd3729_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a4073e768d93ce18c25cb5996f4cd3729_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a9b7082bbc9faca6eb84180f856116762"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::Shutdown </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">status</td><td>The shutdown code to pass to exit() when NAMS exits. Either EXIT_FAILURE or EXIT_SUCCESS. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00719">719</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordtype">bool</span> was_running = !<a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97b9415b50cd9bd2b9a96d23553789c4">m_shutdown</a>;</div>
<div class="line"></div>
<div class="line">    <a class="code" href="namespaceServer.xhtml#ae1bb8d3c7c71119bae6dd4205fd6c0cc" title="Sends a message to all clients connected to the Server.">Broadcast</a>( <a class="code" href="config_8h.xhtml#ac4f506b4cbf175bd5fd4539fe3cafdea" title="String broadcast to all clients when the server is shutting down.">CFG_STR_SHUTDOWN</a> );</div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97b9415b50cd9bd2b9a96d23553789c4">m_shutdown</a> = <span class="keyword">true</span>;</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Write runtime settings</span></div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#a39f409e995ec914244e9eff416d4477e" title="Serialize runtime configuration settings and write them to CFG_DAT_FILE_SETTINGS.">Serialize</a>();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Cleanup commands</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#a622badbc988ce65ebb3b4c1c8eb197b4" title="All commands loaded into memory.">command_list</a>.front()-&gt;Delete();</div>
<div class="line">    <span class="comment">// Cleanup events</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#a13278fb7b3325a6779fcb97c172c16ce" title="All events pending execution.">event_list</a>.front()-&gt;Delete();</div>
<div class="line">    <span class="comment">// Cleanup exits</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#a2d61b6ac5b09df453f39e086d2ec9ed5" title="All exits that exist within the server.">exit_list</a>.front()-&gt;Delete();</div>
<div class="line">    <span class="comment">// Cleanup locations</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#acff2cb6f4f515c3405c76c53e1c26744" title="All locations that exist within the server.">location_list</a>.front()-&gt;Delete();</div>
<div class="line">    <span class="comment">// Cleanup object copies</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a408253363e78188e2f70717ee46e7fcc" title="All objects that exist as a copy of a template within the server.">object_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#a408253363e78188e2f70717ee46e7fcc" title="All objects that exist as a copy of a template within the server.">object_list</a>.front()-&gt;Delete();</div>
<div class="line">    <span class="comment">// Cleanup object templates</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#a811067e3e4a749dd9e7f370132e1d206" title="All objects that exist as templates within the server.">object_template_list</a>.front()-&gt;Delete();</div>
<div class="line">    <span class="comment">// Cleanup socket clients</span></div>
<div class="line">    <span class="keywordflow">while</span> ( !<a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.empty() )</div>
<div class="line">        <a class="code" href="list_8cpp.xhtml#a5c8453510b62fb7a9d2a31b599ae26fb" title="All SocketClient objects connected to the server.">socket_client_list</a>.front()-&gt;Delete();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Only output if the server actually booted; otherwise it probably faulted while getting a port from main()</span></div>
<div class="line">    <span class="keywordflow">if</span> ( was_running )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( status == EXIT_SUCCESS )</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#ac53ab4c77c45a5e739a054086eec42fa" title="String to write to log on EXIT_SUCCESS.">CFG_STR_EXIT_SUCCESS</a> );</div>
<div class="line">        <span class="keywordflow">else</span></div>
<div class="line">            <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <a class="code" href="config_8h.xhtml#ac890497fb16954e976eabed51b23b1dd" title="String to write to log on EXIT_FAILURE.">CFG_STR_EXIT_FAILURE</a> );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">//Cleanup globals last as logging the above depends on them</span></div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#ac8f796a3da103223e7f176800f4ef929" title="Unload runtime configuration from memory.">Delete</a>();</div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a04c80b5a0190d979dce3b5b53c7fe122" title="Unload runtime statistics from memory.">Delete</a>();</div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a14a06f48b3f3d845f54e09c1cbdd8960" title="Unload global variables from memory.">Delete</a>();</div>
<div class="line"></div>
<div class="line">    ::exit( status );</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a9b7082bbc9faca6eb84180f856116762_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a9b7082bbc9faca6eb84180f856116762_icgraph.svg" width="611" height="124"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a19a1e493e1fb50a56d9c77332543d565"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::Startup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd">sint_t</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00772">772</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line">    <a class="code" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a>* socket_server = NULL;</div>
<div class="line">    <a class="code" href="limits_8h.xhtml#a4b065143310513611ddcce5fb87f9dbd" title="A signed integer value based upon system limits.">sint_t</a> descriptor = 0;</div>
<div class="line">    <span class="keywordtype">bool</span> reboot = <span class="keyword">false</span>;</div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a97b9415b50cd9bd2b9a96d23553789c4">m_shutdown</a> = <span class="keyword">false</span>;</div>
<div class="line"></div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;%s started.&quot;</span>, <a class="code" href="config_8h.xhtml#ae0189326402738016ca074f43606978f" title="The current server version.">CFG_STR_VERSION</a> );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Fresh boot, otherwise it would already be assigned during a reboot</span></div>
<div class="line">    <span class="keywordflow">if</span> ( desc == 0 )</div>
<div class="line">    {</div>
<div class="line">        <span class="keywordflow">if</span> ( ( descriptor = ::socket( AF_INET6, SOCK_STREAM, 0 ) ) &lt; 0 )</div>
<div class="line">        {</div>
<div class="line">            <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;socket()-&gt;&quot;</span> );</div>
<div class="line">            <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">    {</div>
<div class="line">        descriptor = desc;</div>
<div class="line">        reboot = <span class="keyword">true</span>;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    socket_server = <span class="keyword">new</span> <a class="code" href="classSocketServer.xhtml" title="SocketServer extends the Socket class to implement server-side socket functions.">SocketServer</a>();</div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a60944d3654141d136ae0f1af263c803b">m_listen</a> = socket_server;</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !socket_server-&gt;<a class="code" href="classSocketServer.xhtml#a0e621d024f754a8c045b4243280cabbe" title="Build a socket for a server and set all attributes.">New</a>( descriptor, reboot ) )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;SocketServer::New()-&gt; returned false&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Bump ourselves to the root folder for file paths</span></div>
<div class="line">    <span class="keywordflow">if</span> ( !reboot &amp;&amp; ::chdir( <span class="stringliteral">&quot;..&quot;</span> ) &lt; 0 )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#a39c64b6565bddaca7e2af8518ee764e3" title="Wrap Utils::Logger() based on a locally generated errno value from system functions.">LOGERRNO</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;chdir()-&gt;&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="globals_8h.xhtml#a23b9f1d96af6a6a4afad680b8da9d267">g_config</a>-&gt;<a class="code" href="classServer_1_1Config.xhtml#a54dba418bfd3365ccfb30bda37ccd461" title="Unserialize runtime configuration settings from CFG_DAT_FILE_SETTINGS.">Unserialize</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Config::Unserialize()-&gt; returned false&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#ac2e1d14caee54a38a89c2394abe6e5a5" title="Search all subfolders of CFG_DAT_DIR_COMMAND and call Command::New() to load each file found to memor...">LoadCommands</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;Server::LoadCommands()-&gt; returned false&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a9b8efad79a32f2356d431788449e1f82" title="Search all subfolders of CFG_DAT_DIR_WORLD and call Location::New() to load each file found to memory...">LoadLocations</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;Server::LoadLocations()-&gt; returned false&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a0a8c7c124f8cc8e5e6a9c7b067be5ff5" title="Search all subfolders of CFG_DAT_DIR_WORLD and call Object::New() to load each file found to memory...">LoadObjects</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Startup()-&gt;Server::LoadObjects()-&gt; returned false&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <a class="code" href="namespaceServer.xhtml#a21b284fbb08f1d61510945f64d0673cb" title="Links Exit pointers together after all locations are loaded.">LinkExits</a>();</div>
<div class="line">    <a class="code" href="namespaceServer.xhtml#a16ea0639731dee10e1a253375b508a02" title="Recovers the server state and re-connects client sockets after a reboot.">RebootRecovery</a>( reboot );</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Cleanup any leftovers from a hard crash mid-write</span></div>
<div class="line">    <a class="code" href="namespaceUtils.xhtml#a57b7c6b0c6ea6f1498129d9c9a16d8a8" title="Unlinks any temp files leftover from a failed write.">Utils::CleanupTemp</a>( <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a21ff42ce048c463e19992aed5d2509bc">m_dir_close</a>, <a class="code" href="globals_8h.xhtml#a8a2ef3550d9c1343e2a0fc84f8bc433f">g_stats</a>-&gt;<a class="code" href="classServer_1_1Stats.xhtml#a58c214b405fa0d6599683f33c8cdd56d">m_dir_open</a> );</div>
<div class="line"></div>
<div class="line">    <a class="code" href="macros_8h.xhtml#ac116c157aff5572959fd33c0ecd913da" title="Wrap Utils::FormatString() within Utils::Logger() for brevity and ease of future maintenance.">LOGFMT</a>( 0, <span class="stringliteral">&quot;%s is ready on port %lu.&quot;</span>, <a class="code" href="config_8h.xhtml#ae0189326402738016ca074f43606978f" title="The current server version.">CFG_STR_VERSION</a>, <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#ad75b902c5e4d9bc524ac87cfa1f6ee49">m_port</a> );</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( 0, <span class="stringliteral">&quot;Last compiled on &quot;</span> __DATE__ <span class="stringliteral">&quot; at &quot;</span> __TIME__ <span class="stringliteral">&quot;.&quot;</span> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a19a1e493e1fb50a56d9c77332543d565_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a19a1e493e1fb50a56d9c77332543d565_icgraph.svg" width="235" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a50b81aa91d8fdaee6f52c5c5ec987990"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void Server::Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">void</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="server_8cpp_source.xhtml#l00851">851</a> of file <a class="el" href="server_8cpp_source.xhtml">server.cpp</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="macros_8h.xhtml#a56f9e62010649bf59e47724b826e3502" title="Define a bitset variable (name) with UTILS_DEBUG and UTILS_TYPE_ERROR already enabled.">UFLAGS_DE</a>( flags );</div>
<div class="line"></div>
<div class="line">    <a class="code" href="globals_8h.xhtml#a4746b8ff4575e45ad5e0850f331e713e">g_global</a>-&gt;<a class="code" href="classServer_1_1Global.xhtml#a38310cb58e1f644fa74ab8e1f5321e4e">m_time_current</a> = chrono::high_resolution_clock::now();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Poll all sockets for changes</span></div>
<div class="line">    <span class="keywordflow">if</span> ( !<a class="code" href="namespaceServer.xhtml#a39dbe16fdc8c5f6fbd678c6540fbcd6c" title="Poll all SocketClient objects that are communicating with the associated SocketServer object...">PollSockets</a>() )</div>
<div class="line">    {</div>
<div class="line">        <a class="code" href="macros_8h.xhtml#acd5f0d05a4501b560a2fbc0799039598" title="Wrap Utils::Logger() for brevity and ease of future maintenance.">LOGSTR</a>( flags, <span class="stringliteral">&quot;Server::Update()-&gt;Server::PollSockets()-&gt; returned false&quot;</span> );</div>
<div class="line">        <a class="code" href="namespaceServer.xhtml#a9b7082bbc9faca6eb84180f856116762" title="Perform a clean shutdown of the NAMS Server providing a chance to complete disk writes and free all m...">Shutdown</a>( EXIT_FAILURE );</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Process any input received</span></div>
<div class="line">    <a class="code" href="namespaceServer.xhtml#a2b4cec469bb99c2a45e49de5ba74d1ae" title="Processes input from all active SocketClient objects.">ProcessInput</a>();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Process any scheduled events</span></div>
<div class="line">    <a class="code" href="namespaceServer.xhtml#a266931bde9b1955346955140986d2b00" title="Process any scheduled events tied to the Server.">ProcessEvents</a>();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Sleep to control game pacing</span></div>
<div class="line">    ::usleep( <a class="code" href="macros_8h.xhtml#a5fc45be6b0bb71dc5d4c6390d98bf3ee" title="This is the maximum value usleep will take per man (3) usleep – 1 second.">USLEEP_MAX</a> / <a class="code" href="config_8h.xhtml#abf59791d9bc371bb841717a963babfc3" title="How many cycles per second should be processed.">CFG_GAM_PULSE_RATE</a> );</div>
<div class="line"></div>
<div class="line">    <span class="keywordflow">return</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceServer_a50b81aa91d8fdaee6f52c5c5ec987990_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

<p><div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceServer_a50b81aa91d8fdaee6f52c5c5ec987990_icgraph.svg" width="235" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jun 16 2013 20:59:32 for NAMS - Not Another MUD Server by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
